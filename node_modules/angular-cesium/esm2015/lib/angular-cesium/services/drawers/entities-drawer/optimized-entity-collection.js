/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class OptimizedEntityCollection {
    /**
     * @param {?} entityCollection
     * @param {?=} collectionSize
     * @param {?=} updateRate
     */
    constructor(entityCollection, collectionSize = -1, updateRate = -1) {
        this.entityCollection = entityCollection;
        this._isSuspended = false;
        this._isHardSuspend = false;
        this._updateRate = updateRate;
        this._collectionSize = collectionSize;
    }
    /**
     * @param {?} show
     * @return {?}
     */
    setShow(show) {
        this.entityCollection.show = show;
    }
    /**
     * @return {?}
     */
    get isSuspended() {
        return this._isSuspended;
    }
    /**
     * @return {?}
     */
    get updateRate() {
        return this._updateRate;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set updateRate(value) {
        this._updateRate = value;
    }
    /**
     * @return {?}
     */
    get collectionSize() {
        return this._collectionSize;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set collectionSize(value) {
        this._collectionSize = value;
    }
    /**
     * @return {?}
     */
    collection() {
        return this.entityCollection;
    }
    /**
     * @return {?}
     */
    isFree() {
        return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;
    }
    /**
     * @param {?} entity
     * @return {?}
     */
    add(entity) {
        this.suspend();
        return this.entityCollection.add(entity);
    }
    /**
     * @param {?} entity
     * @return {?}
     */
    remove(entity) {
        this.suspend();
        return this.entityCollection.remove(entity);
    }
    /**
     * @param {?} entity
     * @return {?}
     */
    removeNoSuspend(entity) {
        this.entityCollection.remove(entity);
    }
    /**
     * @return {?}
     */
    removeAll() {
        this.suspend();
        this.entityCollection.removeAll();
    }
    /**
     * @param {?} callback
     * @param {?=} once
     * @return {?}
     */
    onEventSuspension(callback, once = false) {
        this._onEventSuspensionCallback = { callback, once };
        return () => {
            this._onEventSuspensionCallback = undefined;
        };
    }
    /**
     * @param {?} callback
     * @param {?=} once
     * @return {?}
     */
    onEventResume(callback, once = false) {
        this._onEventResumeCallback = { callback, once };
        if (!this._isSuspended) {
            this.triggerEventResume();
        }
        return () => {
            this._onEventResumeCallback = undefined;
        };
    }
    /**
     * @return {?}
     */
    triggerEventSuspension() {
        if (this._onEventSuspensionCallback !== undefined) {
            /** @type {?} */
            const callback = this._onEventSuspensionCallback.callback;
            if (this._onEventSuspensionCallback.once) {
                this._onEventSuspensionCallback = undefined;
            }
            callback();
        }
    }
    /**
     * @return {?}
     */
    triggerEventResume() {
        if (this._onEventResumeCallback !== undefined) {
            /** @type {?} */
            const callback = this._onEventResumeCallback.callback;
            if (this._onEventResumeCallback.once) {
                this._onEventResumeCallback = undefined;
            }
            callback();
        }
    }
    /**
     * @return {?}
     */
    suspend() {
        if (this._updateRate < 0) {
            return;
        }
        if (this._isHardSuspend) {
            return;
        }
        if (!this._isSuspended) {
            this._isSuspended = true;
            this.entityCollection.suspendEvents();
            this.triggerEventSuspension();
            this._suspensionTimeout = setTimeout(() => {
                this.entityCollection.resumeEvents();
                this.triggerEventResume();
                this._isSuspended = false;
                this._suspensionTimeout = undefined;
            }, this._updateRate);
        }
    }
    /**
     * @return {?}
     */
    hardSuspend() {
        this.entityCollection.suspendEvents();
        this._isHardSuspend = true;
    }
    /**
     * @return {?}
     */
    hardResume() {
        this.entityCollection.resumeEvents();
        this._isHardSuspend = false;
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._updateRate;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._collectionSize;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._isSuspended;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._isHardSuspend;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._suspensionTimeout;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._onEventSuspensionCallback;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype._onEventResumeCallback;
    /**
     * @type {?}
     * @private
     */
    OptimizedEntityCollection.prototype.entityCollection;
}
//# sourceMappingURL=data:application/json;base64,