{"version":3,"sources":["ng://angular-cesium/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","ng://angular-cesium/lib/angular-cesium/models/scene-mode.enum.ts","ng://angular-cesium/lib/angular-cesium/services/camera/camera.service.ts","node_modules/tslib/tslib.es6.js","ng://angular-cesium/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","ng://angular-cesium/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium/cesium.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","ng://angular-cesium/lib/angular-cesium/services/context-menu/context-menu.service.ts","ng://angular-cesium/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/models/ac-keyboard-action.enum.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","ng://angular-cesium/lib/angular-cesium/services/plonter/plonter.service.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","ng://angular-cesium/lib/angular-cesium/services/map-layers/map-layers.service.ts","ng://angular-cesium/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","ng://angular-cesium/lib/angular-cesium/services/screenshot/screenshot.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map/ac-map.component.ts","ng://angular-cesium/lib/angular-cesium/services/layer-service/layer-service.service.ts","ng://angular-cesium/lib/angular-cesium/models/action-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","ng://angular-cesium/lib/angular-cesium/utils/checker.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","ng://angular-cesium/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","ng://angular-cesium/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","ng://angular-cesium/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","ng://angular-cesium/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.module.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","ng://angular-cesium/lib/angular-cesium/models/ac-entity.ts","ng://angular-cesium/lib/angular-cesium/models/ac-notification.ts","ng://angular-cesium/lib/angular-cesium/models/map-layer-provider-options.enum.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label/ac-label.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point/ac-point.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html/ac-html.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","ng://angular-cesium/lib/cesium-extender/primitives/html.ts","ng://angular-cesium/lib/cesium-extender/collections/html.ts","ng://angular-cesium/lib/cesium-extender/extender.ts","ng://angular-cesium/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pipe-config-map.ts","ng://angular-cesium/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","ng://angular-cesium/lib/angular-cesium/angular-cesium.module.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","ng://angular-cesium/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","ng://angular-cesium/lib/heatmap/cesium-heatmap-material-creator.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-mode.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-actions.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-point.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/label-props.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polygon.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/utils.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-arc.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-circle.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-ellipse.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/circle-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-hippodrome.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts"],"names":["AssociativeArray","Cesium","Color","ColorGeometryInstanceAttribute","defined","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","ShowGeometryInstanceAttribute","Primitive","ShadowMode","BoundingSphereState","ColorMaterialProperty","MaterialProperty","Property","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","this","depthFailMaterial","undefined","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","definitionChanged","addEventListener","prototype","onMaterialChanged","isMaterial","updater","material","updaterMaterial","equals","add","instance","id","set","hasConstantFill","fillMaterialProperty","isConstant","distanceDisplayConditionProperty","that","entity","propertyName","newValue","oldValue","remove","unsubscribe","get","update","time","i","isUpdated","removedCount","geometries","values","geometriesLength","length","geometryItem","originalAttributes","show","value","color","depthFailColor","depthFailAppearance","getValue","asynchronous","geometryInstances","appearance","flat","DISABLED","CAST_ONLY","removeAll","ready","getGeometryInstanceAttributes","colorProperty","resultColor","getValueOrDefault","WHITE","_lastColor","clone","toValue","depthFailColorProperty","depthColor","_lastDepthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","updateShows","contains","getBoundingSphere","result","PENDING","boundingSphere","FAILED","DONE","removeAllPrimitives","wasFixed","destroy","ANGULAR_CESIUM_CONFIG","InjectionToken","ConfigurationService","config","fixEntitiesShadows","fixCesiumEntitiesShadows","StaticGeometryColorBatch","items","createFillGeometryInstance","_solidItems","_translucentItems","item","batch","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","push","Injectable","Optional","type","Inject","args","SCENE3D","COLUMBUS_VIEW","SCENE2D","PERFORMANCE_SCENE2D","CameraService","isSceneModePerformance2D","init","cesiumService","viewer","getViewer","scene","getScene","screenSpaceCameraController","camera","lastRotate","enableRotate","lastTilt","enableTilt","lastLook","enableLook","_listenToSceneModeMorph","callback","morphListenerCancelFn","morphStart","_revertCameraProperties","getCamera","getScreenSpaceCameraController","getMinimumZoom","minimumZoomDistance","setMinimumZoom","amount","getMaximumZoom","maximumZoomDistance","setMaximumZoom","tilt","rotate","lock","enableTranslate","translate","enableZoom","zoom","enableInputs","inputs","setSceneMode","sceneMode","duration","_this","SceneMode","morphTo3D","morphToColumbusView","morphTo2D","morphCompleteEventListener_1","morphComplete","setView","destination","Cartesian3","fromDegrees","Math","min","PERFORMANCE_2D_ALTITUDE","orientation","pitch","toRadians","bind","cameraFlyTo","options","flyTo","target","zoomIn","defaultZoomAmount","zoomOut","zoomTo","offset","setRotation","degreesInRadians","heading","lockRotation","trackEntity","trackedEntity","Promise","resolve","flyToDuration","altitude","entPosCar3","position","JulianDate","now","entPosCart","Cartographic","fromCartesian","zoomAmount_1","height","flyToPosition","fromRadians","longitude","latitude","complete","setTimeout","untrackEntity","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","n","arguments","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","error","__spread","concat","ViewerFactory","cesium","createViewer","mapContainer","Viewer","contextOptions","webgl","preserveDrawingBuffer","imageryProvider","createTileMapServiceImageryProvider","url","buildModuleUrl","baseLayerPicker","geocoder","ViewerConfiguration","nextViewerOptionsIndex","nextViewerModifierIndex","defineProperty","_viewerOptions","getNextViewerOptions","_viewerModifier","getNextViewerModifier","CesiumService","ngZone","viewerFactory","viewerConfiguration","map","runOutsideAngular","cesiumViewer","viewerModifier","getCanvas","getMap","NgZone","decorators","MOUSE_MOVE","ScreenSpaceEventType","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOUBLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_START","PINCH_END","PINCH_MOVE","RIGHT_CLICK","RIGHT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","LONG_LEFT_PRESS","LONG_RIGHT_PRESS","LONG_MIDDLE_PRESS","LEFT_CLICK_DRAG","RIGHT_CLICK_DRAG","MIDDLE_CLICK_DRAG","NO_PICK","PICK_FIRST","PICK_ONE","PICK_ALL","ContextMenuService","_showContextMenu","_contextMenuChangeNotifier","EventEmitter","_onOpen","_onClose","_defaultContextMenuOptions","closeOnLeftCLick","closeOnLeftClickPriority","_options","_position","_content","mapEventsManager","open","content","close","leftClickRegistration","register","event","CesiumEvent","pick","PickOptions","priority","leftClickSubscription","subscribe","emit","dispose","LatLonVectors","geodesy['LatLonVectors']","window","geodesy","CoordinateConverter","screenToCartesian3","screenPos","addMapCanvasBoundsToPos","screenPosition","mapBounds","canvas","getBoundingClientRect","x","left","y","top","pickEllipsoid","Error","screenToCartographic","ellipsoid","cartesian3ToCartographic","cartesian","degreesToCartographic","radiansToCartographic","degreesToUTM","LatLonEllipsoidal","toUtm","UTMToDegrees","zone","hemisphereType","easting","northing","geodesyToCesiumObject","Utm","toLatLonE","geodesyRadians","lon","lat","midPointToCartesian3","first","second","toDeg","rad","toDegrees","firstPoint","secondPoint","middlePoint","midpointTo","middlePointByScreen","position0","position1","screenPosition1","SceneTransforms","wgs84ToWindowCoordinates","screenPosition2","middleScreenPoint","Cartesian2","pickPosition","bearingTo","bearingToCartesian","firstCartesian3","secondCartesian3","firstCart","secondCart","BasicDrawerService","setPropsAssigner","assigner","_propsAssigner","PrimitivesDrawerService","drawerType","_super","_show","tslib_1.__extends","_cesiumCollection","_primitiveCollectionWrap","PrimitiveCollection","cesiumProps","_i","setShow","showValue","getShow","GeoUtilsService","pointByLocationDistanceAndAzimuth","currentLocation","meterDistance","radianAzimuth","deprecated","resultPosition","resultDistance","distance","Ellipsoid","WGS84","maximumRadius","cartographicLocation","cartesianLocation","counter","distanceFactorRangeMax","distanceFactorRangeMin","max","_pointByLocationDistanceAndAzimuth","curLat","curLon","destinationLat","asin","sin","cos","destinationLon","atan2","PI","pos0","pos1","getPositionsDelta","z","addDeltaToPosition","delta","updateReference","cartographic","middleCartesian3Point","screenPositionToCartesian3","ArcDrawerService","PolylineCollection","_calculateArcPositions","quality","pointsArray","point","center","radius","angle","_calculateTriangle","_calculateArc","arcPoints","drawEdges","positions","Material","fromType","uniforms","constantColor","width","ellipse","EllipseGraphics","EllipsoidGraphics","polygon","PolygonGraphics","polyline","PolylineGraphics","polylineVolume","PolylineVolumeGraphics","box","BoxGraphics","corridor","CorridorGraphics","cylinder","CylinderGraphics","label","LabelGraphics","billboard","BillboardGraphics","model","ModelGraphics","path","PathGraphics","PointGraphics","rectangle","RectangleGraphics","wall","WallGraphics","OptimizedEntityCollection","entityCollection","collectionSize","updateRate","_isSuspended","_isHardSuspend","_updateRate","_collectionSize","collection","isFree","suspend","removeNoSuspend","onEventSuspension","once","_onEventSuspensionCallback","onEventResume","_onEventResumeCallback","triggerEventResume","triggerEventSuspension","suspendEvents","_suspensionTimeout","resumeEvents","hardSuspend","hardResume","EntitiesDrawerService","graphicsType","defaultOptions","collectionMaxSize","collectionSuspensionTime","collectionsNumber","entityCollections","Map","graphicsTypeName","GraphicsType","getFreeEntitiesCollection","freeEntityCollection","forEach","finalOptions","dataSources","dataSource","CustomDataSource","entities","optimizedEntityCollection","entityObject","_a","description","viewFrom","name","suspendEntityCollection","CallbackProperty","_isConstant","has","BillboardDrawerService","CzmlDrawerService","czmlStream","CzmlDataSource","process","czmlPacket","removeById","acEntity","EllipseDrawerService","LabelDrawerService","PointDrawerService","PolygonDrawerService","PolylineDrawerService","PolylinePrimitiveDrawerService","withColorMaterial","cesiumObject","CAMERA_FORWARD","CAMERA_BACKWARD","CAMERA_RIGHT","CAMERA_LEFT","CAMERA_UP","CAMERA_DOWN","CAMERA_LOOK_RIGHT","CAMERA_LOOK_LEFT","CAMERA_LOOK_UP","CAMERA_LOOK_DOWN","CAMERA_TWIST_RIGHT","CAMERA_TWIST_LEFT","CAMERA_ROTATE_RIGHT","CAMERA_ROTATE_LEFT","CAMERA_ROTATE_UP","CAMERA_ROTATE_DOWN","CAMERA_ZOOM_IN","CAMERA_ZOOM_OUT","PREDEFINED_KEYBOARD_ACTIONS","KeyboardAction","params","moveRate","globe","cartesianToCartographic","moveForward","moveBackward","moveUp","moveDown","moveRight","moveLeft","currentPosition","positionCartographic","lookFactor","lookRight","lookLeft","lookUp","lookDown","twistRight","twistLeft","rotateRight","rotateLeft","rotateUp","rotateDown","IGNORED","NOT_PRESSED","PRESSED","KeyboardControlService","document","_currentDefinitions","_activeDefinitions","_keyMappingFn","defaultKeyMappingFn","focus","handleKeydown","handleKeyup","handleTick","setKeyboardControls","definitions","keyMappingFn","outsideOfAngularZone","removeKeyboardControls","registerEvents","keys","key","state","KeyEventState","action","keyboardEvent","unregisterEvents","getAction","char","keyEvent","String","fromCharCode","keyCode","execute","getParams","validation","actionState","executeAction","paramsDef","execution","isNumber","predefinedAction","registerToEvents","clock","onTick","removeEventListener","DOCUMENT","CesiumPureEventObserver","modifier","eventsHandler","observer","Observable","setInputAction","movement","startPosition","endPosition","CesiumLongPressObserver","eventFactory","startEvent","stopEvent","startEventObservable","stopEventObservable","publish","pipe","mergeMap","observableOf","delay","LONG_PRESS_EVENTS_DURATION","takeUntil","CesiumEventBuilder","cesiumEventsObservables","getEventFullName","toString","screenSpaceEventHandler","eventName","eventObserver","createCesiumEventObservable","cesiumEventObservable","longPressEvents","createSpecialCesiumEventObservable","connect","Set","PlonterService","_entitesToPlonter","_plonterChangeNotifier","_plonterObserver","Subject","_plonterShown","_eventResult","plonterIt","eventResult","resolvePlonter","UtilsService","array","reduce","accumulator","currentValue","indexOf","CesiumDragDropHelper","getDragEventTypes","dragEvent","mouseDownEvent","mouseUpEvent","dragEvents","Registration","observable","stopper","isPaused","MapEventsManagerService","eventBuilder","plonterService","eventRegistrations","input","entityType","eventRegistration","createEventRegistration","pickFilter","registrationObservable","disposeObservable","sortRegistrationsByPriority","registrations","index","splice","sort","a","currentPriority","registration","pickOption","createDragEvent","filter","triggerPick","cesiumEntities","picksAndMovement","addEntities","switchMap","entitiesAndMovement","plonter","mouseUpObservable","mouseMoveObservable","mouseDownRegistration","dropSubject","dragObserver","lastMove","dragStartPositionX","dragStartPositionY","drop","tap","dropEvent","merge","pickOptions","picks","drillPick","Entity","MapLayersService","layersDataSources","registerLayerDataSources","zIndex","ds","drawAllLayers","updateAndRefresh","newZIndex","removeDataSources","MapsManagerService","defaultIdCounter","_Maps","eventRemoveCallbacks","firstMap","_registerMap","acMap","mapId","generateDefaultId","_removeMapById","delete","sync2DMapsCameras","mapsConfiguration","unsyncMapsCameras","maps","sensitivity","bindZoom","masterMapConfig","masterMap","masterCamera","getCameraService","masterCameraCartographic","percentageChanged","removeCallback","changed","slaveMapConfig","slaveMap","slaveMapOptions","slaveCamera","slaveCameraCartographic","cartographicToCartesian","getCesiumViewer","mode","MORPHING","ScreenshotService","getMapScreenshotDataUrlBase64","toDataURL","downloadMapScreenshot","filename","dataUrl","downloadURI","uri","link","createElement","download","href","body","appendChild","click","removeChild","AcMapComponent","_cesiumService","_cameraService","_elemRef","mapsManagerService","billboardDrawerService","labelDrawerService","ellipseDrawerService","polylineDrawerService","polygonDrawerService","arcDrawerService","pointDrawerService","czmlDrawerService","keyboardControlService","mapLayersService","configurationService","screenshotService","contextMenuService","coordinateConverter","disableDefaultPlonter","style","className","ngOnInit","containerId","nativeElement","ngOnChanges","changes","firstChange","element","getElementById","ngAfterViewInit","ngOnDestroy","getCesiumService","getId","getMapContainer","getMapEventsManager","getContextMenuService","getScreenshotService","getKeyboardControlService","getCoordinateConverter","Component","selector","template","providers","ElementRef","Input","LayerService","_cache","descriptions","layerUpdate","_zIndex","_context","context","setEntityName","_entityName","getEntityName","registerDescription","descriptionComponent","unregisterDescription","getDescriptions","layerUpdates","ADD_UPDATE","DELETE","ComputationCache","expression","insertFn","clear","Checker","throwIfAnyNotPresent","propertyNames","throwIfNotPresent","present","DynamicEllipseDrawerService","EllipsePrimitive","updateLocationData","DynamicPolylineDrawerService","StaticPrimitiveDrawer","geometryType","geometryProps","instanceProps","primitiveProps","GeometryInstance","StaticCircleDrawerService","CircleGeometry","StaticPolylineDrawerService","PolylineGeometry","when","readyPromise","then","readyPrimitive","StaticPolygonDrawerService","PolygonGeometry","StaticEllipseDrawerService","EllipseGeometry","ModelDrawerService","BoxDrawerService","CorridorDrawerService","CylinderDrawerService","EllipsoidDrawerService","PolylineVolumeDrawerService","WallDrawerService","RectangleDrawerService","LabelPrimitiveDrawerService","LabelCollection","BillboardPrimitiveDrawerService","BillboardCollection","PointPrimitiveDrawerService","PointPrimitiveCollection","HtmlDrawerService","HtmlCollection","AcLayerComponent","layerService","_computationCache","modelDrawerService","boxDrawerService","corridorDrawerService","cylinderDrawerService","ellipsoidDrawerSerice","polylineVolumeDrawerService","wallDrawerService","rectangleDrawerService","dynamicEllipseDrawerService","dynamicPolylineDrawerService","staticCircleDrawerService","staticPolylineDrawerService","staticPolygonDrawerService","staticEllipseDrawerService","polylinePrimitiveDrawerService","labelPrimitiveDrawerService","billboardPrimitiveDrawerService","pointPrimitiveDrawerService","htmlDrawerService","store","acForRgx","stopObservable","_updateStream","entitiesStore","layerDrawerDataSources","_drawerList","initValidParams","observableMerge","notification","contextEntity","updateStore","entityName","actionType","ActionType","draw","console","test","acFor","acForArr","split","isObservable","obj","ngAfterContentInit","drawer","drawerName","initOptions","drawerDataSources","showValue_1","zIndexValue","getLayerService","getLayerDrawerDataSources","getDrawerDataSourcesByName","getStore","entityId","updateNotification","refreshAll","observableFrom","changeDetection","ChangeDetectionStrategy","OnPush","EntityOnMapComponent","_drawer","mapLayers","selfPrimitiveIsDraw","drawOnMap","props","previousValue","updateOnMap","selfPrimitive","removeFromMap","AcBillboardComponent","billboardDrawer","BasicDesc","_layerService","_cesiumProperties","onDraw","onRemove","_cesiumObjectsMap","_propsEvaluator","_propsEvaluateFn","_getPropsAssigner","desc","_propsAssignerFn","setLayerService","createEvaluator","cache","createAssigner","getCesiumObjectsMap","cesiumEntity","Output","JsonMapper","_mapper","JsonStringMapper","SmartAssigner","allowUndefined","fnBody","prop","assignFn","Function","obj1","obj2","CesiumProperties","_parser","_jsonMapper","_assignersCache","_evaluatorsCache","_compile","withCache","cesiumDesc","propsMap","resultExpression","eval","JSON","stringify","replace","getFn","_build","from","smartAssigner","oldVal","newVal","newEvaluator","evaluatorFn","Parse","AcBillboardDescComponent","computationCache","cesiumProperties","provide","useExisting","forwardRef","AcEllipseDescComponent","ellipseDrawer","AcPolylineDescComponent","PixelOffsetPipe","transform","Pipe","RadiansToDegreesPipe","round","AcLabelDescComponent","labelDrawer","UtilsModule","NgModule","imports","CommonModule","AcCircleDescComponent","semiMajorAxis","semiMinorAxis","AcArcDescComponent","arcDrawer","AcEntity","json","AcNotification","ArcGisMapServer","ArcGisMapServerImageryProvider","WebMapTileService","WebMapTileServiceImageryProvider","MapTileService","WebMapService","WebMapServiceImageryProvider","SingleTileImagery","SingleTileImageryProvider","OpenStreetMap","createOpenStreetMapImageryProvider","BingMaps","BingMapsImageryProvider","GoogleEarthEnterpriseMaps","GoogleEarthEnterpriseMapsProvider","MapBox","MapboxImageryProvider","UrlTemplateImagery","UrlTemplateImageryProvider","OFFLINE","AcMapLayerProviderComponent","provider","MapLayerProviderOptions","alpha","brightness","contrast","imageryLayersCollection","imageryLayers","createOfflineMapProvider","layerProvider","log","imageryLayer","addImageryProvider","isFirstChange","AcPointDescComponent","AcLabelComponent","AcPolylineComponent","polylineDrawer","AcEllipseComponent","AcPointComponent","pointDrawer","AcHtmlComponent","elementRef","renderer","isDraw","setScreenPosition","setStyle","hideElement","preRender","preRenderEventListener","ngDoCheck","Renderer2","AcCircleComponent","updateEllipseProps","rotation","AcArcComponent","AcPolygonDescComponent","polygonDrawer","AcDefaultPlonterComponent","cd","geoConverter","plonterChangeNotifier","detectChanges","plonterShown","plonterClickPosition","chooseEntity","ChangeDetectorRef","AcPolygonComponent","BasicStaticPrimitiveDesc","_staticPrimitiveDrawer","_geometryPropsEvaluator","_instancePropsEvaluator","_primitivePropsEvaluator","AcStaticEllipseDescComponent","AcDynamicEllipseDescComponent","AcDynamicPolylineDescComponent","AcStaticPolygonDescComponent","AcStaticCircleDescComponent","staticCircleDrawer","AcDynamicCircleDescComponent","AcStaticPolylineDescComponent","AcModelDescComponent","modelDrawer","AcTileset3dComponent","tilesetInstance","_3dtilesCollection","Cesium3DTileset","Cesium3DTileStyle","AcBoxDescComponent","drawerService","AcCylinderDescComponent","AcCorridorDescComponent","AcEllipsoidDescComponent","AcPolylineVolumeDescComponent","AcWallDescComponent","AcRectangleDescComponent","AcBillboardPrimitiveDescComponent","billboardPrimitiveDrawer","AcLabelPrimitiveDescComponent","labelPrimitiveDrawer","AcPolylinePrimitiveDescComponent","HtmlPrimitive","_mapContainer","pixelOffset","_scene","_element","display","_pixelOffset","Number","MAX_VALUE","_collection","_lastPosition","html","len","pop","CesiumExtender","extend","AcHtmlManager","_entities","addOrUpdate","info","AcHtmlContext","AcHtmlDirective","_templateRef","_viewContainerRef","_changeDetector","_acHtmlManager","_views","_handleView","$implicit","viewRef","createEmbeddedView","Directive","TemplateRef","ViewContainerRef","AcHtmlDescComponent","htmlDrawer","acHtmlCreator","acHtmlTemplate","ViewChild","ContentChild","AcHtmlContainerDirective","_id","AcContextMenuWrapperComponent","componentFactoryResolver","contextMenuChangeSubscription","contextMenuChangeNotifier","contextMenuOpenSubscription","onOpen","componentFactory","resolveComponentFactory","viewContainerRef","createComponent","data","ComponentFactoryResolver","read","AcArrayDescComponent","entitiesMap","arrayObservable$","acForString","arrayPath","layer","layerServiceSubscription","basicDescs","_results","component","arrayDescs","entitiesArray","_get","previousEntitiesIdArray","entitiesIdArray","arrayItemId","generateCombinedId","entitiesToRemove","idGetter","getAcForString","arrayItem","MAX_SAFE_INTEGER","ContentChildren","descendants","AcPointPrimitiveDescComponent","AcPrimitivePolylineComponent","PARSE_PIPES_CONFIG_MAP","pipeName","pipeInstance","AcCzmlDescComponent","czmlDrawer","AngularCesiumModule","forRoot","ngModule","useValue","PIPES_CONFIG","multi","customPipes","Angular2ParseModule","declarations","exports","DisposableObservable","ALT","KeyboardEventModifier","CTRL","SHIFT","SelectionManagerService","mapsManager","selectedEntitiesItems$","BehaviorSubject","selectedEntitySubject$","selectedEntities$","asObservable","selectedEntities","selectedEntity$","toggleSelection","addSelectedIndicator","addToSelected","removeSelected","current","entityIndex","initSelection","selectionOptions","eventPriority","mapComponent","mapEventsManagerService","h337","CesiumHeatMapMaterialCreator","heatmapOptionsDefaults","minCanvasSize","maxCanvasSize","radiusFactor","spacingFactor","maxOpacity","minOpacity","blur","gradient",".3",".65",".8",".95","WMP","WebMercatorProjection","wgs84PointToHeatmapPoint","mercatorPointToHeatmapPoint","wgs84ToMercator","rad2deg","calcCircleContainingRect","calcEllipseContainingRect","ellipsePoints","Rectangle","fromCartesianArray","calculateContainingRectFromPoints","points","setData","heatmap","setWGS84Data","convdata","gp","hp","pn","_xoffset","_factor","_spacing","_yoffset","createContainer","containerCanvasCounter","container","setAttribute","mp","project","wgs84ToMercatorBB","bb","sw","west","south","ne","east","north","mercatorToWgs84BB","unproject","setWidthAndHeight","mbb","abs","containingBoundingRect","heatmapDataSet","heatmapOptions","userBB","heatPointsData","finalHeatmapOptions","_mbounds","bounds","_rectangle","_c","h337.create","heatMapCanvas","_renderer","heatMapMaterial","ImageMaterialProperty","image","transparent","setClear","elem","parentNode","CREATE","EDIT","CREATE_OR_EDIT","INIT","ADD_POINT","ADD_LAST_POINT","CHANGE_TO_EDIT","REMOVE_POINT","DRAG_POINT","DRAG_POINT_FINISH","DRAG_SHAPE","DRAG_SHAPE_FINISH","DISABLE","ENABLE","DISPOSE","SET_EDIT_LABELS_RENDER_CALLBACK","UPDATE_EDIT_LABELS","SET_MANUALLY","TRANSFORM","EditPoint","pointProps","virtualPoint","editedEntityId","generateId","_virtualEditPoint","isVirtualEditPoint","setVirtualEditPoint","getEditedEntityId","getPosition","setPosition","EditPolyline","polylineProps","_polylineProps","getPositions","validatePositions","getStartPosition","getEndPosition","setStartPosition","setEndPosition","defaultLabelProps","backgroundColor","backgroundPadding","eyeOffset","fillColor","font","heightReference","HeightReference","NONE","horizontalOrigin","HorizontalOrigin","LEFT","outlineColor","BLACK","outlineWidth","ZERO","pixelOffsetScaleByDistance","scale","scaleByDistance","showBackground","LabelStyle","FILL","text","translucencyByDistance","verticalOrigin","VerticalOrigin","BASELINE","EditablePolygon","polygonsLayer","pointsLayer","polylinesLayer","polygonOptions","polylines","doneCreation","_enableEdit","_labels","polygonProps","defaultPointProps","defaultPolylineProps","createFromExisting","labels","getRealPositions","_defaultPolylineProps","_defaultPointProps","_polygonProps","updatePointsLayer","addPointFromExisting","addAllVirtualEditPoints","updatePolygonsLayer","setPointsManually","newPoints","pointOrCartesian","newPoint","currentPoints","pos","currentPoint","nextIndex","nextPoint","midPoint","setMiddleVirtualPoint","firstP","secondP","currentCart","nextCart","midPointCartesian3","firstIndex","updateMiddleVirtualPoint","virtualEditPoint","prevPoint","prevPointCart","nextPointCart","changeVirtualPointToRealPoint","pointsCount","pointIndex","preIndex","prePoint","firstMidPoint","secMidPoint","renderPolylines","realPoints","addPoint","movingPoint","movePoint","toPosition","editPoint","nextVirtualPoint","nextRealPoint","prevVirtualPoint","prevRealPoint","moveTempMovingPoint","movePolygon","startMovingPosition","draggedToPosition","lastDraggedToPosition","endMovePolygon","removePoint","pointToRemove","removePosition","getPointsCount","addLastPoint","getRealPoints","getPositionsHierarchy","getPositionsHierarchyCallbackProperty","findIndex","line","PolygonsManagerService","polygons","createEditablePolygon","editPolygonsLayer","editPointsLayer","editPolylinesLayer","editablePolygon","generateKey","possible","charAt","floor","random","DEFAULT_POLYGON_OPTIONS","addPointEvent","addLastPointEvent","removePointEvent","dragPointEvent","dragShapeEvent","allowDrag","withAlpha","pixelSize","virtualPointPixelSize","showVirtual","PolygonsEditorService","updateSubject","updatePublisher","observablesMap","cameraService","polygonsManager","onUpdate","setOptions","clientEditSubject","editAction","editMode","EditModes","finishedCreate","EditActions","mouseMoveRegistration","addPointRegistration","addLastPointRegistration","editorObservable","createEditorObservable","updatedPosition","allPositions","find","updateValue","getPoints","maximumNumberOfPoints","switchToEditMode","changeMode","editPolygon","edit","editSubject","editObservable","shapeDragRegistration","pointDragRegistration","pointRemoveRegistration","_b","updatedPoint","endDragPosition","startDragPosition","draggedPosition","observables","warn","defaultClone","parse","observableToExtend","obs","enable","disable","setManually","setLabelsRenderFn","labelsRenderFn","updateLabels","getCurrentPoints","getEditValue","getLabels","PolygonsEditorComponent","polygonsEditor","editPoints$","editPolylines$","editPolygons$","PerInstanceColorAppearance","fromColor","polygonColor","lineColor","startListeningToEditorUpdates","handleCreateUpdates","handleEditUpdates","getLabelId","renderEditLabels","editLabelsRenderFn","removeEditLabels","enableEdit","getPointSize","getPointShow","EditArc","_arcProps","_center","_radius","_delta","_angle","updateCenter","EditableCircle","circlesLayer","arcsLayer","_circleProps","circleProps","_pointProps","_radiusPoint","radiusPoint","centerPointProp","radiusPointProp","circleProp","_outlineArc","getRadius","createOutlineArc","updateArcsLayer","updateCirclesLayer","moveCircle","dragStartPosition","dragEndPosition","getCenter","getRadiusCallbackProperty","getCenterCallbackProperty","getRadiusPoint","CirclesManagerService","circles","createEditableCircle","editCirclesLayer","editArcsLayer","circleOptions","editableCircle","circle","DEFAULT_CIRCLE_OPTIONS","GREEN","outline","CirclesEditorService","circlesManager","getCircleProperties","editCircle","pointIsCenter","getCenterPoint","getCenterPosition","getRadiusPosition","CirclesEditorComponent","circlesEditor","editCircles$","editArcs$","EditableEllipse","ellipsesLayer","_rotation","_minorRadiusPoints","_ellipseProps","ellipseProps","_majorRadiusPoint","midpoint","_minorRadius","getMinorRadiusPointPosition","getMajorRadiusPointPosition","majorRadius","minorRadius","ellipseProp","_majorRadius","majorRadiusPosition","updateMinorRadiusEditPoints","updateEllipsesLayer","updateRotation","transformToEllipse","getMajorRadius","newRadius","circleToEllipseTransformation","majorRadiusPoint","moveEllipse","getRotation","endMoveEllipse","getMinorRadius","azimuthInDegrees","getRotationCallbackProperty","getMinorRadiusCallbackProperty","getMajorRadiusCallbackProperty","EllipsesManagerService","ellipses","createEditableEllipse","editEllipsesLayer","ellipseOptions","editableEllipse","DEFAULT_ELLIPSE_OPTIONS","circleToEllipseTransformEvent","circleToEllipseTransformEventModifier","CesiumEventModifier","EllipsesEditorService","ellipsesManager","editEllipse","addSecondRadiusRegistration","getEllipseProperties","minorRadiusPointPosition","majorRadiusPointPosition","EllipsesEditorComponent","ellipsesEditor","editEllipses$","EditablePolyline","editOptions","moveShape","endMoveShape","EditorObservable","PolylineEditorObservable","PolygonEditorObservable","CircleEditorObservable","EllipseEditorObservable","HippodromeEditorObservable","EditableHippodrome","hippodromeLayer","hippodromeProps","_hippodromeProps","createHeightEditPoints","updateHippdromeLayer","widthMeters","secP","lerp","bearingDeg","upAzimuth","createMiddleEditablePoint","downAzimuth","azimuth","upEditCartesian3","changeWidthByNewPoint","normalizedBearingDeb","bearingDegHippodromeDots","fixedBearingDeg","distanceMeters","radiusWidth","endMovePoint","getRealPositionsCallbackProperty","getWidth","DEFAULT_POLYLINE_OPTIONS","PolylinesEditorService","polylinesManager","polylineOptions","editPolyline","PolylinesManagerService","createEditablePolyline","editablePolyline","PolylinesEditorComponent","polylinesEditor","polylineLabels$","polylineLabelsLayer","HippodromeManagerService","hippodromes","createEditableHippodrome","editHippodromeLayer","hippodromeEditOptions","editableHippodrome","hippodrome","DEFAULT_HIPPODROME_OPTIONS","HippodromeEditorService","managerService","hippodromeManager","hippodromeOptions","isFirstPoint","editHippodrome","firstPosition","secondPosition","firstPointProp","secondPointProp","getCurrentWidth","HippodromeEditorComponent","hippodromesEditor","hippodromesManager","editHippodromes$","editHippodromesLayer","DraggableToMapService","mainSubject","setCoordinateConverter","drag","imageSrc","cancel","imgElement","src","visibility","createDragObservable","dragObservable","clientWidth","clientHeight","dragUpdates","pointerUp","observableFromEvent","moveObservable","initialScreenPosition","mapPosition","DraggableToMapDirective","el","iconDragService","draggableToMap","onMouseDown","HostListener","AcToolbarComponent","onDrag","dragStyle","height.px","width.px","listenForDragging","dragSubscription","mouseDown$","mouseMove$","mouseUp$","drag$","DragIconComponent","AcToolbarButtonComponent","onClick","RangeAndBearingComponent","polylineEditor","lineEditOptions","labelsStyle","distanceLabelsStyle","bearingLabelsStyle","_d","_e","_f","bearingStringFn","distanceStringFn","rnb","totalDistance","previousPosition","bearing","toFixed","MIDDLE","RIGHT","ZoomToRectangleService","mapsZoomElements","animationDurationInSeconds","resetKeyCode","borderStyle","autoDisableOnZoom","threshold","keepRotation","mouseButton","MouseButtons","activate","mapZoomData","borderElement","mouse","endX","endY","startX","startY","onmousedown","button","onStart","rect","offsetX","clientX","offsetY","clientY","border","onmouseup","zoomApplied","zoomCameraToRectangle","onComplete","onmousemove","resetOnEscapePress","resetOnEscapePressFunc","animationDuration","cartesian1","cartesian2","cartographic1","cartographic2","AngularCesiumWidgetsModule"],"mappings":"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","sourcesContent":["/**\n * Fix for the constant entity shadowing.\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\n */\n\n// tslint:disable\nconst AssociativeArray = Cesium.AssociativeArray;\nconst Color = Cesium.Color;\nconst ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\nconst defined = Cesium.defined;\nconst DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\nconst DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\nconst ShowGeometryInstanceAttribute = Cesium.ShowGeometryInstanceAttribute;\nconst Primitive = Cesium.Primitive;\nconst ShadowMode = Cesium.ShadowMode;\nconst BoundingSphereState = Cesium.BoundingSphereState;\nconst ColorMaterialProperty = Cesium.ColorMaterialProperty;\nconst MaterialProperty = Cesium.MaterialProperty;\nconst Property = Cesium.Property;\n\nvar colorScratch = new Color();\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n  \n  var removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  var material = this.depthFailMaterialProperty;\n  var updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  var id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Property.isConstant(updater.distanceDisplayConditionProperty)) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    var that = this;\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\n      if (propertyName === 'isShowing') {\n        that.showsUpdated.set(updater.id, updater);\n      }\n    }));\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    var unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n  }\n};\n\nBatch.prototype.update = function (time) {\n  var isUpdated = true;\n  var removedCount = 0;\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  var attributes;\n  var i;\n  \n  if (this.createPrimitive) {\n    var geometries = this.geometry.values;\n    var geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n      \n      for (i = 0; i < geometriesLength; i++) {\n        var geometryItem = geometries[i];\n        var originalAttributes = geometryItem.attributes;\n        attributes = this.attributes.get(geometryItem.id.id);\n        \n        if (defined(attributes)) {\n          if (defined(originalAttributes.show)) {\n            originalAttributes.show.value = attributes.show;\n          }\n          if (defined(originalAttributes.color)) {\n            originalAttributes.color.value = attributes.color;\n          }\n          if (defined(originalAttributes.depthFailColor)) {\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\n          }\n        }\n      }\n      \n      var depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed\n        });\n      }\n      \n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries,\n        appearance: new this.appearanceType({\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\n          translucent: this.translucent,\n          closed: this.closed\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      var oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n    \n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    \n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\n      this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n    \n    var updatersWithAttributes = this.updatersWithAttributes.values;\n    var length = updatersWithAttributes.length;\n    var waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      var updater = updatersWithAttributes[i];\n      var instance = this.geometry.get(updater.id);\n      \n      attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n      \n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        var colorProperty = updater.fillMaterialProperty.color;\n        var resultColor = Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n      \n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        var depthColor = Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\n        }\n      }\n      \n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      var currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n      }\n      \n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        var distanceDisplayCondition = Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\n        }\n      }\n    }\n    \n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  var showsUpdated = this.showsUpdated.values;\n  var length = showsUpdated.length;\n  for (var i = 0; i < length; i++) {\n    var updater = showsUpdated[i];\n    var instance = this.geometry.get(updater.id);\n    \n    var attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n    \n    var show = updater.entity.isShowing;\n    var currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  var primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\n    (defined(attributes.show) && attributes.show[0] === 0)) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  var primitives = this.primitives;\n  \n  var primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n  \n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\nBatch.prototype.destroy = function () {\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n\nlet wasFixed = false;\n\nexport function fixCesiumEntitiesShadows() {\n  if (wasFixed) {\n    return;\n  }\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\n    var items;\n    var translucent;\n    var instance = updater.createFillGeometryInstance(time);\n    if (instance.attributes.color.value[3] === 255) {\n      items = this._solidItems;\n      translucent = false;\n    } else {\n      items = this._translucentItems;\n      translucent = true;\n    }\n    \n    var length = items.length;\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (item.isMaterial(updater)) {\n        item.add(updater, instance);\n        return;\n      }\n      \n    }\n    \n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\n    batch.add(updater, instance);\n    items.push(batch);\n  };\n  wasFixed = true;\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\n\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\n    if (fixEntitiesShadows !== false) {\n      fixCesiumEntitiesShadows();\n    }\n  }\n}\n","/**\n * Cesium scene modes\n */\nexport enum SceneMode {\n  SCENE3D,\n  COLUMBUS_VIEW,\n  SCENE2D,\n  PERFORMANCE_SCENE2D\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { SceneMode } from '../../models/scene-mode.enum';\n\n/**\n *  The service exposes the scene's camera and screenSpaceCameraController\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\n *  but is more efficient performance wise.\n */\n@Injectable()\nexport class CameraService {\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\n\n  private viewer: any;\n  private scene: any;\n  private camera: any;\n  private screenSpaceCameraController: any;\n  private morphListenerCancelFn: any;\n  private lastRotate: boolean;\n  private lastTilt: boolean;\n  private lastLook: boolean;\n  private isSceneModePerformance2D = false;\n\n  constructor() {\n  }\n\n  init(cesiumService: CesiumService) {\n    this.viewer = cesiumService.getViewer();\n    this.scene = cesiumService.getScene();\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\n    this.camera = this.scene.camera;\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\n    this.lastLook = this.screenSpaceCameraController.enableLook;\n  }\n\n  _listenToSceneModeMorph(callback: Function) {\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\n      callback\n    );\n  }\n\n  _revertCameraProperties() {\n    this.isSceneModePerformance2D = false;\n    this.enableTilt(this.lastTilt);\n    this.enableRotate(this.lastRotate);\n    this.enableLook(this.lastLook);\n  }\n\n  /**\n   * Gets the scene's camera\n   */\n  getCamera() {\n    return this.camera;\n  }\n\n  /**\n   * Gets the scene's screenSpaceCameraController\n   */\n  getScreenSpaceCameraController() {\n    return this.screenSpaceCameraController;\n  }\n\n  /**\n   * Gets the minimum zoom value in meters\n   */\n  getMinimumZoom(): number {\n    return this.screenSpaceCameraController.minimumZoomDistance;\n  }\n\n  /**\n   * Sets the minimum zoom value in meters\n   * @param zoom amount\n   */\n  setMinimumZoom(amount: number): void {\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\n  }\n\n  /**\n   * Gets the maximum zoom value in meters\n   */\n  getMaximumZoom(): number {\n    return this.screenSpaceCameraController.maximumZoomDistance;\n  }\n\n  /**\n   * Sets the maximum zoom value in meters\n   * @param zoom amount\n   */\n  setMaximumZoom(amount: number): void {\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\n  }\n\n  /**\n   * Sets if the camera is able to tilt\n   */\n  enableTilt(tilt: boolean): void {\n    this.screenSpaceCameraController.enableTilt = tilt;\n  }\n\n  /**\n   * Sets if the camera is able to rotate\n   */\n  enableRotate(rotate: boolean): void {\n    this.screenSpaceCameraController.enableRotate = rotate;\n  }\n\n  /**\n   * Sets if the camera is able to free-look\n   */\n  enableLook(lock: boolean): void {\n    this.screenSpaceCameraController.enableLook = lock;\n  }\n\n  /**\n   * Sets if the camera is able to translate\n   */\n  enableTranslate(translate: boolean): void {\n    this.screenSpaceCameraController.enableTranslate = translate;\n  }\n\n  /**\n   * Sets if the camera is able to zoom\n   */\n  enableZoom(zoom: boolean): void {\n    this.screenSpaceCameraController.enableZoom = zoom;\n  }\n\n  /**\n   * Sets if the camera receives inputs\n   */\n  enableInputs(inputs: boolean): void {\n    this.screenSpaceCameraController.enableInputs = inputs;\n  }\n\n  /**\n   * Sets the map's SceneMode\n   * @param sceneMode - The SceneMode to morph the scene into.\n   * @param duration - The duration of scene morph animations, in seconds\n   */\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\n    switch (sceneMode) {\n      case SceneMode.SCENE3D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphTo3D(duration);\n\n        break;\n      }\n      case SceneMode.COLUMBUS_VIEW: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphToColumbusView(duration);\n\n        break;\n      }\n      case SceneMode.SCENE2D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n        this.scene.morphTo2D(duration);\n\n        break;\n      }\n      case SceneMode.PERFORMANCE_SCENE2D: {\n        this.isSceneModePerformance2D = true;\n        this.lastLook = this.screenSpaceCameraController.enableLook;\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\n        this.screenSpaceCameraController.enableTilt = false;\n        this.screenSpaceCameraController.enableRotate = false;\n        this.screenSpaceCameraController.enableLook = false;\n        if (this.morphListenerCancelFn) {\n          this.morphListenerCancelFn();\n        }\n        this.scene.morphToColumbusView(duration);\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\n          () => {\n            this.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(\n                0.0,\n                0.0,\n                Math.min(\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\n                  this.getMaximumZoom()\n                )\n              ),\n              orientation: {\n                pitch: Cesium.Math.toRadians(-90)\n              }\n            });\n            morphCompleteEventListener();\n            this._listenToSceneModeMorph(\n              this._revertCameraProperties.bind(this)\n            );\n          }\n        );\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  cameraFlyTo(options: any) {\n    return this.camera.flyTo(options);\n  }\n\n  /**\n   * Flies the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\n   * @returns Promise<boolean>\n   */\n  flyTo(target: any, options?: any) {\n    return this.viewer.flyTo(target, options);\n  }\n\n  /**\n   * Zooms amount along the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\n   */\n  zoomIn(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zooms amount along the opposite direction of the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\n   */\n  zoomOut(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zoom the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\n   * @returns Promise<boolean>\n   */\n  zoomTo(target: any, offset?: any) {\n    return this.viewer.zoomTo(target, offset);\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\n   * @param options viewer options\n   */\n  setView(options: any) {\n    this.camera.setView(options);\n  }\n\n  /**\n   * Set camera's rotation\n   */\n  setRotation(degreesInRadians: number) {\n    this.setView({orientation: {heading: degreesInRadians}});\n  }\n\n  /**\n   * Locks or unlocks camera rotation\n   */\n  lockRotation(lock: boolean) {\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\n  }\n\n  /**\n   * Make the camera track a specific entity\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\n   * @param entity - entity to track\n   * @param options - track entity options\n   */\n  trackEntity(\n    entity?: any,\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\n  ) {\n    const flyTo = (options && options.flyTo) || false;\n\n    this.viewer.trackedEntity = undefined;\n    return new Promise(resolve => {\n      if (flyTo) {\n        const flyToDuration = (options && options.flyToDuration) || 1;\n        const altitude = (options && options.altitude) || 10000;\n\n        // Calc entity flyTo position and wanted altitude\n        const entPosCar3 = entity.position.getValue(Cesium.JulianDate.now());\n        const entPosCart = Cesium.Cartographic.fromCartesian(entPosCar3);\n        const zoomAmount = altitude - entPosCart.height;\n        entPosCart.height = altitude;\n        const flyToPosition = Cesium.Cartesian3.fromRadians(\n          entPosCart.longitude,\n          entPosCart.latitude,\n          entPosCart.height\n        );\n\n        this.cameraFlyTo({\n          duration: flyToDuration,\n          destination: flyToPosition,\n          complete: () => {\n            this.viewer.trackedEntity = entity;\n            setTimeout(() => {\n              if (zoomAmount > 0) {\n                this.camera.zoomOut(zoomAmount);\n              } else {\n                this.camera.zoomIn(zoomAmount);\n              }\n            }, 0);\n            resolve();\n          }\n        });\n      } else {\n        this.viewer.trackedEntity = entity;\n        resolve();\n      }\n    });\n  }\n\n  untrackEntity() {\n    this.trackEntity();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ViewerFactory {\n  cesium: any;\n\n\n  constructor() {\n    this.cesium = Cesium;\n  }\n\n  /**\n   * Creates a viewer with default or custom options\n   * @param mapContainer - container to initialize the viewer on\n   * @param options - Options to create the viewer with - Optional\n   *\n   * @returns new viewer\n   */\n  createViewer(mapContainer: HTMLElement, options?: any) {\n    let viewer = null;\n    if (options) {\n      viewer = new this.cesium.Viewer(mapContainer, {\n        contextOptions: {\n          webgl: {preserveDrawingBuffer: true}\n        },\n        ...options\n      });\n    } else {\n      viewer = new this.cesium.Viewer(mapContainer,\n        {\n          // Poor internet connection - use default globe image, TODO: should be removed\n          imageryProvider: Cesium.createTileMapServiceImageryProvider({\n            url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          contextOptions: {\n            webgl: {preserveDrawingBuffer: true}\n          },\n        });\n    }\n\n    return viewer;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * ```typescript\n * constructor(viewerConf :ViewerConfiguration ) {\n *   viewerConf.viewerOptions = { timeline: false };\n * }\n * ```\n * notice this configuration will be for all <ac-maps> in your component.\n */\n@Injectable()\nexport class ViewerConfiguration {\n  /**\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n   */\n  private _viewerOptions: object | object[];\n  private _viewerModifier: Function | Function[];\n  private nextViewerOptionsIndex = 0;\n  private nextViewerModifierIndex = 0;\n\n  get viewerOptions(): object | object[] {\n    return this._viewerOptions;\n  }\n\n  Ã;\n\n  getNextViewerOptions(): object | object[] {\n    if (this._viewerOptions instanceof Array) {\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\n    } else {\n      return this._viewerOptions;\n    }\n  }\n\n  /**\n   * Can be used to set initial map viewer options.\n   * If there is more than one map you can give the function an array of options.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerOptions(value: object | object[]) {\n    this._viewerOptions = value;\n  }\n\n  get viewerModifier(): Function | Function[] {\n    return this._viewerModifier;\n  }\n\n  getNextViewerModifier(): Function | Function[] {\n    if (this._viewerModifier instanceof Array) {\n      return this._viewerModifier[this.nextViewerModifierIndex++];\n    } else {\n      return this._viewerModifier;\n    }\n  }\n\n  /**\n   * Can be used to set map viewer options after the map has been initialized.\n   * If there is more than one map you can give the function an array of functions.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerModifier(value: Function | Function[]) {\n    this._viewerModifier = value;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\n */\n@Injectable()\nexport class CesiumService {\n  private cesiumViewer: any;\n  private map: AcMapComponent;\n\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\n  }\n\n  init(mapContainer: HTMLElement, map: AcMapComponent) {\n    this.map = map;\n    this.ngZone.runOutsideAngular(() => {\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\n\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\n      if (typeof viewerModifier === 'function') {\n        viewerModifier(this.cesiumViewer);\n      }\n    });\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\n   * @returns cesiumViewer\n   */\n  getViewer() {\n    return this.cesiumViewer;\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\n   * @returns cesium scene\n   */\n  getScene() {\n    return this.cesiumViewer.scene;\n  }\n\n  /**\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n   * @returns cesium canvas\n   */\n  getCanvas(): HTMLCanvasElement {\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\n  }\n\n  getMap(): AcMapComponent {\n    return this.map;\n  }\n}\n","/**\n * Event options for registration on map-event-manager.\n */\nexport enum CesiumEvent {\n  MOUSE_MOVE = Cesium.ScreenSpaceEventType.MOUSE_MOVE,\n  LEFT_CLICK = Cesium.ScreenSpaceEventType.LEFT_CLICK,\n  LEFT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n  LEFT_DOWN = Cesium.ScreenSpaceEventType.LEFT_DOWN,\n  LEFT_UP = Cesium.ScreenSpaceEventType.LEFT_UP,\n  MIDDLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_CLICK,\n  MIDDLE_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\n  MIDDLE_DOWN = Cesium.ScreenSpaceEventType.MIDDLE_DOWN,\n  MIDDLE_UP = Cesium.ScreenSpaceEventType.MIDDLE_UP,\n  PINCH_START = Cesium.ScreenSpaceEventType.PINCH_START,\n  PINCH_END = Cesium.ScreenSpaceEventType.PINCH_END,\n  PINCH_MOVE = Cesium.ScreenSpaceEventType.PINCH_MOVE,\n  RIGHT_CLICK = Cesium.ScreenSpaceEventType.RIGHT_CLICK,\n  RIGHT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\n  RIGHT_DOWN = Cesium.ScreenSpaceEventType.RIGHT_DOWN,\n  RIGHT_UP = Cesium.ScreenSpaceEventType.RIGHT_UP,\n  WHEEL = Cesium.ScreenSpaceEventType.WHEEL,\n  LONG_LEFT_PRESS = 110,\n  LONG_RIGHT_PRESS,\n  LONG_MIDDLE_PRESS,\n  LEFT_CLICK_DRAG,\n  RIGHT_CLICK_DRAG,\n  MIDDLE_CLICK_DRAG,\n}\n","/**\n *  NO_PICK,    - will not pick entities\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\n */\nexport enum PickOptions {\n  NO_PICK,\n  PICK_FIRST,\n  PICK_ONE,\n  PICK_ALL\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { ContextMenuOptions } from '../../models/context-menu-options';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\n */\n\n@Injectable()\nexport class ContextMenuService {\n  private _showContextMenu = false;\n  private _options: ContextMenuOptions;\n  private _position: Cartesian3;\n  private _content: BasicContextMenu;\n  private mapEventsManager: MapEventsManagerService;\n  private leftClickRegistration: DisposableObservable<any>;\n  private leftClickSubscription: Subscription;\n  private _contextMenuChangeNotifier = new EventEmitter();\n  private _onOpen = new EventEmitter();\n  private _onClose = new EventEmitter();\n  private _defaultContextMenuOptions: ContextMenuOptions = {\n    closeOnLeftCLick: true,\n    closeOnLeftClickPriority: 10,\n  };\n\n  get contextMenuChangeNotifier(): EventEmitter<any> {\n    return this._contextMenuChangeNotifier;\n  }\n\n  get showContextMenu(): boolean {\n    return this._showContextMenu;\n  }\n\n  get options(): ContextMenuOptions {\n    return this._options;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  get content(): BasicContextMenu {\n    return this._content;\n  }\n\n  get onOpen(): EventEmitter<any> {\n    return this._onOpen;\n  }\n\n  get onClose(): EventEmitter<any> {\n    return this._onClose;\n  }\n\n\n  init(mapEventsManager: MapEventsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n  }\n\n  open(content: any, position: Cartesian3, options: ContextMenuOptions = {}) {\n    this.close();\n    this._content = content;\n    this._position = position;\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\n    this._showContextMenu = true;\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\n      this.leftClickRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK,\n        pick: PickOptions.NO_PICK,\n        priority: this._options.closeOnLeftClickPriority,\n      });\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\n        this.leftClickSubscription.unsubscribe();\n        this.close();\n      });\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onOpen.emit();\n  }\n\n  close() {\n    this._content = undefined;\n    this._position = undefined;\n    this._options = undefined;\n    this._showContextMenu = false;\n    if (this.leftClickRegistration) {\n      this.leftClickRegistration.dispose();\n      this.leftClickRegistration = undefined;\n    }\n    if (this.leftClickSubscription) {\n      this.leftClickSubscription.unsubscribe();\n      this.leftClickSubscription = undefined;\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onClose.emit();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport * as geodesy from 'geodesy';\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\nimport { Cartesian3 } from '../../models/cartesian3';\n\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\n\nwindow['geodesy'] = geodesy;\n\n/**\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\n *\n * @example\n * import { Component, OnInit } from '@angular/core';\n * import { CoordinateConverter } from 'angular2-cesium';\n *\n * @Component({\n * \t\tselector:'my-component',\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\n * \t\tproviders:[CoordinateConverter]\n * })\n * export class MyComponent implements OnInit {\n * \t\tshowCartographic;\n *\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\n * \t\t}\n *\n * \t\tngOnInit(){\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\n *  }\n * }\n *\n */\n@Injectable()\nexport class CoordinateConverter {\n  constructor(@Optional() private cesiumService?: CesiumService) {\n  }\n\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\n    if (!this.cesiumService) {\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\n        ' to do screen position calculations');\n    } else {\n      const screenPosition = { ...screenPos };\n      if (addMapCanvasBoundsToPos) {\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\n        screenPosition.x += mapBounds.left;\n        screenPosition.y += mapBounds.top;\n      }\n\n      const camera = this.cesiumService.getViewer().camera;\n      return camera.pickEllipsoid(screenPosition);\n    }\n  }\n\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\n  }\n\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\n    return Cesium.Cartographic.fromCartesian(cartesian, ellipsoid);\n  }\n\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromDegrees(longitude, latitude, height);\n  }\n\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromRadians(longitude, latitude, height);\n  }\n\n  degreesToUTM(longitude: number, latitude: number) {\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\n  }\n\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\n  }\n\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\n    return {\n      longitude: geodesyRadians.lon,\n      latitude: geodesyRadians.lat,\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\n    };\n  }\n\n  /**\n   * middle point between two points\n   * @param first  (latitude,longitude) in radians\n   * @param second (latitude,longitude) in radians\n   */\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\n\n    return Cesium.Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\n  }\n\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\n    const scene = this.cesiumService.getScene();\n    const screenPosition1 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\n    const screenPosition2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\n    const middleScreenPoint =\n      new Cesium.Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\n    return scene.pickPosition(middleScreenPoint);\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * * @return bearing in degrees\n   * @param first - {latitude,longitude} in radians\n   * @param second - {latitude,longitude} in radians\n   */\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const bearing = firstPoint.bearingTo(secondPoint);\n\n    return bearing;\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * @return bearing in degrees\n   */\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\n    const firstCart = Cesium.Cartographic.fromCartesian(firstCartesian3);\n    const secondCart = Cesium.Cartographic.fromCartesian(secondCartesian3);\n\n    return this.bearingTo(firstCart, secondCart);\n  }\n}\n","/**\n *  Abstract drawer. All drawers extends this class.\n */\n\nexport abstract class BasicDrawerService {\n  protected _propsAssigner: Function;\n\n  constructor() {\n  }\n\n  abstract add(cesiumProps: any, ...args: any[]): any;\n\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\n\n  abstract remove(primitive: any): void;\n\n  abstract removeAll(): void;\n\n  abstract setShow(showValue: boolean): void;\n\n  abstract init(options?: any): any;\n\n  setPropsAssigner(assigner: Function) {\n    this._propsAssigner = assigner;\n  }\n}\n","import { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\n  private _show = true;\n  private _primitiveCollectionWrap: any;\n  protected _cesiumCollection: any;\n  protected _propsAssigner: Function;\n\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\n    super();\n  }\n\n  init() {\n    this._cesiumCollection = new this.drawerType();\n    this._primitiveCollectionWrap = new Cesium.PrimitiveCollection();\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\n  }\n\n  add(cesiumProps: any, ...args: any[]): any {\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(entity: any, cesiumProps: any, ...args: any[]) {\n    if (this._propsAssigner) {\n      this._propsAssigner(entity, cesiumProps);\n    } else {\n      Object.assign(entity, cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    this._cesiumCollection.remove(entity);\n  }\n\n  removeAll() {\n    this._cesiumCollection.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this._show = showValue;\n    this._primitiveCollectionWrap.show = showValue;\n  }\n\n  getShow(): boolean {\n    return this._show;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { Vec3 } from '../../models/vec3';\n\n@Injectable()\nexport class GeoUtilsService {\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\n    const distance = meterDistance / Cesium.Ellipsoid.WGS84.maximumRadius;\n    const cartographicLocation =\n      currentLocation instanceof Cesium.Cartesian3 ? Cesium.Cartographic.fromCartesian(currentLocation) : currentLocation;\n    const cartesianLocation =\n      currentLocation instanceof Cesium.Cartesian3\n        ? currentLocation\n        : Cesium.Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\n\n    let resultPosition;\n    let resultDistance;\n    let counter = 0;\n    let distanceFactorRangeMax = 0.1;\n    let distanceFactorRangeMin = -0.1;\n    while (\n      counter === 0 ||\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\n      ) {\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\n      resultDistance = this.distance(cartesianLocation, resultPosition);\n\n      if (resultDistance > meterDistance) {\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      } else {\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      }\n      counter++;\n    }\n\n    return resultPosition;\n  }\n\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\n    const curLat = cartographicLocation.latitude;\n    const curLon = cartographicLocation.longitude;\n    const destinationLat = Math.asin(\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\n    );\n\n    let destinationLon =\n      curLon +\n      Math.atan2(\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\n      );\n\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n\n    return Cesium.Cartesian3.fromRadians(destinationLon, destinationLat);\n  }\n\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\n    return Cesium.Cartesian3.distance(pos0, pos1);\n  }\n\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\n    return {\n      x: position1.x - position0.x,\n      y: position1.y - position0.y,\n      z: position1.z - position0.z,\n    };\n  }\n\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\n    if (updateReference) {\n      position.x += delta.x;\n      position.y += delta.y;\n      position.z += delta.z;\n      const cartographic = Cesium.Cartographic.fromCartesian(position);\n      cartographic.height = 0;\n      const cartesian = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n      position.x = cartesian.x;\n      position.y = cartesian.y;\n      position.z = cartesian.z;\n      return position;\n    } else {\n      const cartesian = new Cesium.Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\n      const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n      cartographic.height = 0;\n      return Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n    }\n  }\n\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\n    return new Cesium.Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\n  }\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\n    const camera = this.cesiumService.getViewer().camera;\n    return camera.pickEllipsoid(screenPos);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\n\n/**\n +  This drawer is responsible for drawing an arc over the Cesium map.\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\n */\n\n@Injectable()\nexport class ArcDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  _calculateArcPositions(cesiumProps: any) {\n    const quality = cesiumProps.quality || 18;\n    const delta = (cesiumProps.delta) / quality;\n    const pointsArray = [];\n    for (let i = 0; i < quality + 1; ++i) {\n      const point =\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\n      pointsArray.push(point);\n    }\n\n    return pointsArray;\n  }\n\n  _calculateTriangle(cesiumProps: any) {\n    return [\n      cesiumProps.center,\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\n    ];\n  }\n\n  _calculateArc(cesiumProps: any) {\n    const arcPoints = this._calculateArcPositions(cesiumProps);\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.positions = this._calculateArc(cesiumProps);\n    if (cesiumProps.color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.color;\n      cesiumProps.material = material;\n    }\n\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(primitive: any, cesiumProps: any) {\n    if (!cesiumProps.constantColor && cesiumProps.color &&\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\n      primitive.material.uniforms.color = cesiumProps.color;\n    }\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\n    primitive.positions = this._calculateArc(cesiumProps);\n\n    return primitive;\n  }\n}\n","export enum GraphicsType {\n  ellipse = Cesium.EllipseGraphics,\n  ellipsoid = Cesium.EllipsoidGraphics,\n  polygon = Cesium.PolygonGraphics,\n  polyline = Cesium.PolylineGraphics,\n  polylineVolume = Cesium.PolylineVolumeGraphics,\n  box = Cesium.BoxGraphics,\n  corridor = Cesium.CorridorGraphics,\n  cylinder = Cesium.CylinderGraphics,\n  label = Cesium.LabelGraphics,\n  billboard = Cesium.BillboardGraphics,\n  model = Cesium.ModelGraphics,\n  path = Cesium.PathGraphics,\n  point = Cesium.PointGraphics,\n  rectangle = Cesium.RectangleGraphics,\n  wall = Cesium.WallGraphics,\n}\n","export class OptimizedEntityCollection {\n  private _updateRate: number;\n  private _collectionSize: number;\n  private _isSuspended = false;\n  private _isHardSuspend = false;\n  private _suspensionTimeout: any;\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\n  private _onEventResumeCallback: { once: boolean, callback: Function };\n\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\n    this._updateRate = updateRate;\n    this._collectionSize = collectionSize;\n\n  }\n\n  setShow(show: boolean) {\n    this.entityCollection.show = show;\n  }\n\n  get isSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  get updateRate(): number {\n    return this._updateRate;\n  }\n\n  set updateRate(value: number) {\n    this._updateRate = value;\n  }\n\n  get collectionSize(): number {\n    return this._collectionSize;\n  }\n\n  set collectionSize(value: number) {\n    this._collectionSize = value;\n  }\n\n  collection() {\n    return this.entityCollection;\n  }\n\n  isFree(): boolean {\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\n  }\n\n  add(entity: any) {\n    this.suspend();\n    return this.entityCollection.add(entity);\n  }\n\n  remove(entity: any) {\n    this.suspend();\n    return this.entityCollection.remove(entity);\n  }\n\n  removeNoSuspend(entity: any) {\n    this.entityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.suspend();\n    this.entityCollection.removeAll();\n  }\n\n  onEventSuspension(callback: Function, once = false): Function {\n    this._onEventSuspensionCallback = {callback, once};\n    return () => {\n      this._onEventSuspensionCallback = undefined;\n    };\n  }\n\n  onEventResume(callback: Function, once = false): Function {\n    this._onEventResumeCallback = {callback, once};\n    if (!this._isSuspended) {\n      this.triggerEventResume();\n    }\n    return () => {\n      this._onEventResumeCallback = undefined;\n    };\n  }\n\n  triggerEventSuspension() {\n    if (this._onEventSuspensionCallback !== undefined) {\n      const callback = this._onEventSuspensionCallback.callback;\n      if (this._onEventSuspensionCallback.once) {\n        this._onEventSuspensionCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  triggerEventResume() {\n    if (this._onEventResumeCallback !== undefined) {\n      const callback = this._onEventResumeCallback.callback;\n      if (this._onEventResumeCallback.once) {\n        this._onEventResumeCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  public suspend() {\n    if (this._updateRate < 0) {\n      return;\n    }\n    if (this._isHardSuspend) {\n      return;\n    }\n    if (!this._isSuspended) {\n      this._isSuspended = true;\n      this.entityCollection.suspendEvents();\n      this.triggerEventSuspension();\n      this._suspensionTimeout = setTimeout(() => {\n        this.entityCollection.resumeEvents();\n        this.triggerEventResume();\n        this._isSuspended = false;\n        this._suspensionTimeout = undefined;\n      }, this._updateRate);\n    }\n  }\n\n  public hardSuspend() {\n    this.entityCollection.suspendEvents();\n    this._isHardSuspend = true;\n  }\n\n  public hardResume() {\n    this.entityCollection.resumeEvents();\n    this._isHardSuspend = false;\n  }\n\n}\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from './enums/graphics-type.enum';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\n\nexport class EntitiesDrawerService extends BasicDrawerService {\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\n  private graphicsTypeName: string;\n\n  constructor(\n    private cesiumService: CesiumService,\n    private graphicsType: GraphicsType,\n    private defaultOptions: EntitiesDrawerOptions = {\n      collectionMaxSize: -1,\n      collectionSuspensionTime: -1,\n      collectionsNumber: 1,\n    },\n  ) {\n    super();\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\n\n    // Fix bad enum compilation\n    for (const i in GraphicsType) {\n      if (GraphicsType[i] as any === this.graphicsType) {\n        this.graphicsTypeName = i;\n      }\n    }\n  }\n\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\n    let freeEntityCollection = null;\n    this.entityCollections.forEach(entityCollection => {\n      if (entityCollection.isFree()) {\n        freeEntityCollection = entityCollection;\n      }\n    });\n\n    return freeEntityCollection;\n  }\n\n  init(options?: EntitiesDrawerOptions) {\n    const finalOptions = options || this.defaultOptions;\n    const dataSources = [];\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\n      const dataSource = new Cesium.CustomDataSource(this.graphicsTypeName);\n      dataSources.push(dataSource);\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n      this.entityCollections.set(\n        dataSource.entities,\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\n      );\n    }\n\n    return dataSources;\n  }\n\n  add(cesiumProps: any): any {\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\n    if (optimizedEntityCollection === null) {\n      throw new Error('No more free entity collections');\n    }\n\n    const graphicsClass = this.graphicsType as any;\n    const entityObject = {\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\n      [this.graphicsTypeName]: cesiumProps,\n    };\n\n    if (cesiumProps.name !== undefined) {\n      entityObject.name = cesiumProps.name;\n    }\n\n    return optimizedEntityCollection.add(entityObject);\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.suspendEntityCollection(entity);\n\n    if (entity.position instanceof Cesium.CallbackProperty) {\n      if (entity.position._isConstant) {\n        entity.position = cesiumProps.position;\n      }\n    }\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\n\n    if (this._propsAssigner) {\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\n    } else {\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\n    optimizedEntityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.removeAll();\n    });\n  }\n\n  setShow(showValue: boolean) {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.setShow(showValue);\n    });\n  }\n\n  private suspendEntityCollection(entity: any) {\n    const id = entity.entityCollection;\n    if (!this.entityCollections.has(id)) {\n      throw new Error('No EntityCollection for entity.entityCollection');\n    }\n\n    const entityCollection = this.entityCollections.get(id);\n    entityCollection.suspend();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing billboards.\n */\n@Injectable()\nexport class BillboardDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.billboard);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\n\n/**\n *  This drawer is responsible for drawing czml dataSources.\n */\n@Injectable()\nexport class CzmlDrawerService extends BasicDrawerService {\n\n  czmlStream: any;\n\n  constructor(\n    private cesiumService: CesiumService,\n  ) {\n    super();\n  }\n\n\n  init(options?: EntitiesDrawerOptions) {\n    const dataSources = [];\n\n    this.czmlStream = new Cesium.CzmlDataSource('czml');\n\n    dataSources.push(this.czmlStream);\n\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\n\n    return dataSources;\n  }\n\n  // returns the packet, provided by the stream\n  add(cesiumProps: any): any {\n\n    this.czmlStream.process(cesiumProps.czmlPacket);\n\n    return cesiumProps;\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.czmlStream.process(cesiumProps.czmlPacket);\n  }\n\n  remove(entity: any) {\n    this.czmlStream.entities.removeById(entity.acEntity.id);\n  }\n\n  removeAll() {\n    this.czmlStream.entities.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this.czmlStream.entities.show = showValue;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipses.\n */\n@Injectable()\nexport class EllipseDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipse, {\n      collectionsNumber: 10,\n      collectionMaxSize: 450,\n      collectionSuspensionTime: 100\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing labels.\n */\n@Injectable()\nexport class LabelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.label);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing points.\n */\n@Injectable()\nexport class PointDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.point);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class PolygonDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polygon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible of drawing polylines.\n */\n@Injectable()\nexport class PolylineDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polyline);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing polylines as primitives.\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\n */\n@Injectable()\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  add(cesiumProps: any) {\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\n  }\n\n  update(cesiumObject: any, cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\n        cesiumObject.material.uniforms.color instanceof Cesium.Color) {\n        this.withColorMaterial(cesiumProps);\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\n        cesiumObject.material.uniforms.color = cesiumProps.material;\n      }\n    }\n    super.update(cesiumObject, cesiumProps);\n  }\n\n  withColorMaterial(cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.material;\n      cesiumProps.material = material;\n    }\n\n    return cesiumProps;\n  }\n}\n","export enum KeyboardAction {\n  CAMERA_FORWARD,\n  CAMERA_BACKWARD,\n  CAMERA_RIGHT,\n  CAMERA_LEFT,\n  CAMERA_UP,\n  CAMERA_DOWN,\n  CAMERA_LOOK_RIGHT,\n  CAMERA_LOOK_LEFT,\n  CAMERA_LOOK_UP,\n  CAMERA_LOOK_DOWN,\n  CAMERA_TWIST_RIGHT,\n  CAMERA_TWIST_LEFT,\n  CAMERA_ROTATE_RIGHT,\n  CAMERA_ROTATE_LEFT,\n  CAMERA_ROTATE_UP,\n  CAMERA_ROTATE_DOWN,\n  CAMERA_ZOOM_IN,\n  CAMERA_ZOOM_OUT,\n}\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { KeyboardControlActionFn } from './keyboard-control.service';\nimport { CesiumService } from '../cesium/cesium.service';\n\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\n\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\n  /**\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveForward(moveRate);\n  },\n  /**\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveBackward(moveRate);\n  },\n  /**\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveUp(moveRate);\n  },\n  /**\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveDown(moveRate);\n  },\n  /**\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveRight(moveRate);\n  },\n  /**\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveLeft(moveRate);\n  },\n  /**\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookRight(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookLeft(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistRight(lookFactor);\n  },\n  /**\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateRight(lookFactor);\n  },\n  /**\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateUp(lookFactor);\n  },\n  /**\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateDown(lookFactor);\n  },\n  /**\n   * Zoom in into the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomIn(amount);\n  },\n  /**\n   * Zoom out from the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomOut(amount);\n  },\n};\n","import { isNumber } from 'util';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\n\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\n\nexport interface KeyboardControlParams {\n  action: KeyboardAction | KeyboardControlActionFn;\n  validation?: KeyboardControlValidationFn;\n  params?: { [paramName: string]: any };\n  done?: KeyboardControlDoneFn;\n}\n\nexport interface KeyboardControlDefinition {\n  [keyboardCharCode: string]: KeyboardControlParams;\n}\n\nenum KeyEventState {\n  IGNORED,\n  NOT_PRESSED,\n  PRESSED,\n}\n\ninterface ActiveDefinition {\n  keyboardEvent: KeyboardEvent;\n  state: KeyEventState;\n  action: KeyboardControlParams;\n}\n\n/**\n *  Service that manages keyboard keys and execute actions per request.\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\n *  And defined you keyboard handlers using `setKeyboardControls`.\n *\n * <caption>Simple Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\n *       A: { action: KeyboardAction.CAMERA_LEFT },\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n *\n * <caption>Advanced Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   private myCustomValue = 10;\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: {\n *          action: KeyboardAction.CAMERA_FORWARD,\n *          validate: (camera, scene, params, key) => {\n *            // Replace `checkCamera` you with your validation logic\n *            if (checkCamera(camera) || params.customParams === true) {\n *              return true;\n *            }\n *\n *            return false;\n *          },\n *          params: () => {\n *            return {\n *              myValue: this.myCustomValue,\n *            };\n *          },\n *        }\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n * <b>Predefined keyboard actions:</b>\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n */\n@Injectable()\nexport class KeyboardControlService {\n  private _currentDefinitions: KeyboardControlDefinition = null;\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\n\n  /**\n   * Creats the keyboard control service.\n   */\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Initializes the keyboard control service.\n   */\n  init() {\n    const canvas = this.cesiumService.getCanvas();\n    canvas.addEventListener('click', () => {\n      canvas.focus();\n    });\n\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  /**\n   * Sets the current map keyboard control definitions.\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\n   * - `done` is a function that will be triggered when `keyup` is triggered.\n   * @param definitions Keyboard Control Definition\n   * @param keyMappingFn - Mapping function for custom keys\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\n   */\n  setKeyboardControls(definitions: KeyboardControlDefinition,\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\n                      outsideOfAngularZone = false) {\n    if (!definitions) {\n      return this.removeKeyboardControls();\n    }\n\n    if (!this._currentDefinitions) {\n      this.registerEvents(outsideOfAngularZone);\n    }\n\n    this._currentDefinitions = definitions;\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\n\n    Object.keys(this._currentDefinitions).forEach(key => {\n      this._activeDefinitions[key] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: null,\n      };\n    });\n  }\n\n  /**\n   * Removes the current set of keyboard control items, and unregister from map events.\n   */\n  removeKeyboardControls() {\n    this.unregisterEvents();\n    this._currentDefinitions = null;\n  }\n\n  /**\n   * Returns the current action that handles `char` key string, or `null` if not exists\n   */\n  private getAction(char: string): KeyboardControlParams {\n    return this._currentDefinitions[char] || null;\n  }\n\n  /**\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\n   */\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\n    return String.fromCharCode(keyEvent.keyCode);\n  }\n\n  /**\n   * document's `keydown` event handler\n   */\n  private handleKeydown(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      const actionState = this._activeDefinitions[char];\n\n      if (actionState.state !== KeyEventState.IGNORED) {\n        let execute = true;\n\n        const params = this.getParams(action.params, e);\n\n        if (action.validation) {\n          execute = action.validation(this.cesiumService, params, e);\n        }\n\n        if (execute === true) {\n          this._activeDefinitions[char] = {\n            state: KeyEventState.PRESSED,\n            action,\n            keyboardEvent: e,\n          };\n        }\n      }\n    }\n  }\n\n  /**\n   * document's `keyup` event handler\n   */\n  private handleKeyup(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      this._activeDefinitions[char] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: e,\n      };\n\n      if (action.done && typeof action.done === 'function') {\n        action.done(this.cesiumService, e);\n      }\n    }\n  }\n\n  /**\n   * `tick` event handler that triggered by Cesium render loop\n   */\n  private handleTick() {\n    const activeKeys = Object.keys(this._activeDefinitions);\n\n    activeKeys.forEach(key => {\n      const actionState = this._activeDefinitions[key];\n\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\n      }\n    });\n  }\n\n  /**\n   *\n   * Params resolve function, returns object.\n   * In case of params function, executes it and returns it's return value.\n   *\n   */\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\n    if (!paramsDef) {\n      return {};\n    }\n\n    if (typeof paramsDef === 'function') {\n      return paramsDef(this.cesiumService, keyboardEvent);\n    }\n\n    return paramsDef;\n  }\n\n  /**\n   *\n   * Executes a given `KeyboardControlParams` object.\n   *\n   */\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\n    if (!this._currentDefinitions) {\n      return;\n    }\n\n    const params = this.getParams(execution.params, keyboardEvent);\n\n    if (isNumber(execution.action)) {\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\n\n      if (predefinedAction) {\n        predefinedAction(this.cesiumService, params, keyboardEvent);\n      }\n    } else if (typeof execution.action === 'function') {\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\n\n      if (shouldCancelEvent === false) {\n        this._activeDefinitions[key] = {\n          state: KeyEventState.IGNORED,\n          action: null,\n          keyboardEvent: null,\n        };\n      }\n    }\n  }\n\n  /**\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private registerEvents(outsideOfAngularZone: boolean) {\n    const registerToEvents = () => {\n      this.document.addEventListener('keydown', this.handleKeydown);\n      this.document.addEventListener('keyup', this.handleKeyup);\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\n    };\n\n    if (outsideOfAngularZone) {\n      this.ngZone.runOutsideAngular(registerToEvents);\n    } else {\n      registerToEvents();\n    }\n  }\n\n  /**\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private unregisterEvents() {\n    this.document.removeEventListener('keydown', this.handleKeydown);\n    this.document.removeEventListener('keyup', this.handleKeyup);\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\n  }\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\n\nexport class CesiumPureEventObserver {\n  public observer: Observable<any>;\n\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\n  }\n\n  init(eventsHandler: any): Observable<any> {\n    this.observer = Observable.create((observer: Subscriber<any>) => {\n        eventsHandler.setInputAction((movement: any) => {\n          if (movement.position) {\n            movement.startPosition = movement.position;\n            movement.endPosition = movement.position;\n          }\n          observer.next(movement);\n        }, this.event, this.modifier);\n      }\n    );\n    return this.observer;\n  }\n}\n","import { ConnectableObservable, of as observableOf } from 'rxjs';\n\nimport { delay, mergeMap, publish, takeUntil } from 'rxjs/operators';\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\nimport { CesiumEventBuilder } from '../cesium-event-builder';\n\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\n  public static LONG_PRESS_EVENTS_DURATION = 250;\n\n  constructor(protected event: CesiumEvent,\n              protected modifier: CesiumEventModifier,\n              private eventFactory: CesiumEventBuilder) {\n    super(event, modifier);\n  }\n\n  init(): ConnectableObservable<any> {\n    let startEvent: CesiumEvent;\n    let stopEvent: CesiumEvent;\n\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\n      startEvent = CesiumEvent.LEFT_DOWN;\n      stopEvent = CesiumEvent.LEFT_UP;\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\n      startEvent = CesiumEvent.RIGHT_DOWN;\n      stopEvent = CesiumEvent.RIGHT_UP;\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\n      startEvent = CesiumEvent.MIDDLE_DOWN;\n      stopEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier);\n    const stopEventObservable = this.eventFactory.get(stopEvent, this.modifier);\n\n    // publish for preventing side effect\n    const longPressObservable = publish()(startEventObservable.pipe(\n      mergeMap((e) => observableOf(e).pipe(\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\n        takeUntil(stopEventObservable))),\n    ));\n    return longPressObservable;\n  }\n}\n","import { publish } from 'rxjs/operators';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { Injectable } from '@angular/core';\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\nimport { ConnectableObservable } from 'rxjs';\n\n@Injectable()\nexport class CesiumEventBuilder {\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  public static longPressEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LONG_LEFT_PRESS,\n    CesiumEvent.LONG_RIGHT_PRESS,\n    CesiumEvent.LONG_MIDDLE_PRESS\n  ]);\n\n  private eventsHandler: any;\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\n\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\n    if (modifier) {\n      return `${event}_${modifier}`;\n    } else {\n      return event.toString();\n    }\n  }\n\n  init() {\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\n  }\n\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\n    if (this.cesiumEventsObservables.has(eventName)) {\n      return this.cesiumEventsObservables.get(eventName);\n    } else {\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\n      this.cesiumEventsObservables.set(eventName, eventObserver);\n      return eventObserver;\n    }\n  }\n\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    let cesiumEventObservable: ConnectableObservable<any>;\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\n    } else {\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\n    }\n    cesiumEventObservable.connect();\n    return cesiumEventObservable;\n  }\n\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\n    // could support more events if needed\n    return new CesiumLongPressObserver(event, modifier, this).init();\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AcEntity } from '../../models/ac-entity';\nimport { Subject } from 'rxjs';\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\n\n/**\n * Service for solving plonter.\n * Used by map-event-manager and plonter context component\n */\n@Injectable()\nexport class PlonterService {\n  private _plonterShown: boolean;\n  private _entitesToPlonter: AcEntity[] = [];\n  private _plonterObserver: Subject<EventResult>;\n  private _eventResult: EventResult;\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this._plonterObserver = new Subject<EventResult>();\n  }\n\n  get plonterChangeNotifier(): EventEmitter<any> {\n    return this._plonterChangeNotifier;\n  }\n\n  get plonterShown(): boolean {\n    return this._plonterShown;\n  }\n\n  get entitesToPlonter(): AcEntity[] {\n    return this._entitesToPlonter;\n  }\n\n  get plonterClickPosition(): Movement {\n    return this._eventResult.movement;\n  }\n\n  plonterIt(eventResult: EventResult) {\n    this._eventResult = eventResult;\n    this._entitesToPlonter = eventResult.entities;\n    this._plonterShown = true;\n\n    this._plonterChangeNotifier.emit();\n    return this._plonterObserver;\n  }\n\n  resolvePlonter(entity: AcEntity) {\n    this._plonterShown = false;\n    this._eventResult.entities = [entity];\n\n    this._plonterChangeNotifier.emit();\n    this._plonterObserver.next(this._eventResult);\n  }\n}\n","export const UtilsService = {\n  unique: (array: any[]): any[] => {\n    return array.reduce((accumulator, currentValue) => {\n      if (accumulator.indexOf(currentValue) < 0) {\n        accumulator.push(currentValue);\n      }\n      return accumulator;\n    }, []);\n  }\n};\n\n","import { CesiumEvent } from '../consts/cesium-event.enum';\n\nexport class CesiumDragDropHelper {\n\n  public static dragEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LEFT_CLICK_DRAG,\n    CesiumEvent.RIGHT_CLICK_DRAG,\n    CesiumEvent.MIDDLE_CLICK_DRAG\n  ]);\n\n\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\n    let mouseDownEvent;\n    let mouseUpEvent;\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\n      mouseUpEvent = CesiumEvent.LEFT_UP;\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    return {mouseDownEvent, mouseUpEvent};\n  }\n}\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\n\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEventBuilder } from './cesium-event-builder';\nimport { EventRegistrationInput } from './event-registration-input';\nimport { DisposableObservable } from './disposable-observable';\nimport { PickOptions } from './consts/pickOptions.enum';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { PlonterService } from '../plonter/plonter.service';\nimport { UtilsService } from '../../utils/utils.service';\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\n\nclass Registration {\n  constructor(public observable: Observable<EventResult>,\n              public  stopper: Subject<any>,\n              public  priority: number,\n              public  isPaused: boolean) {\n  }\n}\n\n/**\n * Returns screen position, drag boolean for drag events only\n */\nexport interface Movement {\n  startPosition: { x: number, y: number };\n  endPosition: { x: number, y: number };\n  drop?: boolean;\n}\n\nexport interface EventResult {\n  movement: Movement;\n  cesiumEntities: any[];\n  entities: any[];\n}\n\n/**\n * Manages all map events. Notice events will run outside of Angular zone.\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\n *\n * __usage:__\n * ```\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\n * ```\n * __param:__ {CesiumEvent} event\n * __param:__ {CesiumEventModifier} modifier\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\n * __param:__ pickOption - self explained\n */\n@Injectable()\nexport class MapEventsManagerService {\n\n  private scene: any;\n  private eventRegistrations = new Map<string, Registration[]>();\n\n  constructor(private cesiumService: CesiumService,\n              private eventBuilder: CesiumEventBuilder,\n              private plonterService: PlonterService) {\n  }\n\n  init() {\n    this.eventBuilder.init();\n    this.scene = this.cesiumService.getScene();\n  }\n\n  /**\n   * Register to map event\n   * @param input Event Registration Input\n   *\n   * @returns DisposableObservable<EventResult>\n   */\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\n    if (this.scene === undefined) {\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\n    }\n\n    input.pick = input.pick || PickOptions.NO_PICK;\n    input.priority = input.priority || 0;\n\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\n    }\n\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\n\n    if (!this.eventRegistrations.has(eventName)) {\n      this.eventRegistrations.set(eventName, []);\n    }\n\n    const eventRegistration = this.createEventRegistration(\n      input.event,\n      input.modifier,\n      input.entityType,\n      input.pick,\n      input.priority,\n      input.pickFilter);\n    const registrationObservable: any = eventRegistration.observable;\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\n    this.eventRegistrations.get(eventName).push(eventRegistration);\n\n    this.sortRegistrationsByPriority(eventName);\n    return <DisposableObservable<EventResult>> registrationObservable;\n  }\n\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\n    eventRegistration.stopper.next(1);\n    const registrations = this.eventRegistrations.get(eventName);\n    const index = registrations.indexOf(eventRegistration);\n    if (index !== -1) {\n      registrations.splice(index, 1);\n    }\n    this.sortRegistrationsByPriority(eventName);\n  }\n\n  private sortRegistrationsByPriority(eventName: string) {\n    const registrations = this.eventRegistrations.get(eventName);\n    registrations.sort((a, b) => b.priority - a.priority);\n    if (registrations.length === 0) {\n      return;\n    }\n\n    // Active registrations by priority\n    const currentPriority = registrations[0].priority;\n    registrations.forEach((registration) => {\n      registration.isPaused = registration.priority < currentPriority;\n    });\n\n  }\n\n  private createEventRegistration(event: CesiumEvent,\n                                  modifier: CesiumEventModifier,\n                                  entityType: any,\n                                  pickOption: PickOptions,\n                                  priority: number,\n                                  pickFilter?: (any) => boolean): Registration {\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\n    const stopper = new Subject<any>();\n\n    const registration = new Registration(undefined, stopper, priority, false);\n    let observable: Observable<EventResult>;\n\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\n      observable = cesiumEventObservable.pipe(\n        filter(() => !registration.isPaused),\n        map((movement) => this.triggerPick(movement, pickOption)),\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\n        takeUntil(stopper), );\n    } else {\n      observable = this.createDragEvent(event, modifier, entityType, pickOption, priority, pickFilter).pipe(takeUntil(stopper));\n    }\n\n    registration.observable = observable;\n    return registration;\n  }\n\n  private createDragEvent(event: CesiumEvent,\n                          modifier: CesiumEventModifier,\n                          entityType: any,\n                          pickOption: PickOptions,\n                          priority: number,\n                          pickFilter?: (any) => boolean): Observable<EventResult> {\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\n\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\n\n    const mouseDownRegistration = this.createEventRegistration(mouseDownEvent, modifier, entityType, pickOption, priority, pickFilter);\n\n    const dropSubject = new Subject<EventResult>();\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\n      let lastMove: any = null;\n      const dragStartPositionX = e.movement.startPosition.x;\n      const dragStartPositionY = e.movement.startPosition.y;\n      return mouseMoveObservable.pipe(map((movement) => {\n        lastMove = {\n          movement: {\n            drop: false,\n            startPosition: {\n              x: dragStartPositionX,\n              y: dragStartPositionY,\n            },\n            endPosition: movement.endPosition,\n          },\n          entities: e.entities,\n          cesiumEntities: e.cesiumEntities\n        };\n        return lastMove;\n      }), takeUntil(mouseUpObservable), tap(undefined, undefined, () => {\n        // On complete\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.movement.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n    }));\n\n    return merge(dragObserver, dropSubject);\n\n  }\n\n  private triggerPick(movement: any, pickOptions: PickOptions) {\n    let picks: any = [];\n    switch (pickOptions) {\n      case PickOptions.PICK_ONE:\n      case PickOptions.PICK_ALL:\n        picks = this.scene.drillPick(movement.endPosition);\n        picks = picks.length === 0 ? null : picks;\n        break;\n      case PickOptions.PICK_FIRST:\n        const pick = this.scene.pick(movement.endPosition);\n        picks = pick === undefined ? null : [pick];\n        break;\n      case PickOptions.NO_PICK:\n        break;\n      default:\n        break;\n    }\n\n    // Picks can be cesium entity or cesium primitive\n    if (picks) {\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Cesium.Entity ? pick.id : pick.primitive);\n    }\n\n    return { movement: movement, cesiumEntities: picks };\n  }\n\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\n\n    if (picksAndMovement.cesiumEntities === null) {\n      picksAndMovement.entities = null;\n      return picksAndMovement;\n    }\n    let entities = [];\n    if (pickOption !== PickOptions.NO_PICK) {\n      if (entityType) {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\n          return acEntity && acEntity instanceof entityType;\n        });\n      } else {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\n      }\n\n      entities = UtilsService.unique(entities);\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\n      if (entities.length === 0) {\n        entities = null;\n      }\n    }\n\n    picksAndMovement.entities = entities;\n\n    return picksAndMovement;\n  }\n\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\n      return this.plonterService.plonterIt(entitiesAndMovement);\n    } else {\n      return observableOf(entitiesAndMovement);\n    }\n  }\n}\n","import { CesiumService } from '../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapLayersService {\n\n  private layersDataSources: any[] = [];\n\n  constructor(private cesiumService: CesiumService) {\n\n  }\n\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\n    dataSources.forEach(ds => {\n      ds.zIndex = zIndex;\n      this.layersDataSources.push(ds);\n    });\n  }\n\n  drawAllLayers() {\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\n\n    this.layersDataSources.forEach((dataSource) => {\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n    });\n  }\n\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\n    if (dataSources && dataSources.length) {\n      dataSources.forEach((ds) => {\n        const index = this.layersDataSources.indexOf(ds);\n        if (index !== -1) {\n          this.layersDataSources[index].zIndex = newZIndex;\n        }\n      });\n\n      this.cesiumService.getViewer().dataSources.removeAll();\n      this.drawAllLayers();\n    }\n  }\n\n  removeDataSources(dataSources: any[]) {\n    dataSources.forEach(ds => {\n      const index = this.layersDataSources.indexOf(ds);\n      if (index !== -1) {\n        this.layersDataSources.splice(index, 1);\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\n */\n@Injectable()\nexport class MapsManagerService {\n  private defaultIdCounter = 0;\n  private _Maps = new Map<string, AcMapComponent>();\n  private firstMap: any;\n  private eventRemoveCallbacks: Function[] = [];\n\n  constructor() {\n  }\n\n  getMap(id?: string): AcMapComponent | undefined {\n    if (!id) {\n      return this.firstMap;\n    }\n    return this._Maps.get(id);\n  }\n\n  _registerMap(id: string, acMap: AcMapComponent): string {\n    if (!this.firstMap) {\n      this.firstMap = acMap;\n    }\n\n    const mapId = id ? id : this.generateDefaultId();\n    if (this._Maps.has(mapId)) {\n      throw new Error(`Map with id: ${mapId} already exist`);\n    }\n    this._Maps.set(mapId, acMap);\n    return mapId;\n  }\n\n  _removeMapById(id: string) {\n    return this._Maps.delete(id);\n  }\n\n  private generateDefaultId(): string {\n    this.defaultIdCounter++;\n    return 'default-map-id-' + this.defaultIdCounter;\n  }\n\n  /**\n   * Binds multiple 2D map's cameras together.\n   * @param mapsConfiguration - binding options.\n   * mapId - the id of the maps to bind.\n   * sensitivity - the amount the camera position should change in order to sync other maps.\n   * bindZoom - should bind zoom level\n   */\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\n    const DEFAULT_SENSITIVITY = 0.01;\n    this.unsyncMapsCameras();\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\n      const map = this.getMap(config.id);\n      if (!map) {\n        throw new Error(`Couldn't find map with id: ${config.id}`);\n      }\n\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\n    });\n\n    maps.forEach(masterMapConfig => {\n      const masterMap = masterMapConfig.map;\n      const options = masterMapConfig.options;\n      const masterCamera = masterMap.getCameraService().getCamera();\n      const masterCameraCartographic = masterCamera.positionCartographic;\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\n      const removeCallback = masterCamera.changed.addEventListener(() => {\n        maps.forEach(slaveMapConfig => {\n          const slaveMap = slaveMapConfig.map;\n          const slaveMapOptions = slaveMapConfig.options;\n          if (slaveMap === masterMap) {\n            return;\n          }\n\n          const slaveCamera = slaveMap.getCameraService().getCamera();\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\n          const position = Cesium.Ellipsoid.WGS84.cartographicToCartesian({\n            longitude: masterCameraCartographic.longitude,\n            latitude: masterCameraCartographic.latitude,\n            height: slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height,\n          });\n\n          if (slaveMap.getCesiumViewer().scene.mode !== Cesium.SceneMode.MORPHING) {\n            slaveCamera.setView({\n              destination: position,\n              orientation: {\n                heading: slaveCamera.heading,\n                pitch: slaveCamera.pitch,\n              },\n            });\n          }\n        });\n      });\n      this.eventRemoveCallbacks.push(removeCallback);\n    });\n  }\n\n  /**\n   * Unsyncs maps cameras\n   */\n  unsyncMapsCameras() {\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\n    this.eventRemoveCallbacks = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\n\n/**\n * Take screenshot of your cesium globe.\n *\n * usage:\n * ```typescript\n * // get base 64 data url\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\n *\n * // or download as png\n * screenshotService.downloadMapScreenshot('my-map.png');\n *\n * ```\n *\n */\n@Injectable()\nexport class ScreenshotService {\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  getMapScreenshotDataUrlBase64() {\n    const canvas = this.cesiumService.getCanvas();\n    return canvas.toDataURL();\n  }\n\n\n  downloadMapScreenshot(filename = 'map.png') {\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\n    this.downloadURI(dataUrl, filename);\n  }\n\n  private downloadURI(uri: string, name: string) {\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfigurationService } from '../../cesium-enhancements/ConfigurationService';\nimport { SceneMode } from '../../models/scene-mode.enum';\nimport { CameraService } from '../../services/camera/camera.service';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\n\n/**\n * This is a map implementation, creates the cesium map.\n * Every layer should be tag inside ac-map tag\n *\n * Accessing cesium viewer:\n * 1. acMapComponent.getCesiumViewer()\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\n *\n *\n * @example\n * <ac-map>\n *     <ac-map-layer-provider></ac-map-layer-provider>\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\n * </ac-map>\n */\n@Component({\n  selector: 'ac-map',\n  template: `\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\n    <ng-content></ng-content>\n  `,\n  providers: [\n    CesiumService,\n    BillboardDrawerService,\n    CesiumEventBuilder,\n    KeyboardControlService,\n    MapEventsManagerService,\n    PlonterService,\n    LabelDrawerService,\n    PolylineDrawerService,\n    PolylinePrimitiveDrawerService,\n    EllipseDrawerService,\n    PointDrawerService,\n    ArcDrawerService,\n    CzmlDrawerService,\n    PolygonDrawerService,\n    MapLayersService,\n    CameraService,\n    ScreenshotService,\n    ContextMenuService,\n    CoordinateConverter,\n  ],\n})\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n  /**\n   * Disable default plonter context menu\n   */\n  @Input()\n  disableDefaultPlonter = false;\n\n  /**\n   * Set the id name of the map\n   * default: 'default-map-id-[index]'\n   */\n  @Input()\n  mapId: string;\n\n  /**\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  @Input()\n  flyTo: any;\n\n  /**\n   * Sets the map's SceneMode\n   */\n  @Input()\n  sceneMode: SceneMode;\n\n  /**\n   * Optional - the container element's id in which the map's canvas will be appended to.\n   * If not supplied - the container element will be the parent element of ac-map;\n   */\n  @Input()\n  containerId: string;\n\n  private mapContainer: HTMLElement;\n\n  constructor(\n    private _cesiumService: CesiumService,\n    private _cameraService: CameraService,\n    private _elemRef: ElementRef,\n    @Inject(DOCUMENT) private document,\n    private mapsManagerService: MapsManagerService,\n    private billboardDrawerService: BillboardDrawerService,\n    private labelDrawerService: LabelDrawerService,\n    private ellipseDrawerService: EllipseDrawerService,\n    private polylineDrawerService: PolylineDrawerService,\n    private polygonDrawerService: PolygonDrawerService,\n    private arcDrawerService: ArcDrawerService,\n    private pointDrawerService: PointDrawerService,\n    private czmlDrawerService: CzmlDrawerService,\n    private mapEventsManager: MapEventsManagerService,\n    private keyboardControlService: KeyboardControlService,\n    private mapLayersService: MapLayersService,\n    private configurationService: ConfigurationService,\n    private screenshotService: ScreenshotService,\n    public contextMenuService: ContextMenuService,\n    private coordinateConverter: CoordinateConverter,\n  ) {\n    this.mapContainer = this.document.createElement('div');\n    this.mapContainer.style.width = '100%';\n    this.mapContainer.style.height = '100%';\n    this.mapContainer.className = 'map-container';\n    this._cesiumService.init(this.mapContainer, this);\n    this._cameraService.init(this._cesiumService);\n    this.mapEventsManager.init();\n    this.billboardDrawerService.init();\n    this.labelDrawerService.init();\n    this.ellipseDrawerService.init();\n    this.polylineDrawerService.init();\n    this.polygonDrawerService.init();\n    this.arcDrawerService.init();\n    this.pointDrawerService.init();\n    this.czmlDrawerService.init();\n    this.keyboardControlService.init();\n    this.contextMenuService.init(this.mapEventsManager);\n  }\n\n  ngOnInit() {\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\n    if (!this.containerId) {\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['sceneMode']) {\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\n    }\n    if (changes['flyTo']) {\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\n    }\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\n      const element = this.document.getElementById(changes['containerId'].currentValue);\n      if (element) {\n        element.appendChild(this.mapContainer);\n      } else {\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.mapLayersService.drawAllLayers();\n    if (this.containerId) {\n      setTimeout(() => {\n        const element = this.document.getElementById(this.containerId);\n        if (element) {\n          element.appendChild(this.mapContainer);\n        } else {\n          throw new Error(`No element found with id: ${this.containerId}`);\n        }\n      }, 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapContainer.remove();\n    this.mapsManagerService._removeMapById(this.mapId);\n  }\n\n  /**\n   * @returns ac-map's cesium service\n   */\n  getCesiumService() {\n    return this._cesiumService;\n  }\n\n  /**\n   * @returns map's cesium viewer\n   */\n  getCesiumViewer() {\n    return this._cesiumService.getViewer();\n  }\n\n\n  getCameraService(): CameraService {\n    return this._cameraService;\n  }\n\n  getId() {\n    return this.mapId;\n  }\n\n\n  getMapContainer() {\n    return this.mapContainer;\n  }\n\n\n  getMapEventsManager(): MapEventsManagerService {\n    return this.mapEventsManager;\n  }\n\n  getContextMenuService(): ContextMenuService {\n    return this.contextMenuService;\n  }\n\n  getScreenshotService() {\n    return this.screenshotService;\n  }\n\n  getKeyboardControlService() {\n    return this.keyboardControlService;\n  }\n\n  getCoordinateConverter() {\n    return this.coordinateConverter;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IDescription } from '../../models/description';\nimport { LayerOptions } from '../../models/layer-options';\n\n@Injectable()\nexport class LayerService {\n  private _context: any;\n  private _options: LayerOptions;\n  private _show: boolean;\n  private _zIndex: number;\n  private _entityName: string;\n  private _cache = true;\n  private descriptions: IDescription[] = [];\n  private layerUpdate = new EventEmitter();\n\n  get cache(): boolean {\n    return this._cache;\n  }\n\n  set cache(value: boolean) {\n    this._cache = value;\n  }\n\n  get zIndex(): number {\n    return this._zIndex;\n  }\n\n  set zIndex(value: number) {\n    if (value !== this._zIndex) {\n      this.layerUpdate.emit();\n    }\n    this._zIndex = value;\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set show(value: boolean) {\n    if (value !== this._show) {\n      this.layerUpdate.emit();\n    }\n    this._show = value;\n  }\n\n  get options(): LayerOptions {\n    return this._options;\n  }\n\n  set options(value: LayerOptions) {\n    this._options = value;\n    this.layerUpdate.emit();\n  }\n\n  get context(): any {\n    return this._context;\n  }\n\n  set context(context) {\n    this._context = context;\n    this.layerUpdate.emit();\n  }\n\n  setEntityName(name: string) {\n    this._entityName = name;\n  }\n\n  getEntityName(): string {\n    return this._entityName;\n  }\n\n  registerDescription(descriptionComponent: IDescription) {\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\n      this.descriptions.push(descriptionComponent);\n    }\n  }\n\n  unregisterDescription(descriptionComponent: IDescription) {\n    const index = this.descriptions.indexOf(descriptionComponent);\n    if (index > -1) {\n      this.descriptions.splice(index, 1);\n    }\n  }\n\n  getDescriptions(): IDescription[] {\n    return this.descriptions;\n  }\n\n  layerUpdates(): EventEmitter<any> {\n    return this.layerUpdate;\n  }\n}\n","/**\n * Action to do on entity\n */\nexport enum ActionType {\n  ADD_UPDATE,\n  DELETE\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComputationCache {\n  private _cache = new Map<string, any>();\n\n  get(expression: string, insertFn: (() => any)): any {\n    if (this._cache.has(expression)) {\n      return this._cache.get(expression);\n    }\n\n    const value = insertFn();\n    this._cache.set(expression, value);\n    return value;\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n","export class Checker {\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\n  }\n\n  static throwIfNotPresent(value: any, name: string) {\n    if (!Checker.present(value[name])) {\n      throw new Error(`Error: ${name} was not given.`);\n    }\n  }\n\n  static present(value: any) {\n    return value !== undefined && value !== null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { Checker } from '../../../../utils/checker';\nimport { EllipsePrimitive } from 'primitive-primitives';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n\n/**\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\n *  This allows us to change the position of the ellipses without creating a new primitive object\n *  as Cesium does not allow updating an ellipse.\n */\n@Injectable()\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\n\n    return super.add(new EllipsePrimitive(cesiumProps));\n  }\n\n  update(ellipse: any, cesiumProps: any): any {\n    ellipse.updateLocationData(cesiumProps);\n\n    return ellipse;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for creating the dynamic version of the polyline component.\n */\n@Injectable()\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n}\n","import { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n *\n * This drawer is deprecated.\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\n */\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\n  constructor(private geometryType: any, cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    primitiveProps.asynchronous = false;\n    const primitive = new Cesium.Primitive(primitiveProps);\n    return super.add(primitive);\n  }\n\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    this._cesiumCollection.remove(primitive);\n    return super.add(new Cesium.Primitive(primitiveProps));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the circle component.\n */\n@Injectable()\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.CircleGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the polyline component.\n *  This also allows us to change the color of the polylines.\n */\n@Injectable()\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineGeometry, cesiumService);\n  }\n\n  /**\n   * Update function can only change the primitive color.\n   */\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    const color = instanceProps.attributes.color.value;\n\n    if (primitive.ready) {\n      primitive.getGeometryInstanceAttributes().color = color;\n    } else {\n      Cesium.when(primitive.readyPromise).then((readyPrimitive: any) => {\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\n      });\n    }\n\n    return primitive;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n + This drawer is responsible for drawing a polygon over the Cesium map.\n + This implementation uses simple PolygonGeometry and Primitive parameters.\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\n */\n@Injectable()\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolygonGeometry, cesiumService);\n  }\n}\n","import { CesiumService } from '../../../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n\n/**\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\n + */\n@Injectable()\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.EllipseGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing models.\n */\n@Injectable()\nexport class ModelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing box.\n */\n@Injectable()\nexport class BoxDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.box);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing corridors .\n */\n@Injectable()\nexport class CorridorDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.corridor);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing cylinders.\n */\n@Injectable()\nexport class CylinderDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.cylinder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipsoid.\n */\n@Injectable()\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipsoid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polylines.\n */\n@Injectable()\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polylineVolume);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class WallDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.wall);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing rectangle.\n */\n@Injectable()\nexport class RectangleDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.rectangle);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing labels as primitives.\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\n */\n@Injectable()\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.LabelCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing billboards as primitives.\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\n */\n@Injectable()\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.BillboardCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing points as primitives.\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\n */\n@Injectable()\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PointPrimitiveCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n@Injectable()\nexport class HtmlDrawerService extends PrimitivesDrawerService {\n  constructor(private _cesiumService: CesiumService) {\n    super(Cesium.HtmlCollection, _cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.scene = this._cesiumService.getScene();\n    cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\n    return super.add(cesiumProps);\n  }\n}\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\n// tslint:disable\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerOptions } from '../../models/layer-options';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\n\n// tslint:enable\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\n *  + show `{boolean}` - show/hide layer's entities.\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\n *\n *\n *  __Usage :__\n *  ```\n *  <ac-map>\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\n *      <ac-billboard-desc props=\"{\n *        image: track.image,\n *        position: track.position,\n *        scale: track.scale,\n *        color: track.color,\n *        name: track.name\n *      }\">\n *      </ac-billboard-desc>\n *        <ac-label-desc props=\"{\n *          position: track.position,\n *          pixelOffset : [-15,20] | pixelOffset,\n *          text: track.name,\n *          font: '15px sans-serif'\n *        }\">\n *      </ac-label-desc>\n *    </ac-layer>\n *  </ac-map>\n *  ```\n */\n@Component({\n  selector: 'ac-layer',\n  template: '<ng-content></ng-content>',\n  providers: [\n    LayerService,\n    ComputationCache,\n    BillboardDrawerService,\n    LabelDrawerService,\n    EllipseDrawerService,\n    PolylineDrawerService,\n    ArcDrawerService,\n    PointDrawerService,\n    PolygonDrawerService,\n    ModelDrawerService,\n    BoxDrawerService,\n    CorridorDrawerService,\n    CylinderDrawerService,\n    EllipsoidDrawerService,\n    PolylineVolumeDrawerService,\n    WallDrawerService,\n    RectangleDrawerService,\n    PolylinePrimitiveDrawerService,\n    LabelPrimitiveDrawerService,\n    BillboardPrimitiveDrawerService,\n    PointPrimitiveDrawerService,\n    HtmlDrawerService,\n    CzmlDrawerService,\n\n    DynamicEllipseDrawerService,\n    DynamicPolylineDrawerService,\n    StaticCircleDrawerService,\n    StaticPolylineDrawerService,\n    StaticPolygonDrawerService,\n    StaticEllipseDrawerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n  @Input()\n  show = true;\n  @Input()\n  acFor: string;\n  @Input()\n  context: any;\n  @Input()\n  store = false;\n  @Input()\n  options: LayerOptions;\n  @Input()\n  zIndex = 0;\n\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  private entityName: string;\n  private stopObservable = new Subject<any>();\n  private observable: Observable<AcNotification>;\n  private _drawerList: Map<string, BasicDrawerService>;\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n  private entitiesStore = new Map<string, any>();\n  private layerDrawerDataSources: any[] = [];\n\n  constructor(private layerService: LayerService,\n              private _computationCache: ComputationCache,\n              private mapLayersService: MapLayersService,\n              billboardDrawerService: BillboardDrawerService,\n              labelDrawerService: LabelDrawerService,\n              ellipseDrawerService: EllipseDrawerService,\n              polylineDrawerService: PolylineDrawerService,\n              polygonDrawerService: PolygonDrawerService,\n              arcDrawerService: ArcDrawerService,\n              pointDrawerService: PointDrawerService,\n              modelDrawerService: ModelDrawerService,\n              boxDrawerService: BoxDrawerService,\n              corridorDrawerService: CorridorDrawerService,\n              cylinderDrawerService: CylinderDrawerService,\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\n              wallDrawerService: WallDrawerService,\n              rectangleDrawerService: RectangleDrawerService,\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n              staticCircleDrawerService: StaticCircleDrawerService,\n              staticPolylineDrawerService: StaticPolylineDrawerService,\n              staticPolygonDrawerService: StaticPolygonDrawerService,\n              staticEllipseDrawerService: StaticEllipseDrawerService,\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\n              htmlDrawerService: HtmlDrawerService,\n              czmlDrawerService: CzmlDrawerService\n  ) {\n    this._drawerList = new Map([\n      ['billboard', billboardDrawerService],\n      ['label', labelDrawerService],\n      ['ellipse', ellipseDrawerService],\n      ['polyline', polylineDrawerService],\n      ['polygon', polygonDrawerService as BasicDrawerService],\n      ['arc', arcDrawerService],\n      ['point', pointDrawerService],\n      ['model', modelDrawerService],\n      ['box', boxDrawerService],\n      ['corridor', corridorDrawerService],\n      ['cylinder', cylinderDrawerService],\n      ['ellipsoid', ellipsoidDrawerSerice],\n      ['polylineVolume', polylineVolumeDrawerService],\n      ['rectangle', rectangleDrawerService],\n      ['wall', wallDrawerService],\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\n      ['labelPrimitive', labelPrimitiveDrawerService],\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\n      ['pointPrimitive', pointPrimitiveDrawerService],\n      ['html', htmlDrawerService],\n      ['czml', czmlDrawerService],\n\n      ['dynamicEllipse', dynamicEllipseDrawerService],\n      ['dynamicPolyline', dynamicPolylineDrawerService],\n      ['staticCircle', staticCircleDrawerService],\n      ['staticPolyline', staticPolylineDrawerService],\n      ['staticPolygon', staticPolygonDrawerService],\n      ['staticEllipse', staticEllipseDrawerService],\n    ]);\n  }\n\n  init() {\n    this.initValidParams();\n\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\n      this._computationCache.clear();\n\n      let contextEntity = notification.entity;\n      if (this.store) {\n        contextEntity = this.updateStore(notification);\n      }\n\n      this.context[this.entityName] = contextEntity;\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\n        switch (notification.actionType) {\n          case ActionType.ADD_UPDATE:\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\n            break;\n          case ActionType.DELETE:\n            descriptionComponent.remove(notification.id);\n            break;\n          default:\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\n        }\n      });\n    });\n  }\n\n  private updateStore(notification: AcNotification): any {\n    if (notification.actionType === ActionType.DELETE) {\n      this.entitiesStore.delete(notification.id);\n      return undefined;\n    } else {\n      if (this.entitiesStore.has(notification.id)) {\n        const entity = this.entitiesStore.get(notification.id);\n        Object.assign(entity, notification.entity);\n        return entity;\n      } else {\n        this.entitiesStore.set(notification.id, notification.entity);\n        return notification.entity;\n      }\n    }\n  }\n\n  private initValidParams() {\n    if (!this.context) {\n      throw new Error('ac-layer: must initialize [context] ');\n    }\n\n    if (!this.acForRgx.test(this.acFor)) {\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\n    }\n    const acForArr = this.acFor.split(' ');\n    this.observable = this.context[acForArr[3]];\n    this.entityName = acForArr[1];\n    if (!this.isObservable(this.observable)) {\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n    }\n\n    this.layerService.context = this.context;\n    this.layerService.setEntityName(this.entityName);\n  }\n\n  /** Test for a rxjs Observable */\n  private isObservable(obj: any): boolean {\n    /* check via duck-typing rather than instance of\n     * to allow passing between window contexts */\n    return obj && typeof obj.subscribe === 'function';\n  }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnInit(): void {\n    this.layerService.context = this.context;\n    this.layerService.options = this.options;\n    this.layerService.show = this.show;\n    this.layerService.zIndex = this.zIndex;\n    this._drawerList.forEach((drawer, drawerName) => {\n      const initOptions = this.options ? this.options[drawerName] : undefined;\n      const drawerDataSources = drawer.init(initOptions);\n      // only entities drawers create data sources\n      if (drawerDataSources) {\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\n        // TODO: Check if the following line causes Bad Performance\n        this.layerDrawerDataSources.push(...drawerDataSources);\n      }\n      drawer.setShow(this.show);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.show && !changes.show.firstChange) {\n      const showValue = changes['show'].currentValue;\n      this.layerService.show = showValue;\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\n    }\n\n    if (changes.zIndex && !changes.zIndex.firstChange) {\n      const zIndexValue = changes['zIndex'].currentValue;\n      this.layerService.zIndex = zIndexValue;\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\n    this.stopObservable.next(true);\n    this.removeAll();\n  }\n\n  getLayerService(): LayerService {\n    return this.layerService;\n  }\n\n  /**\n   * Returns an array of DataSources registered by a drawer of this layer\n   * @return Array of Cesium.DataSources\n   */\n  getLayerDrawerDataSources(): any[] {\n    return this.layerDrawerDataSources;\n  }\n\n  /**\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\n   * @return Array of Cesium.DataSources\n   */\n  getDrawerDataSourcesByName(name: string): any[] {\n    return this.layerDrawerDataSources.filter(d => d.name === name);\n  }\n\n  /**\n   * Returns the store.\n   */\n  getStore(): Map<string, any> {\n    return this.entitiesStore;\n  }\n\n  /**\n   * Remove all the entities from the layer.\n   */\n  removeAll(): void {\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\n    this.entitiesStore.clear();\n  }\n\n  /**\n   * remove entity from the layer\n   */\n  remove(entityId: string) {\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n    this.entitiesStore.delete(entityId);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  updateNotification(notification: AcNotification): void {\n    this._updateStream.next(notification);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  update(entity: AcEntity, id: string): void {\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\n  }\n\n  refreshAll(collection: AcNotification[]): void {\n    // TODO make entity interface: collection of type entity not notification\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\n  }\n}\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { MapLayersService } from '../map-layers/map-layers.service';\n\n/**\n *  Extend this class to create drawing on map components.\n */\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  props: any;\n\n  protected selfPrimitive: any;\n  protected selfPrimitiveIsDraw: boolean;\n  protected dataSources: any;\n\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\n  }\n\n  ngOnInit(): void {\n    this.selfPrimitiveIsDraw = false;\n    const dataSources = this._drawer.init();\n    if (dataSources) {\n      this.dataSources = dataSources;\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\n    }\n    this.drawOnMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const props = changes['props'];\n    if (props.currentValue !== props.previousValue) {\n      this.updateOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.props);\n  }\n\n  removeFromMap() {\n    this.selfPrimitiveIsDraw = false;\n    return this._drawer.remove(this.selfPrimitive);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      return this._drawer.update(this.selfPrimitive, this.props);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayers.removeDataSources(this.dataSources);\n    this.removeFromMap();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard [props]=\"{\n *      image: image,\n *      position: position,\n *      scale: scale,\n *      color: color,\n *      name: name\n *    }\">;\n *    </ac-billboard>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard',\n  template: '',\n})\nexport class AcBillboardComponent extends EntityOnMapComponent {\n\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\n    super(billboardDrawer, mapLayers);\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { IDescription } from '../../models/description';\n\nexport interface OnDrawParams {\n  acEntity: AcEntity;\n  entityId: string;\n  cesiumEntity: any;\n}\n\n/**\n *  the ancestor class for creating components.\n *  extend this class to create desc component.\n */\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\n  @Input()\n  props: any;\n\n  @Output()\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  @Output()\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\n  private _propsEvaluateFn: Function;\n  private _propsAssignerFn: Function;\n\n  constructor(protected _drawer: BasicDrawerService,\n              protected _layerService: LayerService,\n              protected _computationCache: ComputationCache,\n              protected _cesiumProperties: CesiumProperties) {\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    return this._propsEvaluateFn(this._computationCache, context);\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\n  }\n\n  getLayerService(): LayerService {\n    return this._layerService;\n  }\n\n  setLayerService(layerService: LayerService) {\n    this._layerService.unregisterDescription(this);\n    this._layerService = layerService;\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  ngOnInit(): void {\n    if (!this.props) {\n      console.error('ac-desc components error: [props] input is mandatory');\n    }\n\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  public getCesiumObjectsMap(): Map<string, any> {\n    return this._cesiumObjectsMap;\n  }\n\n  draw(context: any, id: string, entity: AcEntity): void {\n    const cesiumProps = this._propsEvaluator(context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const cesiumObject = this._drawer.add(cesiumProps);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._cesiumObjectsMap.set(id, cesiumObject);\n    } else {\n      const cesiumObject = this._cesiumObjectsMap.get(id);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\n      this._drawer.update(cesiumObject, cesiumProps);\n    }\n  }\n\n  remove(id: string) {\n    const cesiumObject = this._cesiumObjectsMap.get(id);\n    if (cesiumObject) {\n      this.onRemove.emit({\n        acEntity: cesiumObject.acEntity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      this._drawer.remove(cesiumObject);\n      this._cesiumObjectsMap.delete(id);\n    }\n  }\n\n  removeAll() {\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n\n  ngOnDestroy() {\n    this._layerService.unregisterDescription(this);\n    this.removeAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonStringMapper } from 'json-string-mapper';\n\n@Injectable()\nexport class JsonMapper {\n  private _mapper: JsonStringMapper;\n\n  constructor() {\n    this._mapper = new JsonStringMapper();\n  }\n\n  map(expression: string): Map<string, string> {\n    return this._mapper.map(expression);\n  }\n}\n","/**\n * Service for effective assignment.\n */\nexport class SmartAssigner {\n\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\n    let fnBody = ``;\n\n    props.forEach(prop => {\n      if (!allowUndefined) {\n        // tslint:disable-next-line:max-line-length\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\n      } else {\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\n      }\n    });\n\n    fnBody += `return obj1`;\n    const assignFn = new Function('obj1', 'obj2', fnBody);\n\n    return function smartAssigner(obj1: Object, obj2: Object) {\n      return assignFn(obj1, obj2);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\nimport { Parse } from 'angular2parse';\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\n\n@Injectable()\nexport class CesiumProperties {\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\n\n  constructor(private _parser: Parse,\n              private _jsonMapper: JsonMapper) {\n  }\n\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\n    const cesiumDesc = {};\n    const propsMap = new Map<string, { expression: string, get: Function }>();\n\n    const resultMap = this._jsonMapper.map(expression);\n\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\n      expression: resultExpression,\n      get: this._parser.eval(resultExpression)\n    }));\n\n    propsMap.forEach((value, prop) => {\n      if (withCache) {\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\n      } else {\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\n      }\n    });\n\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\n\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\n      return getFn(propsMap, cache, context);\n    };\n  }\n\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\n    const props = Array.from(this._jsonMapper.map(expression).keys());\n    const smartAssigner = SmartAssigner.create(props);\n\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\n      return smartAssigner(oldVal, newVal);\n    };\n  }\n\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\n      return this._evaluatorsCache.get(expression);\n    }\n\n    const evaluatorFn = this._compile(expression, withCache);\n    this._evaluatorsCache.set(expression, evaluatorFn);\n\n    return evaluatorFn;\n  }\n\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\n    if (this._assignersCache.has(expression)) {\n      return this._assignersCache.get(expression);\n    }\n\n    const assignFn = this._build(expression);\n    this._assignersCache.set(expression, assignFn);\n\n    return assignFn;\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\n})\nexport class AcBillboardDescComponent extends BasicDesc {\n\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-layer element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-ellipse-desc props=\"{\n *      position: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      height: 0\n *    }\">\n *    </ac-ellipse-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipse-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\n})\nexport class AcEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\n})\nexport class AcPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * @example\n * <ac-label-desc props=\"{\n *            position: track.position,\n *            pixelOffset : [-15,20] | pixelOffset,\n *            text: track.name,\n *            font: '15px sans-serif'\n *    }\">\n * </ac-label-desc>\n */\n@Pipe({\n  name: 'pixelOffset'\n})\nexport class PixelOffsetPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return new Cesium.Cartesian2(value[0], value[1]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'radiansToDegrees'\n})\nexport class RadiansToDegreesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): number {\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\n  }\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\n})\nexport class AcLabelDescComponent extends BasicDesc {\n\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: []\n})\nexport class UtilsModule {\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-layer element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *__Usage :__\n *  ```\n *    <ac-circle-desc props=\"{\n *      position: data.position,\n *      radius: 5\n *      granularity:0.08 // Optional\n *    }\">\n *    </ac-circle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-circle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\n})\nexport class AcCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n    delete cesiumProps.radius;\n\n    return cesiumProps;\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-layer element.\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc props=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius,\n *          color : arc.color - The color should be Cesium.Color type\n *    }\">\n *    </ac-arc-desc>\n *    ```\n *\n *    description of the props :\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\n *    angle - the initial angle of the arc in radians\n *    delta - the spreading of the arc,\n *    radius - the distance from the center to the arc\n *\n *    for example :\n *    angle - 0\n *    delta - Ï\n *\n *    will draw an half circle\n */\n\n@Component({\n  selector: 'ac-arc-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\n})\nexport class AcArcDescComponent extends BasicDesc {\n\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n}\n","/**\n * Angular Cesium parent entity, all entities should inherit from it.\n * ```typescript\n * entity= new AcEntity({\n *  \tid: 0,\n *  \tname: 'click me',\n *  \tposition: Cesium.Cartesian3.fromRadians(0.5, 0.5),\n * });\n * ```\n */\nexport class AcEntity {\n\n  /**\n   * Creates entity from a json\n   * @param json entity object\n   * @returns entity as AcEntity\n   */\n  static create(json?: any) {\n    if (json) {\n      return Object.assign(new AcEntity(), json);\n    }\n    return new AcEntity();\n  }\n\n  /**\n   * Creates entity from a json\n   * @param json (Optional) entity object\n   */\n  constructor(json?: any) {\n    Object.assign(this, json);\n  }\n}\n","import { ActionType } from './action-type.enum';\nimport { AcEntity } from './ac-entity';\n\n/**\n * Interface of  Angular2Cesium notification.\n * ac-layer receives an observer of AcNotifications\n */\nexport interface AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n\nexport class AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n","export enum MapLayerProviderOptions {\n  ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider,\n  WebMapTileService = Cesium.WebMapTileServiceImageryProvider,\n  MapTileService = Cesium.createTileMapServiceImageryProvider,\n  WebMapService = Cesium.WebMapServiceImageryProvider,\n  SingleTileImagery = Cesium.SingleTileImageryProvider,\n  OpenStreetMap = Cesium.createOpenStreetMapImageryProvider,\n  BingMaps = Cesium.BingMapsImageryProvider,\n  GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider,\n  MapBox = Cesium.MapboxImageryProvider,\n  UrlTemplateImagery = Cesium.UrlTemplateImageryProvider,\n  OFFLINE = null,\n}\n\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapLayerProviderOptions } from '../../models';\n\n/**\n *  This component is used for adding a map provider service to the map (ac-map)\n *  options according to selected map provider MapLayerProviderOptions enum.\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-layer-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-layer-provider',\n  template: '',\n})\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any = MapLayerProviderOptions.OFFLINE;\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * The alpha blending value of this layer: 0.0 to 1.0\n   */\n  @Input()\n  alpha = 1.0;\n\n  /**\n   * The brightness of this layer: 0.0 to 1.0\n   */\n  @Input()\n  brightness = 1.0;\n\n  /**\n   * The contrast of this layer: 0.0 to 1.0\n   */\n  @Input()\n  contrast = 1.0;\n\n  public imageryLayer: any;\n  public imageryLayersCollection: any;\n  public layerProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\n  }\n\n  private createOfflineMapProvider() {\n    return Cesium.createTileMapServiceImageryProvider({\n      url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n    });\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\n      throw new Error('options must have a url');\n    }\n    switch (this.provider) {\n      case MapLayerProviderOptions.WebMapService:\n      case MapLayerProviderOptions.WebMapTileService:\n      case MapLayerProviderOptions.ArcGisMapServer:\n      case MapLayerProviderOptions.SingleTileImagery:\n      case MapLayerProviderOptions.BingMaps:\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\n      case MapLayerProviderOptions.MapBox:\n      case MapLayerProviderOptions.UrlTemplateImagery:\n        this.layerProvider = new this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.MapTileService:\n      case MapLayerProviderOptions.OpenStreetMap:\n        this.layerProvider = this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.OFFLINE:\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n      default:\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n    }\n    if (this.show) {\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n      this.imageryLayer.alpha = this.alpha;\n      this.imageryLayer.contrast = this.contrast;\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.imageryLayer) {\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\n        } else {\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n          this.imageryLayer.alpha = this.alpha;\n          this.imageryLayer.contrast = this.contrast;\n          this.imageryLayer.brightness = this.brightness;\n        }\n      } else if (this.imageryLayer) {\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\n      }\n    }\n\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.alpha = this.alpha;\n    }\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.contrast = this.contrast;\n    }\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.imageryLayer) {\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-point-desc props=\"{\n *     pixelSize : point.pixelSize, //optional\n *     position : point.positions,\n *     color : point.color  //optional\n *   }\">\n *   </ac-point-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-point-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\n})\nexport class AcPointDescComponent extends BasicDesc {\n\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-label [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif',\n *    fillColor : aquamarine\n *  }\">\n *  </ac-label>;\n *  ```\n */\n\n@Component({\n  selector: 'ac-label',\n  template: '',\n})\nexport class AcLabelComponent extends EntityOnMapComponent {\n\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\n    super(labelDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-polyline',\n  template: '',\n})\nexport class AcPolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-ellipse [props]=\"{\n *    position: position,\n *    semiMajorAxis:40000.0,\n *    semiMinorAxis:25000.0,\n *    rotation : 0.785398\n *  }\">\n *  </ac-ellipse>\n *  ```\n */\n\n@Component({\n  selector: 'ac-ellipse',\n  template: '',\n})\nexport class AcEllipseComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-point [props]=\"{\n *    position: position,\n *    width: 3\n *  }\">\n *  </ac-point>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point',\n  template: '',\n})\nexport class AcPointComponent extends EntityOnMapComponent {\n\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\n    super(pointDrawer, mapLayers);\n  }\n}\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-map element.\n *  __Usage:__\n *  ```\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n\n@Component({\n  selector: 'ac-html',\n  template: `<ng-content></ng-content>`,\n  styles: [`:host {\n                position: absolute;\n                z-index: 100;\n\t\t\t\t}`]\n})\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\n\n\n  @Input() props: any;\n  private isDraw = false;\n  preRenderEventListener: () => void;\n\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  setScreenPosition(screenPosition: any) {\n    if (screenPosition) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\n    if (this.props.show === false) {\n      this.hideElement();\n    }\n  }\n\n  remove() {\n    if (this.isDraw) {\n      this.isDraw = false;\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\n      this.hideElement();\n    }\n  }\n\n  hideElement() {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\n  }\n\n  add() {\n    if (!this.isDraw) {\n      this.isDraw = true;\n      this.preRenderEventListener = () => {\n        const screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\n          this.props.position);\n        this.setScreenPosition(screenPosition);\n      };\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.props.show === undefined || this.props.show) {\n      this.add();\n    } else {\n      this.remove();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-map element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-circle [props]=\"{\n *    position: position,\n *    radius:40000.0,\n *    granularity:0.03,\n *  }\">\n *  </ac-circle>\n *  ```\n */\n\n@Component({\n  selector: 'ac-circle',\n  template: '',\n})\nexport class AcCircleComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawerService, mapLayers);\n  }\n\n  private updateEllipseProps() {\n    this.props.semiMajorAxis = this.props.radius;\n    this.props.semiMinorAxis = this.props.radius;\n    this.props.rotation = 0.0;\n  }\n\n  drawOnMap() {\n    this.updateEllipseProps();\n    super.drawOnMap();\n  }\n\n  updateOnMap() {\n    this.updateEllipseProps();\n    super.updateOnMap();\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-map element.\n *  An arc is not natively implemented in cesium.\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc geometryProps=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius\n *       }\"\n *       instanceProps=\"{\n *          attributes: arc.attributes\n *       }\"\n *       primitiveProps=\"{\n *          appearance: arc.appearance\n *       }\">\n *    </ac-arc-desc>\n *    ```\n */\n\n@Component({\n  selector: 'ac-arc',\n  template: '',\n})\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\n\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\n    super(arcDrawer, mapLayers);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      this.removeFromMap();\n      this.drawOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const geometryProps = changes['geometryProps'];\n    const instanceProps = changes['instanceProps'];\n    const primitiveProps = changes['primitiveProps'];\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\n      instanceProps.currentValue !== instanceProps.previousValue ||\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\n      this.updateOnMap();\n    }\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polygon implementation.\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon-desc props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\n})\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\n\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\n\n@Component(\n  {\n    selector: 'ac-default-plonter',\n    template: `\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    `,\n    styles: [`\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [CoordinateConverter],\n  }\n)\nexport class AcDefaultPlonterComponent implements OnInit {\n\n  constructor(public plonterService: PlonterService,\n              private cd: ChangeDetectorRef,\n              private geoConverter: CoordinateConverter) {\n  }\n\n  ngOnInit() {\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\n  }\n\n  get plonterPosition() {\n    if (this.plonterService.plonterShown) {\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\n      return this.geoConverter.screenToCartesian3(screenPos);\n    }\n  }\n\n  chooseEntity(entity: any) {\n    this.plonterService.resolvePlonter(entity);\n  }\n}\n","import { Component } from '@angular/core';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a polygon implementation.\n *  The ac-label element must be a child of ac-map element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon',\n  template: '',\n})\nexport class AcPolygonComponent extends EntityOnMapComponent {\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\n    super(polygonDrawer, mapLayers);\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\n\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  private _geometryPropsEvaluator: Function;\n  private _instancePropsEvaluator: Function;\n  private _primitivePropsEvaluator: Function;\n\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit(): void {\n    this._layerService.registerDescription(this);\n\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\n  }\n\n  draw(context: any, id: string, entity: AcEntity): any {\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\n      this._cesiumObjectsMap.set(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *\n * @deprecated use ac-ellipse-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\n *  __usage:__\n *  ```\n *  &lt;ac-static-ellipse-desc-desc\n *      geometryProps=\"{\n *          center: ellipse.geometry.center,\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\n *          height: ellipse.geometry.height,\n *          rotation: ellipse.geometry.rotation\n *      }\"\n *      instanceProps=\"{\n *          attributes: ellipse.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: ellipse.appearance //Optional\n *      }\"&gt;\n *  &lt;/ac-static-ellipse-desc-desc&gt;\n *  ```\n */\n@Component({\n  selector: 'ac-static-ellipse-desc',\n  template: ''\n})\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n *\n *\n *  This is a dynamic(position is updatable) implementation of an ellipse.\n *\n *  __Usage :__\n *  ```\n *    &lt;ac-dynamic-ellipse-desc props=\"{\n *      center: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    \">\n *    &lt;/ac-dynamic-ellipse-desc&gt;\n *  ```\n *  __param:__ {Cesium.Cartesian3} center\n *  __param:__ {number} semiMajorAxis\n *  __param:__ {number} semiMinorAxis\n *  __param:__ {number} rotation\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-ellipse-desc',\n  template: '',\n})\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-polylinc-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an polyline.\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\n *  __Usage:__\n *  ```\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\n *                                      positions: polyline.positions,\n *                                      material: polyline.material //optional\n *                                      }\"\n *    &gt;\n *    &lt;/ac-dynamic-polyline-desc&gt;\n * ```\n */\n@Component({\n  selector: 'ac-dynamic-polyline-desc',\n  template: ''\n})\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-ploygon-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\n *  __Usage:__\n *  ```\n *    &lt;ac-static-polygon-desc\n *          geometryProps=\"{\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\n *                     height: polygon.geometry.height,\n *                     granularity: polygon.geometry.granularity\n *                 }\"\n *          instanceProps=\"{\n *                     attributes: polygon.attributes\n *                 }\"\n *          primitiveProps=\"{\n *                     appearance: polygon.appearance\n *                 }\"\n *    &gt;&lt;/ac-static-polygon-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-polygon-desc',\n  template: '',\n})\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\n *  __usage:__\n *  ```\n *    &lt;ac-static-circle-desc\n *      geometryProps=\"{\n *          center: circle.geometry.center,\n *          radius: circle.geometry.radius,\n *      }\"\n *      instanceProps=\"{\n *          attributes: circle.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: circle.appearance //Optional\n *      }\"&gt;\n *    &lt;/ac-static-circle-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-circle',\n  template: ''\n})\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an circle.\n __Usage :__\n *  ```\n *    &lt;ac-dynamic-circle-desc props=\"{\n *      center: data.position,\n *      radius: 5\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    &lt;/ac-dynamic-circle-desc&gt;\n *  ```\n *\n *  __param__: {Cesium.Cartesian3} center\n *   __param__: {number} rotation\n *   __param__: {number} radius in meters\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-circle-desc',\n  template: ''\n})\nexport class AcDynamicCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n\n    return cesiumProps;\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\n\n// tslint:enable\n\n/**\n * @deprecated use ac-ployline-desc instead\n *\n *  This is a static implementation of an polyline.\n *  __usage:__\n *  ```\n *    &ltac-static-polyline-desc\n *            geometryProps=\"{\n *            \twidth: poly.geometry.width,\n *            \tpositions: poly.geometry.positions\n *            }\"\n *            instanceProps=\"{\n *              attributes: {\n *                  Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromRandom())\n *              }\n *            }\"\n *            primitiveProps=\"{\n *              appearance: new Cesium.PolylineColorAppearance()\n *    }\"&gt&lt/ac-static-polyline-desc&gt\n *  ```\n */\n@Component({\n  selector: 'ac-static-polyline-desc',\n  template: ''\n})\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\n\n/**\n *  This is a model implementation.\n *  The ac-model element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-model-desc props=\"{\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\n *   }\n *    }\">\n *    </ac-model-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-model-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\n})\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\n\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\n\n/**\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\n *  options according to `Cesium3DTileset` definition.\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\n *    </ac-3d-tile-layer>\n *  ```\n */\n@Component({\n  selector: 'ac-3d-tile-layer',\n  template: '',\n})\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * show (optional) - Sets 3Dtiles style.\n   */\n  @Input()\n  style: any;\n\n  public tilesetInstance: any = null;\n  private _3dtilesCollection: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url)) {\n      throw new Error('Options must have a url');\n    }\n\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\n\n    if (this.show) {\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n      if (this.style) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n\n      if (showValue) {\n        if (this.tilesetInstance) {\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\n        } else {\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n          if (this.style) {\n            this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n          }\n        }\n      } else if (this.tilesetInstance) {\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\n      }\n    }\n    if (changes['style'] && !changes['style'].isFirstChange()) {\n      const styleValue = changes['style'].currentValue;\n      if (this.tilesetInstance) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.tilesetInstance) {\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-box-desc props=\"{\n *     show : point.show, //optional\n *     position : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-box-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-box-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\n})\nexport class AcBoxDescComponent extends BasicDesc {\n\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-cylinder-desc props=\"{\n *     show : cylinder.show, //optional\n *     position : cylinder.position,\n *     material : cylinder.color  //optional\n *   }\">\n *   </ac-cylinder-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-cylinder-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\n})\nexport class AcCylinderDescComponent extends BasicDesc {\n\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-corridor-desc props=\"{\n *     show : point.show, //optional\n *     positions : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-corridor-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-corridor-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\n})\nexport class AcCorridorDescComponent extends BasicDesc {\n\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-ellipsoid-desc props=\"{\n *     show : ellipsoid.show, //optional\n *     radii : ellipsoid.radii,\n *     material : ellipsoid.color  //optional\n *   }\">\n *   </ac-ellipsoid-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipsoid-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\n})\nexport class AcEllipsoidDescComponent extends BasicDesc {\n\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-polyline-volume-desc props=\"{\n *     show : line.show, //optional\n *     positions : line.positions,\n *     material : line.color  //optional\n *   }\">\n *   </ac-polyline-volume-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polyline-volume-desc',\n  template: ''\n})\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\n\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-wall-desc props=\"{\n *     show : wall.show, //optional\n *     positions : wall.positions,\n *     material : wall.color  //optional\n *   }\">\n *   </ac-wall-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-wall-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\n})\nexport class AcWallDescComponent extends BasicDesc {\n\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-rectangle-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-rectangle-desc props=\"{\n *     show : rectangle.show, //optional\n *     coordinates : rectangle.positions,\n *     material : rectangle.color  //optional\n *   }\">\n *   </ac-rectangle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\n})\nexport class AcRectangleDescComponent extends BasicDesc {\n\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\n\n/**\n *  This is a billboard primitive implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-primitive-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\n})\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\n\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-primitive-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\n})\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\n\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline primitive implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-primitive-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-primitive-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\n})\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\n\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { HtmlCollection } from '../collections';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HtmlPrimitive {\n\n  private _scene: any;\n  private _show: boolean;\n  private _position: Cartesian3;\n  private _lastPosition: Cartesian2;\n  private _pixelOffset: Cartesian2;\n  private _element: HTMLElement;\n  private _collection: HtmlCollection;\n  private _mapContainer;\n\n  constructor(options: any, collection: HtmlCollection = null) {\n    if (typeof options !== 'object') {\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\n    }\n\n    this.scene = options.scene;\n    this._mapContainer = options.mapContainer;\n    this.show = options.show || true;\n    this.position = options.position;\n    this.pixelOffset = options.pixelOffset;\n    this.element = options.element;\n    this.collection = collection;\n  }\n\n  set scene(scene: any) {\n    this._scene = scene;\n  }\n\n  set show(show: boolean) {\n    this._show = show;\n\n    if (Cesium.defined(this.element)) {\n      if (show) {\n        this._element.style.display = 'block';\n      } else {\n        this._element.style.display = 'none';\n      }\n    }\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set position(position: Cartesian3) {\n    this._position = position;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  set pixelOffset(pixelOffset: Cartesian2) {\n    this._pixelOffset = pixelOffset;\n  }\n\n  get pixelOffset(): Cartesian2 {\n    return this._pixelOffset;\n  }\n\n  set element(element: HTMLElement) {\n    this._element = element;\n\n    if (Cesium.defined(element)) {\n      this._mapContainer.appendChild(element);\n      this._element.style.position = 'absolute';\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\n    }\n  }\n\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  set collection(collection: HtmlCollection) {\n    this._collection = collection;\n  }\n\n  get collection() {\n    return this._collection;\n  }\n\n  update() {\n    if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {\n      return;\n    }\n\n    let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);\n\n    if (!Cesium.defined(screenPosition)) {\n      screenPosition = new Cesium.Cartesian2((-1000), (-1000));\n    } else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {\n      screenPosition.y += this._pixelOffset.y;\n      screenPosition.x += this._pixelOffset.x;\n    }\n\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\n      return;\n    }\n\n    this._element.style.top = `${screenPosition.y}px`;\n    this._element.style.left = `${screenPosition.x}px`;\n    this._lastPosition = screenPosition;\n  }\n}\n","import { HtmlPrimitive } from '../primitives';\n\nexport class HtmlCollection {\n  private _collection: HtmlPrimitive[] = [];\n\n  get length() {\n    return this._collection.length;\n  }\n\n  get(index: number) {\n    return this._collection[index];\n  }\n\n  add(options: any): HtmlPrimitive {\n    const html = new HtmlPrimitive(options, this);\n    this._collection.push(html);\n\n    return html;\n  }\n\n  remove(html: HtmlPrimitive): boolean {\n    const index = this._collection.indexOf(html);\n\n    if (index === (-1)) {\n      return false;\n    }\n\n    this._collection.splice(index, 1);\n    return true;\n  }\n\n  update() {\n    for (let i = 0, len = this._collection.length; i < len; i++) {\n      this._collection[i].update();\n    }\n  }\n\n  removeAll() {\n    while (this._collection.length > 0) {\n      this._collection.pop();\n    }\n  }\n\n  contains(html: HtmlPrimitive): boolean {\n    return Cesium.defined(html) && html.collection === this;\n  }\n}\n","import { HtmlPrimitive } from './primitives';\nimport { HtmlCollection } from './collections';\n\nexport class CesiumExtender {\n  static extend() {\n    Cesium.HtmlPrimitive = HtmlPrimitive;\n    Cesium.HtmlCollection = HtmlCollection;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AcHtmlManager {\n  private _entities: Map<any, any>;\n\n  constructor() {\n    this._entities = new Map<any, any>();\n  }\n\n  has(id: string): boolean {\n    return this._entities.has(id);\n  }\n\n  get(id: string): { entity: any, primitive: any } {\n    return this._entities.get(id);\n  }\n\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\n    this._entities.set(id, info);\n  }\n\n  remove(id: string) {\n    this._entities.delete(id);\n  }\n\n  forEach(callback: any) {\n    this._entities.forEach(callback);\n  }\n}\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\nexport class AcHtmlContext {\n  constructor(\n    public id: any,\n    public context: any\n  ) {\n  }\n}\n\n@Directive({\n  selector: '[acHtml]',\n})\nexport class AcHtmlDirective implements OnInit {\n\n  private _views = new Map<any, { viewRef: any, context: any }>();\n\n  constructor(\n    private _templateRef: TemplateRef<AcHtmlContext>,\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetector: ChangeDetectorRef,\n    private _layerService: LayerService,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _handleView(id: any, primitive: any, entity: any) {\n    if (!this._views.has(id) && primitive.show) {\n      const context = new AcHtmlContext(id, {$implicit: entity});\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\n      this._views.set(id, {viewRef, context});\n      this._changeDetector.detectChanges();\n    } else if (this._views.has(id) && !primitive.show) {\n      this.remove(id, primitive);\n    } else if (this._views.has(id) && primitive.show) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  addOrUpdate(id: any, primitive: any) {\n    const context = this._layerService.context;\n    const entity = context[this._layerService.getEntityName()];\n\n    if (this._views.has(id)) {\n      this._views.get(id).context.context.$implicit = entity;\n    }\n\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\n    this._handleView(id, primitive, entity);\n  }\n\n  remove(id: any, primitive: any) {\n    if (!this._views.has(id)) {\n      return;\n    }\n\n    const {viewRef} = this._views.get(id);\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\n    this._views.delete(id);\n    this._acHtmlManager.remove(id);\n    primitive.element = null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-layer element.\n *  <br>\n *  [props] accepts position(Cartesian3) and show(boolean).\n *\n *  __Usage:__\n *  ```\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\n <ng-template let-html>\n <div>\n <h1>This is ac-html {{html.name}}</h1>\n <button (click)=\"changeText(html, 'Test')\">change text</button>\n </div>\n </ng-template>\n </ac-html-desc>\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n@Component({\n  selector: 'ac-html-desc',\n  providers: [AcHtmlManager],\n  template: `\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\n          </div>\n      </div>`\n})\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\n\n  @ViewChild(AcHtmlDirective) acHtmlCreator: AcHtmlDirective;\n  @ContentChild(TemplateRef) acHtmlTemplate: TemplateRef<any>;\n\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.acHtmlCreator) {\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\n    }\n\n    if (!this.acHtmlTemplate) {\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\n    }\n  }\n\n  draw(context: any, id: any): any {\n    const cesiumProps = this._propsEvaluator(context);\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._drawer.add(cesiumProps);\n      this._cesiumObjectsMap.set(id, primitive);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._drawer.update(primitive, cesiumProps);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    }\n  }\n\n  remove(id: string): void {\n    const primitive = this._cesiumObjectsMap.get(id);\n    this._drawer.remove(primitive);\n    this._cesiumObjectsMap.delete(id);\n    this.acHtmlCreator.remove(id, primitive);\n  }\n\n  removeAll(): void {\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\n      this.acHtmlCreator.remove(id, primitive);\n    }));\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n@Directive({\n  selector: '[acHtmlContainer]'\n})\nexport class AcHtmlContainerDirective implements OnInit {\n\n  private _id: any;\n\n  constructor(\n    private _element: ElementRef,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  @Input()\n  set acHtmlContainer(id: string) {\n    this._id = id;\n  }\n\n  ngOnInit() {\n    if (this._id === undefined) {\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\n    }\n\n    const entity = this._acHtmlManager.get(this._id);\n    entity.primitive.element = this._element.nativeElement;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { Subscription } from 'rxjs';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\n\n/**\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\n * It shouldn't be used directly.\n *\n * usage:\n * ```typescript\n * // We want to open the context menu on mouse right click.\n * // Register to mouse right click with the MapEventsManager\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\n *    .subscribe(event => {\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\n *       if (!position) {\n *         return;\n *       }\n *       // Open the context menu on the position that was clicked and pass some data to ContextMenuComponent.\n *       this.contextMenuService.open(\n *         ContextMenuComponent,\n *         position,\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\n *       )\n *    });\n *\n * ```\n */\n\n@Component({\n  selector: 'ac-context-menu-wrapper',\n  template: `\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\n      <div #contextMenuContainer></div>\n    </ac-html>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\n\n  private contextMenuChangeSubscription: Subscription;\n  private contextMenuOpenSubscription: Subscription;\n\n  @ViewChild('contextMenuContainer', {read: ViewContainerRef}) viewContainerRef: ViewContainerRef;\n\n  constructor(public contextMenuService: ContextMenuService,\n              private cd: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    this.contextMenuChangeSubscription =\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\n    this.contextMenuOpenSubscription =\n      this.contextMenuService.onOpen.subscribe(() => {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\n        this.cd.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextMenuChangeSubscription) {\n      this.contextMenuChangeSubscription.unsubscribe();\n    }\n\n    if (this.contextMenuOpenSubscription) {\n      this.contextMenuOpenSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AcNotification } from '../../models/ac-notification';\nimport { Subject, Subscription } from 'rxjs';\nimport { IDescription } from '../../models/description';\nimport * as _get from 'lodash.get';\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is component represents an array under `ac-layer`.\n *  The element must be a child of ac-layer element.\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\n *  + show `{boolean}` - show/hide array's entities.\n *\n *  __Usage :__\n *  ```\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\n *      <ac-point-desc props=\"{\n *        position: innerArrayItem.pos,\n *        pixelSize: 10,\n *        color: getTrackColor(track),\n *        outlineColor: Cesium.Color.BLUE,\n *        outlineWidth: 1\n *      }\">\n *      </ac-point-desc>\n *    </ac-array-desc>\n *  </ac-array-desc>\n *</ac-layer>\n *  ```\n */\n\n@Component({\n  selector: 'ac-array-desc',\n  template: `\n    <ac-layer #layer [acFor]=\"getAcForString()\"\n              [context]=\"layerService.context\"\n              [options]=\"layerService.options\"\n              [show]=\"layerService.show && show\"\n              [zIndex]=\"layerService.zIndex\">\n      <ng-content #content></ng-content>\n    </ac-layer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\n\n  @Input() acFor: string;\n\n  @Input() idGetter: (item: any, index: number) => string;\n\n  @Input() show = true;\n  @ViewChild('layer') private layer: AcLayerComponent;\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\n  private entitiesMap = new Map<string, string[]>();\n  private layerServiceSubscription: Subscription;\n  private id = 0;\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  entityName: string;\n  arrayPath: string;\n  arrayObservable$ = new Subject<AcNotification>();\n\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['acFor'].firstChange) {\n      const acForString = changes['acFor'].currentValue;\n      if (!this.acForRgx.test(acForString)) {\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\n      }\n      const acForArr = changes['acFor'].currentValue.split(' ');\n      this.arrayPath = acForArr[3];\n      this.entityName = acForArr[1];\n    }\n  }\n\n  ngOnInit(): void {\n    this.layer.getLayerService().cache = false;\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\n    this.layerService.registerDescription(this);\n    this.basicDescs._results.forEach((component: BasicDesc) => {\n      component.setLayerService(this.layer.getLayerService());\n    });\n    this.arrayDescs._results.splice(0, 1);\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\n      this.layerService.unregisterDescription(component);\n      this.layer.getLayerService().registerDescription(component);\n      component.layerService = this.layer.getLayerService();\n      component.setLayerService(this.layer.getLayerService());\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.layerServiceSubscription) {\n      this.layerServiceSubscription.unsubscribe();\n    }\n  }\n\n  setLayerService(layerService: LayerService) {\n    this.layerService = layerService;\n  }\n\n  draw(context: any, id: string, contextEntity: any) {\n    const get = _get;\n    const entitiesArray: any[] = get(context, this.arrayPath);\n    if (!entitiesArray) {\n      return;\n    }\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\n    const entitiesIdArray: any[] = [];\n    this.entitiesMap.set(id, entitiesIdArray);\n\n    entitiesArray.forEach((item, index) => {\n      this.layerService.context[this.entityName] = item;\n      const arrayItemId = this.generateCombinedId(id, item, index);\n      entitiesIdArray.push(arrayItemId);\n      this.layer.update(contextEntity, arrayItemId);\n    });\n\n    if (previousEntitiesIdArray) {\n      const entitiesToRemove = this.idGetter ?\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\n        previousEntitiesIdArray;\n      if (entitiesToRemove) {\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\n      }\n    }\n  }\n\n  remove(id: string) {\n    const entitiesIdArray = this.entitiesMap.get(id);\n    if (entitiesIdArray) {\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\n    }\n    this.entitiesMap.delete(id);\n  }\n\n  removeAll() {\n    this.layer.removeAll();\n    this.entitiesMap.clear();\n  }\n\n  getAcForString() {\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\n  }\n\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\n    let arrayItemId;\n    if (this.idGetter) {\n      arrayItemId = this.idGetter(arrayItem, index);\n    } else {\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\n    }\n    return entityId + arrayItemId;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\n *\n *  __Usage :__\n *  ```\n *    <ac-point-primitive-desc props=\"{\n *      position: track.position,\n *      color: Cesium.Color.RED\n *    }\">\n *    </ac-point-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point-primitive-desc',\n  template: '',\n})\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\n\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-primitive-polyline',\n  template: '',\n})\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\n\n// For angular parse usage\nexport default [\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\n\n/**\n *  This is a czml implementation.\n *  The ac-czml-desc element must be a child of ac-layer element.\n *\n *  See CZML Guide for the structure of props.czmlPacket:\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\n *\n *  Attention: the first czmlPacket in the stream needs to be a document\n *  with an id and a name attribute. See this example\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\n *\n *  To see a working example, use the demo app and\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\n *\n *\n *  __Usage:__\n *  ```\n *    <ac-czml-desc props=\"{\n *      czmlPacket: czmlPacket\n *    }\">\n *    </ac-czml-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-czml-desc',\n  template: '',\n})\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\nimport { Angular2ParseModule, PIPES_CONFIG } from 'angular2parse';\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\nimport { UtilsModule } from './utils/utils.module';\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\nimport { ModuleConfiguration } from './models/module-options';\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\nimport { CesiumExtender } from '../cesium-extender/extender';\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\n\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Angular2ParseModule,\n    UtilsModule,\n  ],\n  declarations: [\n    AcMapComponent,\n    AcLayerComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    PixelOffsetPipe,\n    RadiansToDegreesPipe,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcHtmlDirective,\n    AcHtmlContainerDirective,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n  exports: [\n    AcMapComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    AcLayerComponent,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n  providers: [JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService],\n})\nexport class AngularCesiumModule {\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders {\n    return {\n      ngModule: AngularCesiumModule,\n      providers: [\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\n      ],\n    };\n  }\n\n  constructor() {\n    CesiumExtender.extend();\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport class DisposableObservable<T> extends Observable<T> {\n  dispose: Function;\n}\n","/**\n * EventModifier options for registration on map-event-manager.\n */\nexport enum CesiumEventModifier {\n  ALT = Cesium.KeyboardEventModifier.ALT,\n  CTRL = Cesium.KeyboardEventModifier.CTRL,\n  SHIFT = Cesium.KeyboardEventModifier.SHIFT,\n}\n","import { filter, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AcEntity } from '../../models/ac-entity';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\n\n\nexport interface SelectionOptions {\n  event?: CesiumEvent;\n  modifier?: CesiumEventModifier;\n  entityType?: any;\n}\n\n/**\n * Manages entity selection service for any given mouse event and modifier\n * the service will manage the list of selected items.\n * check out the example\n * you must provide the service yourself\n *\n *  __Usage :__\n * ```\n * // provide the service in some component\n * @Component({\n * //...\n *  providers: [SelectionManagerService]\n * }\n *\n * // Usage example:\n * // init selection\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\n * // Get selected\n * const selected = selectionManagerService.selected();\n *\n * // Or as observer\n * const selected$ = selectionManagerService.selected$();\n *\n * ```\n *\n */\n@Injectable()\nexport class SelectionManagerService {\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\n  private mapEventsManagerService: MapEventsManagerService;\n\n  constructor(private mapsManager: MapsManagerService) {\n  }\n\n  selectedEntities$(): Observable<AcEntity[]> {\n    return this.selectedEntitiesItems$.asObservable();\n  }\n\n  selectedEntities(): AcEntity[] {\n    return this.selectedEntitiesItems$.getValue();\n  }\n\n  selectedEntity$() {\n    return this.selectedEntitySubject$;\n  }\n\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\n    const current = this.selectedEntities();\n    if (current.indexOf(entity) === -1) {\n      this.addToSelected(entity, addSelectedIndicator);\n    } else {\n      this.removeSelected(entity, addSelectedIndicator);\n    }\n  }\n\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = true;\n    }\n\n    const current = this.selectedEntities();\n    this.selectedEntitySubject$.next(entity);\n    this.selectedEntitiesItems$.next([...current, entity]);\n  }\n\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = false;\n    }\n\n    const current = this.selectedEntities();\n    const entityIndex = current.indexOf(entity);\n    if (entityIndex !== -1) {\n      current.splice(entityIndex, 1);\n      this.selectedEntitiesItems$.next(current);\n      this.selectedEntitySubject$.next(entity);\n    }\n  }\n\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\n    const mapComponent = this.mapsManager.getMap(mapId);\n    if (!mapComponent) {\n      return;\n    }\n\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\n\n    if (!selectionOptions) {\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\n    }\n\n    const eventSubscription = this.mapEventsManagerService.register({\n      event: selectionOptions.event,\n      pick: PickOptions.PICK_ONE,\n      modifier: selectionOptions.modifier,\n      entityType: selectionOptions.entityType,\n      priority: eventPriority,\n    });\n\n    eventSubscription.pipe(\n      map(result => result.entities),\n      filter(entities => entities && entities.length > 0))\n      .subscribe(entities => {\n        const entity = entities[0];\n        this.toggleSelection(entity, addSelectedIndicator);\n      });\n  }\n}\n","import { Cartesian2 } from '../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../angular-cesium/services/geo-utils/geo-utils.service';\nimport * as h337 from 'heatmap.js/build/heatmap.js';\nimport { Injectable } from '@angular/core';\n\n// Consider moving to a different package.\n\nif (!h337) {\n  throw new Error('must install heatmap.js. please do npm -i heatmap.js ');\n}\n\n\nexport interface Rectangle {\n  west: number;\n  south: number;\n  east: number;\n  north: number;\n}\n\n\n/**\n *  x: lon\n *  y: lat\n *  value: point value\n */\nexport interface HeatPointDataPoint {\n  x: number;\n  y: number;\n  value: number;\n}\n\n/**\n *   min:  the minimum allowed value for the data values\n *  max:  the maximum allowed value for the data values\n *  heatPointsData: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value)\n */\nexport interface HeatmapDataSet {\n  min?: number;\n  max?: number;\n  heatPointsData: HeatPointDataPoint[];\n}\n\n/**\n * a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n */\nexport interface HeatMapOptions {\n  [propName: string]: any;\n\n  gradient?: any;\n  radius?: number;\n  opacity?: number;\n  maxOpacity?: number;\n  minOpacity?: number;\n  blur?: any;\n}\n\n/**\n * Create heatmap material (Cesium.ImageMaterialProperty with heatmap as the image)\n * works with http://www.patrick-wied.at/static/heatmapjs. must do npm -i heatmap.js\n * usage:\n * ```\n *\n const mCreator = new CesiumHeatMapMaterialCreator();\n const containingRect = CesiumHeatMapMaterialCreator.calcCircleContainingRect(this.circleCenter, this.circleRadius);\n const userHeatmapOptions = {\n\t\t\tradius : 2000,\n\t\t\tminOpacity : 0,\n\t\t\tmaxOpacity : 0.9,\n\t\t} as any;\n\n this.circleHeatMapMaterial = mCreator.create(containingRect, {\n\t\t\theatPointsData : [\n\t\t\t\t{\n\t\t\t\t\tx : -100.0,\n\t\t\t\t\ty : 24.0,\n\t\t\t\t\tvalue : 95\n\t\t\t\t}\n\t\t\t],\n\t\t\tmin : 0,\n\t\t\tmax : 100,\n\t\t}, userHeatmapOptions);\n * ```\n *\n * inspired by https://github.com/danwild/CesiumHeatmap\n */\n@Injectable()\nexport class CesiumHeatMapMaterialCreator {\n\n\n  private static containerCanvasCounter = 0;\n\n  heatmapOptionsDefaults = {\n    minCanvasSize: 700,           // minimum size (in pixels) for the heatmap canvas\n    maxCanvasSize: 2000,          // maximum size (in pixels) for the heatmap canvas\n    radiusFactor: 60,             // data point size factor used if no radius is given\n    // (the greater of height and width divided by this number yields the used radius)\n    spacingFactor: 1,           // extra space around the borders (point radius multiplied by this number yields the spacing)\n    maxOpacity: 0.8,              // the maximum opacity used if not given in the heatmap options object\n    minOpacity: 0.1,              // the minimum opacity used if not given in the heatmap options object\n    blur: 0.85,                   // the blur used if not given in the heatmap options object\n    gradient: {                   // the gradient used if not given in the heatmap options object\n      '.3': 'blue',\n      '.65': 'yellow',\n      '.8': 'orange',\n      '.95': 'red'\n    },\n  };\n\n  WMP = new Cesium.WebMercatorProjection();\n  _spacing: number;\n  width: number;\n  height: number;\n  _mbounds: any;\n  bounds: any;\n  _factor: number;\n  _rectangle: Rectangle;\n  heatmap: any;\n  _xoffset: any;\n  _yoffset: any;\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param radius - Meters\n   */\n  static calcCircleContainingRect(center: Cartesian3, radius: number) {\n    return CesiumHeatMapMaterialCreator.calcEllipseContainingRect(center, radius, radius);\n  }\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param semiMinorAxis - meters\n   * @param semiMajorAxis - meters\n   */\n  static calcEllipseContainingRect(center: Cartesian3, semiMajorAxis: number, semiMinorAxis: number) {\n    const top = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMinorAxis,\n      0,\n      true\n    );\n    const right = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI / 2,\n      true\n    );\n    const bottom = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI,\n      true\n    );\n    const left = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI * 1.5,\n      true\n    );\n\n    const ellipsePoints = [top, right, bottom, left];\n    return Cesium.Rectangle.fromCartesianArray(ellipsePoints);\n  }\n\n  /**\n   *\n   * @param points Cartesian3\n   */\n  static calculateContainingRectFromPoints(points: Cartesian3[]) {\n    return Cesium.Rectangle.fromCartesianArray(points);\n  }\n\n\n  /**  Set an array of heatmap locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in heatmap coordinates and values like {x, y, value}\n   */\n  setData(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      this.heatmap.setData({\n        min: min,\n        max: max,\n        data: data\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**  Set an array of WGS84 locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value }\n   */\n  private setWGS84Data(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      const convdata = [];\n\n      for (let i = 0; i < data.length; i++) {\n        const gp = data[i];\n\n        const hp = this.wgs84PointToHeatmapPoint(gp);\n        if (gp.value || gp.value === 0) {\n          hp.value = gp.value;\n        }\n\n        convdata.push(hp);\n      }\n\n      return this.setData(min, max, convdata);\n    }\n\n    return false;\n  }\n\n  /**  Convert a mercator location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x: lon, y:lat}\n   */\n  private mercatorPointToHeatmapPoint(p: Cartesian2) {\n    const pn: any = {};\n\n    pn.x = Math.round((p.x - this._xoffset) / this._factor + this._spacing);\n    pn.y = Math.round((p.y - this._yoffset) / this._factor + this._spacing);\n    pn.y = this.height - pn.y;\n\n    return pn;\n  }\n\n  /**  Convert a WGS84 location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x:lon, y:lat}\n   */\n  private wgs84PointToHeatmapPoint = function (p: Cartesian2) {\n    return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(p));\n  };\n\n\n  private createContainer(height: number, width: number) {\n    const id = 'heatmap' + CesiumHeatMapMaterialCreator.containerCanvasCounter++;\n    const container = document.createElement('div');\n    container.setAttribute('id', id);\n    container.setAttribute('style', 'width: ' + width + 'px; height: ' + height + 'px; margin: 0px; display: none;');\n    document.body.appendChild(container);\n    return {container, id};\n  }\n\n  /**  Convert a WGS84 location into a mercator location\n   *\n   *  p: the WGS84 location like {x: lon, y: lat}\n   */\n  private wgs84ToMercator(p: Cartesian2) {\n    const mp = this.WMP.project(Cesium.Cartographic.fromDegrees(p.x, p.y));\n    return {\n      x: mp.x,\n      y: mp.y\n    };\n  }\n\n  private rad2deg = function (r: number) {\n    const d = r / (Math.PI / 180.0);\n    return d;\n  };\n\n  /**  Convert a WGS84 bounding box into a mercator bounding box*\n   *  bb: the WGS84 bounding box like {north, east, south, west}\n   */\n  private wgs84ToMercatorBB(bb: any) {\n    // TODO validate rad or deg\n    const sw = this.WMP.project(Cesium.Cartographic.fromRadians(bb.west, bb.south));\n    const ne = this.WMP.project(Cesium.Cartographic.fromRadians(bb.east, bb.north));\n    return {\n      north: ne.y,\n      east: ne.x,\n      south: sw.y,\n      west: sw.x\n    };\n  }\n\n  /**  Convert a mercator bounding box into a WGS84 bounding box\n   *\n   *  bb: the mercator bounding box like {north, east, south, west}\n   */\n  private mercatorToWgs84BB(bb: any) {\n    const sw = this.WMP.unproject(new Cesium.Cartesian3(bb.west, bb.south));\n    const ne = this.WMP.unproject(new Cesium.Cartesian3(bb.east, bb.north));\n    return {\n      north: this.rad2deg(ne.latitude),\n      east: this.rad2deg(ne.longitude),\n      south: this.rad2deg(sw.latitude),\n      west: this.rad2deg(sw.longitude)\n    };\n  }\n\n  private setWidthAndHeight(mbb: any) {\n    this.width = ((mbb.east > 0 && mbb.west < 0) ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west));\n    this.height = ((mbb.north > 0 && mbb.south < 0) ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south));\n    this._factor = 1;\n\n    if (this.width > this.height && this.width > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.height / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.height > this.width && this.height > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.width / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.width < this.height && this.width < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.height / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    } else if (this.height < this.width && this.height < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.width / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    }\n\n    this.width = this.width / this._factor;\n    this.height = this.height / this._factor;\n  }\n\n  /**\n   * containingBoundingRect: Cesium.Rectangle like {north, east, south, west}\n   * min:  the minimum allowed value for the data values\n   * max:  the maximum allowed value for the data values\n   * datapoint: {x,y,value}\n   * heatmapOptions: a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n   *\n   */\n  public create(containingBoundingRect: Rectangle, heatmapDataSet: HeatmapDataSet, heatmapOptions: HeatMapOptions) {\n    const userBB = containingBoundingRect;\n    const {heatPointsData, min = 0, max = 100} = heatmapDataSet;\n    const finalHeatmapOptions = Object.assign({}, this.heatmapOptionsDefaults, heatmapOptions);\n\n    this._mbounds = this.wgs84ToMercatorBB(userBB);\n    this.setWidthAndHeight(this._mbounds);\n\n    finalHeatmapOptions.radius = Math.round((heatmapOptions.radius) ?\n      heatmapOptions.radius : ((this.width > this.height) ?\n        this.width / this.heatmapOptionsDefaults.radiusFactor :\n        this.height / this.heatmapOptionsDefaults.radiusFactor));\n    this._spacing = finalHeatmapOptions.radius * this.heatmapOptionsDefaults.spacingFactor;\n    this._xoffset = this._mbounds.west;\n    this._yoffset = this._mbounds.south;\n\n    this.width = Math.round(this.width + this._spacing * 2);\n    this.height = Math.round(this.height + this._spacing * 2);\n\n    this._mbounds.west -= this._spacing * this._factor;\n    this._mbounds.east += this._spacing * this._factor;\n    this._mbounds.south -= this._spacing * this._factor;\n    this._mbounds.north += this._spacing * this._factor;\n\n    this.bounds = this.mercatorToWgs84BB(this._mbounds);\n    this._rectangle = Cesium.Rectangle.fromDegrees(this.bounds.west, this.bounds.south, this.bounds.east, this.bounds.north);\n\n    const {container, id} = this.createContainer(this.height, this.width);\n    Object.assign(finalHeatmapOptions, {container});\n\n    this.heatmap = h337.create(finalHeatmapOptions);\n\n\n    this.setWGS84Data(0, 100, heatPointsData);\n    const heatMapCanvas = this.heatmap._renderer.canvas;\n    const heatMapMaterial = new Cesium.ImageMaterialProperty({\n      image: heatMapCanvas,\n      transparent: true,\n    });\n    this.setClear(heatMapMaterial, id);\n\n    return heatMapMaterial;\n  }\n\n  private setClear(heatMapMaterial: any, id: string) {\n    heatMapMaterial.clear = () => {\n      const elem = document.getElementById(id);\n      return elem.parentNode.removeChild(elem);\n    };\n  }\n}\n\n","export enum EditModes {\n  CREATE,\n  EDIT,\n  CREATE_OR_EDIT\n}\n","export enum EditActions {\n  INIT,\n  MOUSE_MOVE,\n  ADD_POINT,\n  ADD_LAST_POINT,\n  CHANGE_TO_EDIT,\n  REMOVE_POINT,\n  DRAG_POINT,\n  DRAG_POINT_FINISH,\n  DRAG_SHAPE,\n  DRAG_SHAPE_FINISH,\n  DONE,\n  DISABLE,\n  ENABLE,\n  DISPOSE,\n  SET_EDIT_LABELS_RENDER_CALLBACK,\n  UPDATE_EDIT_LABELS,\n  SET_MANUALLY,\n  TRANSFORM,\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './polyline-edit-options';\n\nexport class EditPoint extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private position: Cartesian3;\n  private _virtualEditPoint: boolean;\n  private pointProps: PointProps;\n  private _show = true;\n\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\n    super();\n    this.editedEntityId = entityId;\n    this.position = position;\n    this.id = this.generateId();\n    this.pointProps = pointProps;\n    this._virtualEditPoint = virtualPoint;\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  set show(value) {\n    this._show = value;\n  }\n\n  get props(): PointProps {\n    return this.pointProps;\n  }\n\n  set props(value: PointProps) {\n    this.pointProps = value;\n  }\n\n  isVirtualEditPoint(): boolean {\n    return this._virtualEditPoint;\n  }\n\n  setVirtualEditPoint(value: boolean) {\n    this._virtualEditPoint = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.position;\n  }\n\n  setPosition(position: Cartesian3) {\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.position.z = position.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-point-' + EditPoint.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditPolyline extends AcEntity {\n  static counter = 0;\n  private editedEntityId: string;\n  private id: string;\n  private positions: Cartesian3[];\n  private _polylineProps: PolylineProps;\n\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\n    super();\n    this.editedEntityId = entityId;\n    this.id = this.generateId();\n    this.positions = [startPosition, endPosition];\n    this._polylineProps = polylineProps;\n  }\n\n  get props(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPositions(): any[] {\n    return this.positions;\n  }\n\n  validatePositions(): boolean {\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\n  }\n\n  getStartPosition() {\n    return this.positions[0];\n  }\n\n  getEndPosition() {\n    return this.positions[1];\n  }\n\n  setStartPosition(position: Cartesian3) {\n    this.positions[0] = position;\n  }\n\n  setEndPosition(position: Cartesian3) {\n    this.positions[1] = position;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-polyline-' + EditPolyline.counter++;\n  }\n}\n","import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\n\nexport interface LabelStyle {\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n}\n\nexport interface LabelProps {\n  text: string;\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n}\n\nexport const defaultLabelProps: LabelProps = {\n  backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.7),\n  backgroundPadding: new Cesium.Cartesian2(7, 5),\n  distanceDisplayCondition: undefined,\n  eyeOffset: new Cesium.Cartesian3(0, 0, -999),\n  fillColor: Cesium.Color.WHITE,\n  font: '30px sans-serif',\n  heightReference: Cesium.HeightReference.NONE,\n  horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n  outlineColor: Cesium.Color.BLACK,\n  outlineWidth: 1.0,\n  pixelOffset: Cesium.Cartesian2.ZERO,\n  pixelOffsetScaleByDistance: undefined,\n  scale: 1.0,\n  scaleByDistance: undefined,\n  show: true,\n  showBackground: false,\n  style: Cesium.LabelStyle.FILL,\n  text: '',\n  translucencyByDistance: undefined,\n  verticalOrigin: Cesium.VerticalOrigin.BASELINE,\n};\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolygon extends AcEntity {\n  private positions: EditPoint[] = [];\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _polygonProps: PolygonProps;\n  private _defaultPointProps: PointProps;\n  private _defaultPolylineProps: PolylineProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private polygonsLayer: AcLayerComponent,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              polygonOptions: PolygonEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this.polygonProps = polygonOptions.polygonProps;\n    this.defaultPointProps = polygonOptions.pointProps;\n    this.defaultPolylineProps = polygonOptions.polylineProps;\n    if (positions && positions.length >= 3) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get defaultPolylineProps(): PolylineProps {\n    return this._defaultPolylineProps;\n  }\n\n  set defaultPolylineProps(value: PolylineProps) {\n    this._defaultPolylineProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  get polygonProps(): PolygonProps {\n    return this._polygonProps;\n  }\n\n  set polygonProps(value: PolygonProps) {\n    this._polygonProps = value;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n    this.doneCreation = true;\n  }\n\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polygon is created');\n    }\n\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      const currentPoint = pos;\n      const nextIndex = (index + 1) % (currentPoints.length);\n      const nextPoint = currentPoints[nextIndex];\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n      this.updatePointsLayer(false, midPoint);\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const currentCart = Cesium.Cartographic.fromCartesian(firstP.getPosition());\n    const nextCart = Cesium.Cartographic.fromCartesian(secondP.getPosition());\n    const midPointCartesian3 = this.coordinateConverter.midPointToCartesian3(currentCart, nextCart);\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const prevPointCart = Cesium.Cartographic.fromCartesian(prevPoint.getPosition());\n    const nextPointCart = Cesium.Cartographic.fromCartesian(nextPoint.getPosition());\n    virtualEditPoint.setPosition(this.coordinateConverter.midPointToCartesian3(prevPointCart, nextPointCart));\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\n    this.updatePolygonsLayer();\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      const nextIndex = (index + 1) % (realPoints.length);\n      const nextPoint = realPoints[nextIndex];\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\n      this.polylines.push(polyline);\n      this.polylinesLayer.update(polyline, polyline.getId());\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n    this.updatePolygonsLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    this.updatePolygonsLayer();\n    if (this.doneCreation) {\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n      this.updatePointsLayer(false, nextVirtualPoint);\n      this.updatePointsLayer(false, prevVirtualPoint);\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.updatePointsLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n    this.updatePolygonsLayer();\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositionsHierarchy(): Cartesian3[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition());\n  }\n\n  getPositionsHierarchyCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositionsHierarchy.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePolygonsLayer() {\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  dispose() {\n    this.polygonsLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class PolygonsManagerService {\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\n\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolygon = new EditablePolygon(\n      id,\n      editPolygonsLayer,\n      editPointsLayer,\n      editPolylinesLayer,\n      coordinateConverter,\n      polygonOptions,\n      positions);\n    this.polygons.set(id, editablePolygon\n    );\n  }\n\n  dispose(id: string) {\n    this.polygons.get(id).dispose();\n    this.polygons.delete(id);\n  }\n\n  get(id: string): EditablePolygon {\n    return this.polygons.get(id);\n  }\n\n  clear() {\n    this.polygons.forEach(polygon => polygon.dispose());\n    this.polygons.clear();\n  }\n}\n","export function generateKey(length = 12): string {\n  let id = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return id;\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonsManagerService } from './polygons-manager.service';\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polygonProps: {\n    material: new Cesium.Color(0.1, 0.5, 0.2, 0.4),\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 1,\n  },\n};\n\n/**\n * Service for creating editable polygons\n *\n * You must provide `PolygonsEditorService` yourself.\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polygon\n *  const editing$ = polygonsEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polygon from existing polygon positions\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolygonsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolygonEditUpdate>();\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polygonsManager: PolygonsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polygonsManager: PolygonsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polygonsManager = polygonsManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<PolygonEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          priority,\n          polygonOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n\n    addLastPointRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        priority,\n        polygonOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           priority,\n                           polygonOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const updateValue = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(updateValue);\n    clientEditSubject.next({\n      ...updateValue,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    if (positions.length < 3) {\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\n    }\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolygon(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polygonOptions\n    );\n  }\n\n  private editPolygon(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<PolygonEditUpdate>,\n                      options: PolygonEditOptions,\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditablePolygon,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointRemoveRegistration.subscribe(({entities}) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 4) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolygonEditOptions) {\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\n      console.warn('Warn: PolygonEditor invalid option.' +\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\n      options.maximumNumberOfPoints = 3;\n    }\n\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\n    const polygonOptions = Object.assign(defaultClone, options);\n    polygonOptions.pointProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.pointProps, options.pointProps);\n    polygonOptions.polygonProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polygonProps, options.polygonProps);\n    polygonOptions.polylineProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polylineProps, options.polylineProps);\n    return polygonOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolygonEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n    observableToExtend.setManually = (points: {\n      position: Cartesian3, pointProps: PointProps\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\n      const polygon = this.polygonsManager.get(id);\n      polygon.setPointsManually(points, polygonProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\n\n    return observableToExtend as PolygonEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPoints();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditablePolygon } from '../../models/editable-polygon';\n\n@Component({\n  selector: 'polygons-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-primitive-desc\n        props=\"{\n        positions: polyline.getPositions(),\n        width: polyline.props.width,\n        material: polyline.props.material()\n    }\"\n      >\n      </ac-polyline-primitive-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\n      <ac-polygon-desc\n        props=\"{\n        hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\n        material: polygon.polygonProps.material\n    }\"\n      >\n      </ac-polygon-desc>\n      <!-- <ac-static-polygon-desc -->\n      <!-- geometryProps=\"{ -->\n      <!-- polygonHierarchy: polygon.getHierarchy(), -->\n      <!-- height: 1 -->\n      <!-- }\" -->\n      <!-- instanceProps=\"{ -->\n      <!-- attributes: attributes -->\n      <!-- }\" -->\n      <!-- primitiveProps=\"{ -->\n      <!-- appearance: appearance -->\n      <!-- }\"> -->\n      <!-- </ac-static-polygon-desc -->\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolygonsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolygonsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public editPolygons$ = new Subject<AcNotification>();\n\n  public appearance = new Cesium.PerInstanceColorAppearance({flat: true});\n  public attributes = {color: Cesium.ColorGeometryInstanceAttribute.fromColor(new Cesium.Color(0.2, 0.2, 0.5, 0.5))};\n  public polygonColor = new Cesium.Color(0.1, 0.5, 0.2, 0.4);\n  public lineColor = new Cesium.Color(0, 0, 0, 0.6);\n\n  @ViewChild('editPolygonsLayer') private editPolygonsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n\n  constructor(\n    private polygonsEditor: PolygonsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polygonsManager: PolygonsManagerService,\n  ) {\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polygonsManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\n    update.positions = polygon.getRealPositions();\n    update.points = polygon.getRealPoints();\n\n    if (labels) {\n      polygon.labels = labels;\n      this.editPolygonsLayer.update(polygon, polygon.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  removeEditLabels(polygon: EditablePolygon) {\n    polygon.labels = [];\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  handleCreateUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polygon = this.polygonsManager.get(update.id);\n        polygon.dispose();\n        this.removeEditLabels(polygon);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polygon, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit && update.updatedPoint.isVirtualEditPoint()) {\n          polygon.changeVirtualPointToRealPoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.removePoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = false;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.endMovePolygon();\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = true;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polygonsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditArc extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private _center: Cartesian3;\n  private _radius: number;\n  private _delta: number;\n  private _angle: number;\n\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\n    super();\n    this.id = this.generateId();\n    this.editedEntityId = entityId;\n    this._center = center;\n    this._radius = radius;\n    this._delta = delta;\n    this._angle = angle;\n  }\n\n  get props() {\n    return this._arcProps;\n  }\n\n  set props(props: PolylineProps) {\n    this._arcProps = props;\n  }\n\n  get angle(): number {\n    return this._angle;\n  }\n\n  set angle(value: number) {\n    this._angle = value;\n  }\n\n  get delta(): number {\n    return this._delta;\n  }\n\n  set delta(value: number) {\n    this._delta = value;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    this._radius = value;\n  }\n\n  get center(): Cartesian3 {\n    return this._center;\n  }\n\n  set center(value: Cartesian3) {\n    this._center = value;\n  }\n\n  updateCenter(center: Cartesian3) {\n    this._center.x = center.x;\n    this._center.y = center.y;\n    this._center.z = center.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-arc-' + EditArc.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EditArc } from './edit-arc';\nimport { CircleEditOptions } from './circle-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EditableCircle extends AcEntity {\n  private _center: EditPoint;\n  private _radiusPoint: EditPoint;\n  private _outlineArc: EditArc;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private lastDraggedToPosition: any;\n  private _circleProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private circlesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private arcsLayer: AcLayerComponent,\n    private options: CircleEditOptions,\n  ) {\n    super();\n    this._circleProps = options.circleProps;\n    this._pointProps = options.pointProps;\n    this._polylineProps = options.polylineProps;\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center || !this._radiusPoint) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index !== labels.length - 1) {\n          label.position = this._center.getPosition();\n        } else {\n          label.position = this._radiusPoint.getPosition();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get circleProps(): EllipseProps {\n    return this._circleProps;\n  }\n\n  set circleProps(value: EllipseProps) {\n    this._circleProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get radiusPoint(): EditPoint {\n    return this._radiusPoint;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._radiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    radiusPoint: Cartesian3,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    circleProp = this.circleProps,\n  ) {\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    if (!this._radiusPoint) {\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\n    } else {\n      this._radiusPoint.setPosition(radiusPoint);\n    }\n\n    if (!this._outlineArc) {\n      this.createOutlineArc();\n    } else {\n      this._outlineArc.radius = this.getRadius();\n    }\n\n    this.circleProps = circleProp;\n    this.doneCreation = true;\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      if (!this._outlineArc) {\n        this.createOutlineArc();\n      }\n    }\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(position);\n    this.doneCreation = true;\n\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(toPosition);\n    this._outlineArc.radius = this.getRadius();\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const radius = this.getRadius();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\n    this._outlineArc.radius = this.getRadius();\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  getRadius(): number {\n    if (!this._center || !this._radiusPoint) {\n      return 0;\n    }\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\n  }\n\n  getRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRadius.bind(this), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getCenter.bind(this), false);\n  }\n\n  getRadiusPoint(): Cartesian3 {\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._radiusPoint) {\n      this.pointsLayer.remove(this._radiusPoint.getId());\n    }\n\n    if (this._outlineArc) {\n      this.arcsLayer.remove(this._outlineArc.getId());\n    }\n\n    this.circlesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateCirclesLayer() {\n    this.circlesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._radiusPoint) {\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\n    }\n  }\n\n  private updateArcsLayer() {\n    if (!this._outlineArc) {\n      return;\n    }\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\n  }\n\n  private createOutlineArc() {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\n\n@Injectable()\nexport class CirclesManagerService {\n  private circles = new Map<string, EditableCircle>();\n\n  createEditableCircle(id: string,\n                       editCirclesLayer: AcLayerComponent,\n                       editPointsLayer: AcLayerComponent,\n                       editArcsLayer: AcLayerComponent,\n                       circleOptions: CircleEditOptions): EditableCircle {\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\n    this.circles.set(id, editableCircle);\n    return editableCircle;\n  }\n\n  dispose(id: string) {\n    this.circles.get(id).dispose();\n    this.circles.delete(id);\n  }\n\n  get(id: string): EditableCircle {\n    return this.circles.get(id);\n  }\n\n  clear() {\n    this.circles.forEach(circle => circle.dispose());\n    this.circles.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { publish, tap } from 'rxjs/operators';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditPoint } from '../../../models/edit-point';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { generateKey } from '../../utils';\nimport { CirclesManagerService } from './circles-manager.service';\n\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  circleProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    outline: false,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.BLACK,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.BLACK,\n  },\n};\n\n/**\n * Service for creating editable circles\n *\n * You must provide `CircleEditorService` yourself.\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating circle\n *  const editing$ = circlesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit circle from existing center point and radius\n *  const editing$ = this.circlesEditorService.edit(center, radius);\n *\n * ```\n */\n@Injectable()\nexport class CirclesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<CircleEditUpdate>();\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private circlesManager: CirclesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    circlesManager: CirclesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.circlesManager = circlesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<CircleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      circleOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        center = position;\n      } else {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n\n        const changeMode = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n\n    const update = {\n      id,\n      center,\n      radiusPoint,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      circleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      ...this.getCircleProperties(id),\n    });\n\n    return this.editCircle(id, priority, editSubject, circleOptions);\n  }\n\n  private editCircle(\n    id: string,\n    priority: number,\n    editSubject: Subject<CircleEditUpdate>,\n    options: CircleEditOptions,\n    editObservable?: CircleEditorObservable,\n  ): CircleEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK_DRAG,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK_DRAG,\n        entityType: EditableCircle,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update = {\n          id,\n          center: this.getCenterPosition(id),\n          radiusPoint: this.getRadiusPosition(id),\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            center: this.getCenterPosition(id),\n            radiusPoint: this.getRadiusPosition(id),\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            ...this.getCircleProperties(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): CircleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      radius: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      circleProp?: EllipseProps,\n    ) => {\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n      const circle = this.circlesManager.get(id);\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getRadius = (): number => this.getRadius(id);\n\n    return observableToExtend as CircleEditorObservable;\n  }\n\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\n    const circleOptions = Object.assign(defaultClone, options);\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\n    return circleOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.circlesManager.get(id).center;\n  }\n\n  private getRadiusPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getRadiusPoint();\n  }\n\n  private getRadius(id: string): number {\n    return this.circlesManager.get(id).getRadius();\n  }\n\n  private getCircleProperties(id: string) {\n    const circle = this.circlesManager.get(id);\n    return {\n      center: circle.getCenter(),\n      radiusPoint: circle.getRadiusPoint(),\n      radius: circle.getRadius(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableCircle } from '../../models/editable-circle';\n\n@Component({\n  selector: 'circles-editor',\n  template: /*html*/ `\n    <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\n      <ac-arc-desc\n        props=\"{\n        angle: arc.angle,\n        delta: arc.delta,\n        center: arc.center,\n        radius: arc.radius,\n        quality: 30,\n        color: arc.props.material()\n    }\"\n      >\n      </ac-arc-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\n      <ac-ellipse-desc\n        props=\"{\n        position: circle.getCenterCallbackProperty(),\n        semiMajorAxis: circle.getRadiusCallbackProperty(),\n        semiMinorAxis: circle.getRadiusCallbackProperty(),\n        material: circle.circleProps.material,\n        outline: circle.circleProps.outline,\n        height: 0\n    }\"\n      >\n      </ac-ellipse-desc>\n\n      <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, CirclesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CirclesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editCircles$ = new Subject<AcNotification>();\n  public editArcs$ = new Subject<AcNotification>();\n\n  @ViewChild('editCirclesLayer') private editCirclesLayer: AcLayerComponent;\n  @ViewChild('editArcsLayer') private editArcsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private circlesEditor: CirclesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private circlesManager: CirclesManagerService,\n  ) {\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.circlesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\n    update.center = circle.getCenter();\n    update.radiusPoint = circle.getRadiusPoint();\n    update.radius = circle.getRadius();\n\n    if (labels) {\n      circle.labels = labels;\n      this.editCirclesLayer.update(circle, circle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  removeEditLabels(circle: EditableCircle) {\n    circle.labels = [];\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  handleCreateUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.movePoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.center) {\n          circle.addPoint(update.center);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.addLastPoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const circle = this.circlesManager.get(update.id);\n        this.removeEditLabels(circle);\n        this.circlesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const circle = this.circlesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(circle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const circle = this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        circle.setManually(update.center, update.radiusPoint);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.movePoint(update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.endMovePolygon();\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = false;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = true;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.circlesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\nexport class EditableEllipse extends AcEntity {\n  private _center: EditPoint;\n  private _majorRadiusPoint: EditPoint;\n  private _majorRadius: number;\n  private _minorRadius: number;\n  private _rotation = 0;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _minorRadiusPoints: EditPoint[] = [];\n  private lastDraggedToPosition: any;\n  private _ellipseProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private ellipsesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    private options: EllipseEditOptions,\n  ) {\n    super();\n    this._ellipseProps = options.ellipseProps;\n    this._pointProps = options.pointProps;\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index === 0) {\n          label.position = this._center.getPosition();\n        } else if (index === 1) {\n          label.position = this._majorRadiusPoint\n            ? Cesium.Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cesium.Cartesian3())\n            : new Cesium.Cartesian3();\n        } else if (index === 2) {\n          label.position =\n            this._minorRadiusPoints.length > 0 && this._minorRadius\n              ? Cesium.Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cesium.Cartesian3())\n              : new Cesium.Cartesian3();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get ellipseProps(): EllipseProps {\n    return this._ellipseProps;\n  }\n\n  set ellipseProps(value: EllipseProps) {\n    this._ellipseProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get majorRadiusPoint(): EditPoint {\n    return this._majorRadiusPoint;\n  }\n\n  getMajorRadiusPointPosition() {\n    if (!this._majorRadiusPoint) {\n      return undefined;\n    }\n\n    return this._majorRadiusPoint.getPosition();\n  }\n\n  getMinorRadiusPointPosition(): Cartesian3 {\n    if (this._minorRadiusPoints.length < 1) {\n      return undefined;\n    }\n\n    return this._minorRadiusPoints[0].getPosition();\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._majorRadiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    ellipseProp = this.ellipseProps,\n  ) {\n    if (majorRadius < minorRadius) {\n      throw new Error('Major radius muse be equal or greater than minor radius');\n    }\n    this._rotation = rotation;\n    this._majorRadius = majorRadius;\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\n\n    if (!this._majorRadiusPoint) {\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\n    } else {\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\n    }\n\n    if (minorRadius) {\n      this._minorRadius = minorRadius;\n    }\n\n    this.ellipseProps = ellipseProp;\n    this.doneCreation = true;\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      this._majorRadius = 0;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  transformToEllipse() {\n    if (this._minorRadius) {\n      return;\n    }\n\n    this._minorRadius = this.getMajorRadius();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\n    this._majorRadiusPoint.setPosition(position);\n    this._majorRadius = newRadius;\n    this.doneCreation = true;\n\n    if (!this.options.circleToEllipseTransformation) {\n      this._minorRadius = this._majorRadius;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\n    if (this.majorRadiusPoint === editPoint) {\n      if (newRadius < this._minorRadius) {\n        this._majorRadius = this._minorRadius;\n        this._majorRadiusPoint.setPosition(\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\n        );\n      } else {\n        this.majorRadiusPoint.setPosition(toPosition);\n        this._majorRadius = newRadius;\n      }\n    } else {\n      if (newRadius > this._majorRadius) {\n        this._minorRadius = this._majorRadius;\n      } else {\n        this._minorRadius = newRadius;\n      }\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const majorRadius = this.getMajorRadius();\n    const rotation = this.getRotation();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\n    this.updatePointsLayer();\n    this.updateMinorRadiusEditPoints();\n    this.updateEllipsesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMoveEllipse() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  private updateMinorRadiusEditPoints() {\n    if (this._minorRadius === undefined) {\n      return;\n    }\n    if (this._minorRadiusPoints.length === 0) {\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n    }\n\n    this._minorRadiusPoints[0].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\n    );\n\n    this._minorRadiusPoints[1].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\n    );\n  }\n\n  getMajorRadius(): number {\n    return this._majorRadius || 0;\n  }\n\n  getMinorRadius() {\n    if (this._minorRadius === undefined) {\n      return this.getMajorRadius();\n    } else {\n      return this._minorRadius;\n    }\n  }\n\n  getRotation(): number {\n    return this._rotation || 0;\n  }\n\n  updateRotation(): number {\n    if (!this._majorRadiusPoint) {\n      return 0;\n    }\n\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\n    this._rotation = Cesium.Math.toRadians(azimuthInDegrees);\n    return this._rotation;\n  }\n\n  getRotationCallbackProperty() {\n    return new Cesium.CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\n  }\n\n  getMinorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMinorRadius(), false);\n  }\n\n  getMajorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMajorRadius(), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getCenter(), false);\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\n    }\n\n    if (this._minorRadiusPoints) {\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\n    }\n\n    this.ellipsesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateEllipsesLayer() {\n    this.ellipsesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\n    }\n    if (this._minorRadiusPoints.length > 0) {\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class EllipsesManagerService {\n  private ellipses = new Map<string, EditableEllipse>();\n\n  createEditableEllipse(id: string,\n                        editEllipsesLayer: AcLayerComponent,\n                        editPointsLayer: AcLayerComponent,\n                        coordinateConverter: CoordinateConverter,\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\n    this.ellipses.set(id, editableEllipse);\n    return editableEllipse;\n  }\n\n  dispose(id: string) {\n    this.ellipses.get(id).dispose();\n    this.ellipses.delete(id);\n  }\n\n  get(id: string): EditableEllipse {\n    return this.ellipses.get(id);\n  }\n\n  clear() {\n    this.ellipses.forEach(ellipse => ellipse.dispose());\n    this.ellipses.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\nimport { EllipsesManagerService } from './ellipses-manager.service';\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { generateKey } from '../../utils';\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\n\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\n  allowDrag: true,\n  ellipseProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    outline: true,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.BLACK,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.BLACK,\n  },\n  circleToEllipseTransformation: false,\n};\n\n/**\n * Service for creating editable ellipses\n *\n * You must provide `EllipsesEditorService` yourself.\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over edited shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating ellipse\n *  const editing$ = ellipsesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit ellipse from existing center point, two radiuses and rotation\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\n *\n * ```\n */\n@Injectable()\nexport class EllipsesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<EllipseEditUpdate>();\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private ellipsesManager: EllipsesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    ellipsesManager: EllipsesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.ellipsesManager = ellipsesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<EllipseEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: ellipseOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update: EllipseEditUpdate = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n        center = position;\n      } else {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n\n        const changeMode: EllipseEditUpdate = {\n          id,\n          center,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    options = DEFAULT_ELLIPSE_OPTIONS,\n    priority = 100,\n  ): EllipseEditorObservable {\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const update: EllipseEditUpdate = {\n      id,\n      center,\n      majorRadius,\n      rotation,\n      minorRadius,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n    });\n\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\n  }\n\n  private editEllipse(\n    id: string,\n    priority: number,\n    editSubject: Subject<EllipseEditUpdate>,\n    options: EllipseEditOptions,\n    editObservable?: EllipseEditorObservable,\n  ): EllipseEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let addSecondRadiusRegistration;\n    if (options.circleToEllipseTransformation) {\n      addSecondRadiusRegistration = this.mapEventsManager.register({\n        event: options.circleToEllipseTransformEvent,\n        modifier: options.circleToEllipseTransformEventModifier,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update: EllipseEditUpdate = {\n          id,\n          updatedPoint: point,\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n\n    if (addSecondRadiusRegistration) {\n      addSecondRadiusRegistration.subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const update: EllipseEditUpdate = {\n          id,\n          editMode: EditModes.EDIT,\n          editAction: EditActions.TRANSFORM,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update: EllipseEditUpdate = {\n            id,\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n            ...this.getEllipseProperties(id),\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration, addSecondRadiusRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    if (addSecondRadiusRegistration) {\n      observables.push(addSecondRadiusRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): EllipseEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      majorRadius: number,\n      rotation?: number,\n      minorRadius?: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      ellipseProp?: EllipseProps,\n    ) => {\n      const ellipse = this.ellipsesManager.get(id);\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\n\n    return observableToExtend as EllipseEditorObservable;\n  }\n\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\n    const ellipseOptions = Object.assign(defaultClone, options);\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\n    return ellipseOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.ellipsesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.ellipsesManager.get(id).center;\n  }\n\n  private getMajorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMajorRadius();\n  }\n\n  private getMinorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMinorRadius();\n  }\n\n  private getEllipseProperties(id: string) {\n    const ellipse = this.ellipsesManager.get(id);\n    return {\n      center: ellipse.getCenter(),\n      rotation: ellipse.getRotation(),\n      minorRadius: ellipse.getMinorRadius(),\n      majorRadius: ellipse.getMajorRadius(),\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableEllipse } from '../../models/editable-ellipse';\n\n@Component({\n  selector: 'ellipses-editor',\n  template: /*html*/ `\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\n      <ac-ellipse-desc\n        props=\"{\n        position: ellipse.getCenterCallbackProperty(),\n        semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\n        semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\n        rotation: ellipse.getRotationCallbackProperty(),\n        material: ellipse.ellipseProps.material,\n        outline: ellipse.ellipseProps.outline,\n        outlineWidth: ellipse.ellipseProps.outlineWidth,\n        outlineColor: ellipse.ellipseProps.outlineColor,\n        height: 0\n    }\"\n      >\n      </ac-ellipse-desc>\n\n      <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            text: label.text,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, EllipsesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EllipsesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editEllipses$ = new Subject<AcNotification>();\n\n  @ViewChild('editEllipsesLayer') private editEllipsesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private ellipsesEditor: EllipsesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private ellipsesManager: EllipsesManagerService,\n  ) {\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.ellipsesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\n    update.center = ellipse.getCenter();\n    update.majorRadius = ellipse.getMajorRadius();\n    update.minorRadius = ellipse.getMinorRadius();\n    update.rotation = ellipse.getRotation();\n\n    if (labels) {\n      ellipse.labels = labels;\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  removeEditLabels(ellipse: EditableEllipse) {\n    ellipse.labels = [];\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  handleCreateUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.center) {\n          ellipse.addPoint(update.center);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.removeEditLabels(ellipse);\n        this.ellipsesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const ellipse = this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        ellipse.setManually(\n          update.center,\n          update.majorRadius,\n          update.rotation,\n          update.minorRadius,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\n        );\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.endMoveEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.TRANSFORM: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.transformToEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = false;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = true;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ellipsesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from './polyline-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolyline extends AcEntity {\n  private positions: EditPoint[] = [];\n\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _pointProps: PointProps;\n  private polylineProps: PolylineProps;\n  private lastDraggedToPosition: any;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PolylineEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this._pointProps = editOptions.pointProps;\n    this.props = editOptions.polylineProps;\n    if (positions && positions.length >= 2) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PolylineProps {\n    return this.polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this.polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.doneCreation = true;\n  }\n\n  setManually(points: {\n    position: Cartesian3,\n    pointProp?: PointProps\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\n\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      if (index !== currentPoints.length - 1) {\n        const currentPoint = pos;\n        const nextIndex = (index + 1) % (currentPoints.length);\n        const nextPoint = currentPoints[nextIndex];\n\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n\n        this.updatePointsLayer(false, midPoint);\n      }\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const currentCart = Cesium.Cartographic.fromCartesian(firstP.getPosition());\n    const nextCart = Cesium.Cartographic.fromCartesian(secondP.getPosition());\n    const midPointCartesian3 = this.coordinateConverter.midPointToCartesian3(currentCart, nextCart);\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const prevPointCart = Cesium.Cartographic.fromCartesian(prevPoint.getPosition());\n    const nextPointCart = Cesium.Cartographic.fromCartesian(nextPoint.getPosition());\n    virtualEditPoint.setPosition(this.coordinateConverter.midPointToCartesian3(prevPointCart, nextPointCart));\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // actual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      if (index !== realPoints.length - 1) {\n        const nextIndex = (index + 1);\n        const nextPoint = realPoints[nextIndex];\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\n        this.polylines.push(polyline);\n        this.polylinesLayer.update(polyline, polyline.getId());\n      }\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n\n      if (pointIndex < this.positions.length - 1) {\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n        this.updatePointsLayer(false, nextVirtualPoint);\n      }\n      if (pointIndex > 0) {\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n        this.updatePointsLayer(false, prevVirtualPoint);\n      }\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.updatePointsLayer(true, ...this.positions);\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.updatePointsLayer(true, ...this.positions);\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints()\n      .map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  update() {\n    this.updatePointsLayer();\n  }\n\n  dispose() {\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { LabelProps } from './label-props';\n\nexport class EditorObservable<T> extends Observable<T> {\n  dispose: Function;\n  enable: Function;\n  disable: Function;\n  getLabels: () => LabelProps[];\n  getEditValue: () => T;\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\n  updateLabels: (labels: LabelProps[]) => void;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolylineEditUpdate } from './polyline-edit-update';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\n\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { PolygonProps } from './polygon-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\n\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\n                polygonProps?: PolygonProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CircleEditUpdate } from './circle-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\n  getCenter: () => Cartesian3;\n  getRadius: () => number; // meters\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from './ellipse-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\n  setManually: (\n    center: Cartesian3,\n    majorRadius: number,\n    rotation?: number,\n    minorRadius?: number,\n    centerPointProp?: PointProps,\n    radiusPointProp?: PointProps,\n    ellipseProp?: EllipseProps,\n  ) => void;\n  getCenter: () => Cartesian3;\n  getMinorRadius: () => number; // meters\n  getMajorRadius: () => number; // meters\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HippodromeEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (firstPosition: Cartesian3,\n                secondPosition: Cartesian3,\n                widthMeters?: number,\n                firstPointProp?: PointProps,\n                secondPointProp?: PointProps) => void;\n  getCurrentPoints: () => EditPoint[];\n  getCurrentWidth: () => number; // meters\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './polyline-edit-options';\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableHippodrome extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _hippodromeProps: HippodromeProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private hippodromeLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: HippodromeEditOptions,\n    positions?: Cartesian3[],\n  ) {\n    super();\n    this.defaultPointProps = editOptions.pointProps;\n    this.hippodromeProps = editOptions.hippodromeProps;\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get hippodromeProps(): HippodromeProps {\n    return this._hippodromeProps;\n  }\n\n  set hippodromeProps(value: HippodromeProps) {\n    this._hippodromeProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.createHeightEditPoints();\n    this.updateHippdromeLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...points);\n    this.updateHippdromeLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n      this.createHeightEditPoints();\n\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  private createHeightEditPoints() {\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n\n    const upAzimuth = Cesium.Math.toRadians(bearingDeg) - Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\n    const downAzimuth = Cesium.Math.toRadians(bearingDeg) + Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\n  }\n\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      midPointCartesian3,\n      this.hippodromeProps.width / 2,\n      azimuth,\n      true,\n    );\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n    this.positions.push(midPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.createHeightEditPoints();\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n    } else {\n      this.changeWidthByNewPoint(toPosition);\n    }\n  }\n\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\n    let normalizedBearingDeb = bearingDeg;\n    if (bearingDeg > 270) {\n      normalizedBearingDeb = bearingDeg - 270;\n    } else if (bearingDeg > 180) {\n      normalizedBearingDeb = bearingDeg - 180;\n    }\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n    if (bearingDegHippodromeDots > 180) {\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\n    }\n    let fixedBearingDeg =\n      bearingDegHippodromeDots > normalizedBearingDeb\n        ? bearingDegHippodromeDots - normalizedBearingDeb\n        : normalizedBearingDeb - bearingDegHippodromeDots;\n\n    if (bearingDeg > 270) {\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\n    }\n\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\n    const radiusWidth = Math.sin(Cesium.Math.toRadians(fixedBearingDeg)) * distanceMeters;\n\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.createHeightEditPoints();\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateHippdromeLayer();\n  }\n\n  endMovePoint() {\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getWidth(): number {\n    return this.hippodromeProps.width;\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateHippdromeLayer() {\n    this.hippodromeLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.hippodromeLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolylinesManagerService } from './polylines-manager.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\nimport { EditPolyline } from '../../../models';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 3,\n  },\n};\n\n/**\n * Service for creating editable polylines\n *\n *  * You must provide `PolylineEditorService` yourself.\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polyline\n *  const editing$ = polylinesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polyline from existing polyline cartesian3 positions\n *  const editing$ = this.polylinesEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolylinesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolylineEditUpdate>();\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polylinesManager: PolylinesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polylinesManager: PolylinesManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polylinesManager = polylinesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<PolylineEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          eventPriority,\n          polylineOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n    addLastPointRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        eventPriority,\n        polylineOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           eventPriority,\n                           polylineOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\n    if (positions.length < 2) {\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\n    }\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolyline(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polylineOptions\n    );\n  }\n\n  private editPolyline(id: string,\n                       positions: Cartesian3[],\n                       priority: number,\n                       editSubject: Subject<PolylineEditUpdate>,\n                       options: PolylineEditOptions,\n                       editObservable?: PolylineEditorObservable) {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditPolyline,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.editedEntityId,\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    pointRemoveRegistration.subscribe(({entities}) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 3) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolylineEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\n    const polylineOptions = Object.assign(defaultClone, options);\n    polylineOptions.pointProps = Object.assign({}, DEFAULT_POLYLINE_OPTIONS.pointProps, options.pointProps);\n    polylineOptions.polylineProps = Object.assign({},\n      DEFAULT_POLYLINE_OPTIONS.polylineProps, options.polylineProps);\n    return polylineOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolylineEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (points: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\n      const polyline = this.polylinesManager.get(id);\n      polyline.setManually(points, polylineProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\n\n    return observableToExtend as PolylineEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPoints();\n  }\n}\n","import { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { EditablePolyline } from '../../../models/editable-polyline';\n\n@Injectable()\nexport class PolylinesManagerService {\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\n\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolyline = new EditablePolyline(\n      id,\n      editPolylinesLayer,\n      editPointsLayer,\n      coordinateConverter,\n      polylineOptions,\n      positions);\n    this.polylines.set(id, editablePolyline\n    );\n  }\n\n  get(id: string): EditablePolyline {\n    return this.polylines.get(id);\n  }\n\n  clear() {\n    this.polylines.forEach(polyline => polyline.dispose());\n    this.polylines.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditablePolyline } from '../../models/editable-polyline';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'polylines-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-primitive-desc\n        props=\"{\n        positions: polyline.getPositions(),\n        width: polyline.props.width,\n        material: polyline.props.material()\n    }\"\n      >\n      </ac-polyline-primitive-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolylinesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolylinesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public polylineLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n  @ViewChild('polylineLabelsLayer') private polylineLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private polylinesEditor: PolylinesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polylinesManager: PolylinesManagerService,\n  ) {\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\n    update.positions = polyline.getRealPositions();\n    update.points = polyline.getRealPoints();\n\n    if (labels) {\n      polyline.labels = labels;\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\n  }\n\n  removeEditLabels(polyline: EditablePolyline) {\n    polyline.labels = [];\n    this.polylineLabelsLayer.remove(polyline.getId());\n  }\n\n  handleCreateUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polyline = this.polylinesManager.get(update.id);\n        polyline.dispose();\n        this.removeEditLabels(polyline);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polyline, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit && update.updatedPoint.isVirtualEditPoint()) {\n          polyline.changeVirtualPointToRealPoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.removePoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = false;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = true;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.endMoveShape();\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polylinesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class HippodromeManagerService {\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\n\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\n                           positions?: Cartesian3[]) {\n    const editableHippodrome = new EditableHippodrome(\n      id,\n      editHippodromeLayer,\n      editPointsLayer,\n      coordinateConverter,\n      hippodromeEditOptions,\n      positions);\n    this.hippodromes.set(id, editableHippodrome);\n  }\n\n  get(id: string): EditableHippodrome {\n    return this.hippodromes.get(id);\n  }\n\n  clear() {\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\n    this.hippodromes.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { HippodromeManagerService } from './hippodrome-manager.service';\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  hippodromeProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    width: 200000.0,\n    outline: false,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n};\n\n/**\n * Service for creating editable hippodromes\n *\n * You must provide `HippodromeEditorService` yourself.\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n *\n * usage:\n * ```typescript\n *  // Start creating hippodrome\n *  const editing$ = hippodromeEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class HippodromeEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<HippodromeEditUpdate>();\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private hippodromeManager: HippodromeManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       managerService: HippodromeManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.hippodromeManager = managerService;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<HippodromeEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const hippodromeOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: hippodromeOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n        width: this.getWidth(id),\n      });\n\n      if (!isFirstPoint) {\n        const changeMode = {\n          id,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next(changeMode);\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\n    }\n    const id = generateKey();\n    const hippodromeEditOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeEditOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n      width: this.getWidth(id),\n    });\n    return this.editHippodrome(\n      id,\n      priority,\n      editSubject,\n      hippodromeEditOptions\n    );\n  }\n\n  private editHippodrome(id: string,\n                         priority: number,\n                         editSubject: Subject<HippodromeEditUpdate>,\n                         options: HippodromeEditOptions,\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableHippodrome,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n          width: this.getWidth(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n            width: this.getWidth(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\n    const hippodromeOptions = Object.assign(defaultClone, options);\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\n    return hippodromeOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): HippodromeEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      widthMeters: number,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n\n      const hippodrome = this.hippodromeManager.get(id);\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\n\n    return observableToExtend as HippodromeEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPoints();\n  }\n\n  private getWidth(id: string) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getWidth();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\n\n@Component({\n  selector: 'hippodrome-editor',\n  template: /*html*/ `\n    <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\n      <ac-corridor-desc\n        props=\"{\n\t\tpositions: hippodrome.getRealPositionsCallbackProperty(),\n\t\tcornerType: Cesium.CornerType.ROUNDED,\n\t\tmaterial: hippodrome.hippodromeProps.material,\n\t\twidth : hippodrome.hippodromeProps.width,\n\t\toutline: hippodrome.hippodromeProps.outline,\n\t\toutlineColor: hippodrome.hippodromeProps.outlineColor,\n        outlineWidth: hippodrome.hippodromeProps.outlineWidth,\n        height: 0\n\t}\"\n      >\n      </ac-corridor-desc>\n\n      <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, HippodromeManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HippodromeEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editHippodromes$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editHippodromesLayer') private editHippodromesLayer: AcLayerComponent;\n\n  constructor(\n    private hippodromesEditor: HippodromeEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private hippodromesManager: HippodromeManagerService,\n  ) {\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\n    update.positions = hippodrome.getRealPositions();\n    update.points = hippodrome.getRealPoints();\n\n    if (labels) {\n      hippodrome.labels = labels;\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  removeEditLabels(hippodrome: EditableHippodrome) {\n    hippodrome.labels = [];\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  handleCreateUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.addPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        hippodrome.dispose();\n        this.removeEditLabels(hippodrome);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(hippodrome, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMovePoint();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = false;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = true;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMoveShape();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hippodromesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\n\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Vec2 } from '../../angular-cesium/models/vec2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\n\nexport interface IconDragEvent {\n  initialScreenPosition: Vec2;\n  screenPosition: Vec2;\n  mapPosition: Cartesian3;\n  drop: boolean;\n}\n\n/**\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\n * For more info check `DraggableToMapDirective` docs.\n */\n\n@Injectable()\nexport class DraggableToMapService {\n\n  private coordinateConverter: CoordinateConverter;\n  private dragObservable: Observable<IconDragEvent>;\n  private stopper: Subject<any>;\n  private mainSubject = new Subject<IconDragEvent>();\n\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\n  }\n\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\n    this.coordinateConverter = coordinateConverter;\n  }\n\n  drag(imageSrc: string, style?: any) {\n    if (!this.coordinateConverter) {\n      const mapComponent = this.mapsManager.getMap();\n      if (mapComponent) {\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\n      }\n    }\n    this.cancel();\n    const imgElement = document.createElement('img');\n    imgElement.src = imageSrc;\n    imgElement.style.position = 'fixed';\n    imgElement.style.visibility = 'hidden';\n    imgElement.style.width = '30px';\n    imgElement.style.height = '30px';\n    imgElement.style['user-drag'] = 'none';\n    imgElement.style['user-select'] = 'none';\n    imgElement.style['-moz-user-select'] = 'none';\n    imgElement.style['-webkit-user-drag'] = 'none';\n    imgElement.style['-webkit-user-select'] = 'none';\n    imgElement.style['-ms-user-select'] = 'none';\n    Object.assign(imgElement.style, style);\n    document.body.appendChild(imgElement);\n\n    this.createDragObservable();\n    this.dragObservable.subscribe(\n      (e) => {\n        imgElement.style.visibility = 'visible';\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\n        this.mainSubject.next(e);\n        if (e.drop) {\n          imgElement.remove();\n        }\n      },\n      (e: any) => {\n        imgElement.remove();\n      },\n      () => {\n        imgElement.remove();\n      }\n    );\n  }\n\n  dragUpdates(): Observable<IconDragEvent> {\n    return this.mainSubject;\n  }\n\n  cancel() {\n    if (this.stopper) {\n      this.stopper.next(true);\n      this.stopper = undefined;\n      this.dragObservable = undefined;\n    }\n  }\n\n  private createDragObservable() {\n    const stopper = new Subject();\n    const dropSubject = new Subject<any>();\n    const pointerUp = observableFromEvent(document, 'pointerup');\n    const pointerMove = observableFromEvent(document, 'pointermove');\n\n    let dragStartPositionX: number;\n    let dragStartPositionY: number;\n    let lastMove: any;\n    const moveObservable = pointerMove.pipe(map((e: any) => {\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\n        lastMove = {\n          drop: false,\n          initialScreenPosition: {\n            x: dragStartPositionX,\n            y: dragStartPositionY,\n          },\n          screenPosition: {\n            x: e.x,\n            y: e.y,\n          },\n          mapPosition: this.coordinateConverter ?\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\n        };\n        return lastMove;\n      }),\n      takeUntil(pointerUp),\n      tap(undefined, undefined, () => {\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\n    this.stopper = stopper;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\n\n/**\n * This directive is used to allow dragging of icons from outside the map over the map\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\n * @Input {src: string, style?: any} | string -\n * the [src: string | string] should be the image src of the dragged image.\n * The style is an optional style object for the image.\n *\n * example:\n * ```\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\n * </a>\n * ```\n *\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\n * ```\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\n * ```\n *\n * In order the cancel dragging use `DraggableToMapService.cancel()`\n * ```\n *  this.iconDragService.cancel();\n * ```\n */\n\n@Directive({selector: '[draggableToMap]'})\nexport class DraggableToMapDirective implements OnInit {\n  @Input() draggableToMap: { src: string, style?: any } | string;\n  private src: string;\n  private style: any;\n\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\n    el.nativeElement.style['user-drag'] = 'none';\n    el.nativeElement.style['user-select'] = 'none';\n    el.nativeElement.style['-moz-user-select'] = 'none';\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\n    el.nativeElement.style['-webkit-user-select'] = 'none';\n    el.nativeElement.style['-ms-user-select'] = 'none';\n  }\n\n  ngOnInit(): void {\n    if (typeof this.draggableToMap === 'string') {\n      this.src = this.draggableToMap;\n    } else {\n      this.src = this.draggableToMap.src;\n      this.style = this.draggableToMap.style;\n    }\n  }\n\n  @HostListener('mousedown')\n  onMouseDown() {\n    this.iconDragService.drag(this.src, this.style);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { fromEvent as observableFromEvent, Subscription, Observable } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\n\n\n/**\n * Toolbar widget, act as a container for ac-toolbar-button components\n * allowing drag configuration and passing `toolbarClass` as attributes\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\" (onDrag)=\"handleDrag($event)\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar',\n    template: `\n        <div class=\"{{toolbarClass}}\">\n            <div *ngIf=\"allowDrag\">\n                <ac-toolbar-button>\n                    <ac-drag-icon></ac-drag-icon>\n                </ac-toolbar-button>\n            </div>\n\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            width: 20px;\n            height: 20px;\n            z-index: 999;\n            -webkit-user-drag: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  toolbarClass: string;\n  @Input()\n  allowDrag = true;\n  @Output()\n  onDrag = new EventEmitter<MouseEvent>();\n\n  dragStyle = {\n    'height.px': 20,\n    'width.px': 20,\n  };\n\n  private mouseDown$: Observable<MouseEvent>;\n  private mouseMove$: Observable<MouseEvent>;\n  private mouseUp$: Observable<MouseEvent>;\n  private drag$: Observable<MouseEvent>;\n  private dragSubscription: Subscription;\n\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {}\n\n  ngOnInit() {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\n    if (this.allowDrag) {\n      this.listenForDragging();\n    }\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.allowDrag && changes.allowDrag.currentValue && !changes.allowDrag.previousValue) {\n      this.listenForDragging();\n    }\n\n    if (changes.allowDrag && !changes.allowDrag.currentValue && changes.allowDrag.previousValue) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.dragSubscription) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  private listenForDragging() {\n    this.mouseDown$ = this.mouseDown$ || observableFromEvent(this.element.nativeElement, 'mousedown');\n    this.mouseMove$ = this.mouseMove$ || observableFromEvent(document, 'mousemove') as Observable<MouseEvent>;\n    this.mouseUp$ = this.mouseUp$ || observableFromEvent(document, 'mouseup') as Observable<MouseEvent>;\n\n    this.drag$ = this.drag$ ||\n                 this.mouseDown$.pipe(\n                    switchMap(() => this.mouseMove$.pipe(\n                      tap(this.onDrag.emit),\n                      takeUntil(this.mouseUp$)\n                    ))\n                 );\n\n    this.dragSubscription = this.drag$.subscribe((event: MouseEvent) => {\n      this.element.nativeElement.style.left = `${event.x}px`;\n      this.element.nativeElement.style.top = `${event.y}px`;\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector: 'ac-drag-icon',\n    template: `\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n    `,\n  }\n)\nexport class DragIconComponent {\n  constructor() {\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Toolbar button widget, act as a single button inside ac-toolbar component\n * Can accepts content components or passing [iconUrl]\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar-button',\n    template: `\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .button-container {\n            border-radius: 1px;\n            background-color: rgba(255, 255, 255, 0.8);\n            height: 30px;\n            width: 30px;\n            padding: 5px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        .button-container:hover {\n            background-color: rgba(255, 255, 255, 0.95);\n        }\n\n        .icon {\n            height: 30px;\n            width: 30px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarButtonComponent implements OnInit {\n\n  @Input()\n  iconUrl: string;\n\n  @Input()\n  buttonClass: string;\n\n  @Input()\n  iconClass: string;\n\n  @Output()\n  onClick = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\nimport { LabelProps, LabelStyle } from '../../models/label-props';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\n\n/**\n *\n * Range and bearing component that is used to draw range and bearing on the map.\n * The inputs are used to customize the range and bearing style and behavior.\n * Create component reference and use the `create()` function to start creating R&B on the map.\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\n * (on top of the default and global definitions).\n *\n * Usage:\n *\n * my-component.ts:\n *\n * ```\n * \\@ViewChild('rangeAndBearing') private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\n *  // ...\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Cesium.Color.GREEN } });\n * ```\n *\n * my-component.html\n * ```\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\n * ```\n *\n */\n@Component({\n  selector: 'range-and-bearing',\n  template: `\n    <polylines-editor></polylines-editor>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PolylinesEditorService],\n})\nexport class RangeAndBearingComponent {\n  @Input() lineEditOptions?: PolylineEditOptions = {};\n  @Input() labelsStyle?: LabelStyle = {};\n  @Input() distanceLabelsStyle?: LabelStyle = {};\n  @Input() bearingLabelsStyle?: LabelStyle = {};\n  @Input() bearingStringFn?: (value: number) => string;\n  @Input() distanceStringFn?: (value: number) => string;\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\n  }\n\n  create(\n    {\n      lineEditOptions = {},\n      labelsStyle = {},\n      distanceLabelsStyle = {},\n      bearingLabelsStyle = {},\n      bearingStringFn,\n      distanceStringFn,\n      labelsRenderFn,\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\n  ): PolylineEditorObservable {\n    const rnb = this.polylineEditor.create({\n      allowDrag: false,\n      pointProps: {\n        showVirtual: false,\n        pixelSize: 8,\n      },\n      polylineProps: {\n        width: 2,\n      },\n      ...this.lineEditOptions,\n      ...lineEditOptions,\n    });\n\n    if (labelsRenderFn) {\n      rnb.setLabelsRenderFn(labelsRenderFn);\n    } else if (this.labelsRenderFn) {\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\n    } else {\n      rnb.setLabelsRenderFn(update => {\n        const positions = update.positions;\n        let totalDistance = 0;\n        if (!positions || positions.length === 0) {\n          return [];\n        }\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\n            ? [...positions, update.updatedPosition]\n            : positions\n        ).reduce(\n          (labels, position, index, array) => {\n            if (index !== 0) {\n              const previousPosition = array[index - 1];\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\n              const distance = Cesium.Cartesian3.distance(previousPosition, position) / 1000;\n              labels.push(\n                {\n                  text:\n                    (bearingStringFn && bearingStringFn(bearing)) ||\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\n                    `${bearing.toFixed(2)}Â°`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-20, -8),\n                  position: new Cesium.Cartesian3(\n                    (position.x + previousPosition.x) / 2,\n                    (position.y + previousPosition.y) / 2,\n                    (position.z + previousPosition.z) / 2,\n                  ),\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.bearingLabelsStyle as any),\n                  ...(bearingLabelsStyle as any),\n                },\n                {\n                  text:\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\n                    `${(totalDistance + distance).toFixed(2)} Km`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-35, -8),\n                  position: position,\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.distanceLabelsStyle as any),\n                  ...(distanceLabelsStyle as any),\n                },\n              );\n\n              totalDistance += distance;\n            }\n\n            return labels;\n          },\n          [\n            {\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\n              scale: 0.2,\n              font: '80px Helvetica',\n              pixelOffset: new Cesium.Cartesian2(-20, -8),\n              position: positions[0],\n              fillColor: Cesium.Color.WHITE,\n              outlineColor: Cesium.Color.WHITE,\n              showBackground: true,\n              ...(this.labelsStyle as any),\n              ...(labelsStyle as any),\n              ...(this.distanceLabelsStyle as any),\n              ...(distanceLabelsStyle as any),\n            },\n          ],\n        );\n      });\n    }\n\n    return rnb;\n  }\n}\n\nexport interface RangeAndBearingOptions {\n  lineEditOptions?: PolylineEditOptions;\n  labelsStyle?: LabelStyle;\n  distanceLabelsStyle?: LabelStyle;\n  bearingLabelsStyle?: LabelStyle;\n  bearingStringFn?: (value: number) => string;\n  distanceStringFn?: (value: number) => string;\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\n\ninterface ZoomData {\n  container: HTMLElement;\n  borderElement?: HTMLElement;\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\n}\n\n/**\n * The Service is as a \"zoom to rectangle\" tool\n *\n * example:\n * ```\n * constructor(\n *   private cameraService: CameraService,\n *   private cesiumService: CesiumService,\n *   private zoomToRectangleService: ZoomToRectangleService,\n * ) {\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\n * }\n * ...\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\n * ```\n *\n * `init()` - initialize the service with CameraService and CesiumService.\n * If no mapId is provided to activate() - must be called before calling `activate()`.\n *\n * `disable()` - disables the tool.\n *\n * `activate()` -\n * @param options\n * {\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\n *  onComplete - optional - a callback that will be called when the tool zoom in\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\n *  threshold - optional - the minimum area of the screen rectangle (in pixels) that is required to perform zoom - default: 9\n *  keepRotation - optional - whether or not to keep the rotation when zooming in - default: true\n *  mouseButton - optional - sets the mouse button for drawing the rectangle - default: left mouse button (0)\n * }\n * @param mapId - optional - the mapId of the map that the tool will be used in.\n *\n */\n\nexport enum MouseButtons {\n  LEFT = 0,\n  MIDDLE = 1,\n  RIGHT = 2,\n}\n\n@Injectable()\nexport class ZoomToRectangleService {\n  constructor(\n    private mapsManager: MapsManagerService,\n    @Optional() cameraService: CameraService,\n    @Optional() cesiumService: CesiumService,\n  ) {}\n\n  private cameraService: CameraService;\n  private cesiumService: CesiumService;\n\n  private mapsZoomElements = new Map<string, ZoomData>();\n  private defaultOptions = {\n    animationDurationInSeconds: 0.5,\n    resetKeyCode: 27,\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    autoDisableOnZoom: true,\n    threshold: 9,\n    keepRotation: true,\n    mouseButton: MouseButtons.LEFT,\n  };\n\n  init(cesiumService: CesiumService, cameraService: CameraService) {\n    this.cameraService = cameraService;\n    this.cesiumService = cesiumService;\n  }\n\n  activate(\n    options: {\n      onStart?: (acMap?: AcMapComponent) => any;\n      onComplete?: (acMap?: AcMapComponent) => any;\n      mouseButton?: MouseButtons;\n      autoDisableOnZoom?: boolean;\n      animationDurationInSeconds?: number;\n      threshold?: number;\n      keepRotation?: boolean;\n      borderStyle?: string;\n      backgroundColor?: string;\n      resetKeyCode?: number;\n    } = {},\n    mapId?: string,\n  ) {\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\n    let cameraService = this.cameraService;\n    let mapContainer;\n    let map;\n    if (this.cesiumService) {\n      mapContainer = this.cesiumService.getViewer().container;\n      map = this.cesiumService.getMap();\n    }\n    if (mapId) {\n      map = this.mapsManager.getMap(mapId);\n      if (!map) {\n        throw new Error(`Map not found with id: ${mapId}`);\n      }\n      cameraService = map.getCameraService();\n      mapContainer = map.getCesiumViewer().container;\n    }\n\n    if (!cameraService || !mapContainer) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    this.disable(mapId);\n    const container = document.createElement('div');\n    mapContainer.style.position = 'relative';\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    container.style.top = '0';\n    container.style.left = '0';\n    mapContainer.appendChild(container);\n    const mapZoomData: ZoomData = { container };\n    this.mapsZoomElements.set(mapId || this.cesiumService.getMap().getId(), mapZoomData);\n    let mouse = {\n      endX: 0,\n      endY: 0,\n      startX: 0,\n      startY: 0,\n    };\n    let borderElement: HTMLElement | undefined;\n\n    container.onmousedown = e => {\n      if (e.button !== finalOptions.mouseButton) {\n        return;\n      }\n      if (!borderElement) {\n        if (options && options.onStart) {\n          options.onStart(map);\n        }\n\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.startX = offsetX;\n        mouse.startY = offsetY;\n        borderElement = document.createElement('div');\n        borderElement.className = 'zoom-to-rectangle-border';\n        borderElement.style.position = 'absolute';\n        borderElement.style.border = finalOptions.borderStyle;\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\n        borderElement.style.left = mouse.startX + 'px';\n        borderElement.style.top = mouse.startY + 'px';\n        container.appendChild(borderElement);\n        mapZoomData.borderElement = borderElement;\n      }\n    };\n\n    container.onmouseup = e => {\n      if (borderElement) {\n        let zoomApplied;\n        if (mouse && Math.abs(mouse.endX - mouse.startX) * Math.abs(mouse.endY - mouse.startY) > finalOptions.threshold) {\n          zoomApplied = this.zoomCameraToRectangle(\n            cameraService,\n            mouse,\n            finalOptions.animationDurationInSeconds,\n            finalOptions,\n          );\n        }\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n        if (!!finalOptions.onComplete) {\n          finalOptions.onComplete(map);\n        }\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\n          this.disable(mapId);\n        }\n      }\n    };\n\n    container.onmousemove = e => {\n      if (borderElement) {\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.endX = offsetX;\n        mouse.endY = offsetY;\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\n      }\n    };\n\n    const resetOnEscapePress = e => {\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n      }\n    };\n    document.addEventListener('keydown', resetOnEscapePress);\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\n  }\n\n  disable(mapId?: string) {\n    if (!this.cesiumService && !mapId) {\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\n    }\n    const data = this.mapsZoomElements.get(mapId || this.cesiumService.getMap().getId());\n    if (data) {\n      data.container.remove();\n      if (data.borderElement) {\n        data.borderElement.remove();\n      }\n      if (data.resetOnEscapePressFunc) {\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\n      }\n    }\n    this.mapsZoomElements.delete(mapId);\n  }\n\n  private zoomCameraToRectangle(\n    cameraService: CameraService,\n    positions: { endX: number; endY: number; startX: number; startY: number },\n    animationDuration,\n    options,\n  ): boolean {\n    const camera = cameraService.getCamera();\n    const cartesian1 = camera.pickEllipsoid({ x: positions.startX, y: positions.startY });\n    const cartesian2 = camera.pickEllipsoid({ x: positions.endX, y: positions.endY });\n    if (!cartesian1 || !cartesian2) {\n      return false;\n    }\n    const cartographic1 = Cesium.Cartographic.fromCartesian(cartesian1);\n    const cartographic2 = Cesium.Cartographic.fromCartesian(cartesian2);\n    cameraService.cameraFlyTo({\n      destination: new Cesium.Rectangle(\n        Math.min(cartographic1.longitude, cartographic2.longitude),\n        Math.min(cartographic1.latitude, cartographic2.latitude),\n        Math.max(cartographic1.longitude, cartographic2.longitude),\n        Math.max(cartographic1.latitude, cartographic2.latitude),\n      ),\n      orientation: options.keepRotation ? { heading: camera.heading } : undefined,\n      duration: animationDuration,\n    });\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\nimport { DraggableToMapService } from './services/draggable-to-map.service';\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\n\n@NgModule({\n  imports: [CommonModule, AngularCesiumModule],\n  declarations: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    DragIconComponent,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  exports: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  providers: [\n    DraggableToMapService,\n    ZoomToRectangleService,\n  ]\n})\nexport class AngularCesiumWidgetsModule {\n}\n"]}