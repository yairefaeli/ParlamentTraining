/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
/**
 * @record
 */
export function OnDrawParams() { }
if (false) {
    /** @type {?} */
    OnDrawParams.prototype.acEntity;
    /** @type {?} */
    OnDrawParams.prototype.entityId;
    /** @type {?} */
    OnDrawParams.prototype.cesiumEntity;
}
/**
 *  the ancestor class for creating components.
 *  extend this class to create desc component.
 */
var BasicDesc = /** @class */ (function () {
    function BasicDesc(_drawer, _layerService, _computationCache, _cesiumProperties) {
        this._drawer = _drawer;
        this._layerService = _layerService;
        this._computationCache = _computationCache;
        this._cesiumProperties = _cesiumProperties;
        this.onDraw = new EventEmitter();
        this.onRemove = new EventEmitter();
        this._cesiumObjectsMap = new Map();
    }
    /**
     * @protected
     * @param {?} context
     * @return {?}
     */
    BasicDesc.prototype._propsEvaluator = /**
     * @protected
     * @param {?} context
     * @return {?}
     */
    function (context) {
        return this._propsEvaluateFn(this._computationCache, context);
    };
    /**
     * @protected
     * @return {?}
     */
    BasicDesc.prototype._getPropsAssigner = /**
     * @protected
     * @return {?}
     */
    function () {
        var _this = this;
        return function (cesiumObject, desc) { return _this._propsAssignerFn(cesiumObject, desc); };
    };
    /**
     * @return {?}
     */
    BasicDesc.prototype.getLayerService = /**
     * @return {?}
     */
    function () {
        return this._layerService;
    };
    /**
     * @param {?} layerService
     * @return {?}
     */
    BasicDesc.prototype.setLayerService = /**
     * @param {?} layerService
     * @return {?}
     */
    function (layerService) {
        this._layerService.unregisterDescription(this);
        this._layerService = layerService;
        this._layerService.registerDescription(this);
        this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);
        this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);
    };
    /**
     * @return {?}
     */
    BasicDesc.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.props) {
            console.error('ac-desc components error: [props] input is mandatory');
        }
        this._layerService.registerDescription(this);
        this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);
        this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);
    };
    /**
     * @return {?}
     */
    BasicDesc.prototype.getCesiumObjectsMap = /**
     * @return {?}
     */
    function () {
        return this._cesiumObjectsMap;
    };
    /**
     * @param {?} context
     * @param {?} id
     * @param {?} entity
     * @return {?}
     */
    BasicDesc.prototype.draw = /**
     * @param {?} context
     * @param {?} id
     * @param {?} entity
     * @return {?}
     */
    function (context, id, entity) {
        /** @type {?} */
        var cesiumProps = this._propsEvaluator(context);
        if (!this._cesiumObjectsMap.has(id)) {
            /** @type {?} */
            var cesiumObject = this._drawer.add(cesiumProps);
            this.onDraw.emit({
                acEntity: entity,
                cesiumEntity: cesiumObject,
                entityId: id,
            });
            cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage
            this._cesiumObjectsMap.set(id, cesiumObject);
        }
        else {
            /** @type {?} */
            var cesiumObject = this._cesiumObjectsMap.get(id);
            this.onDraw.emit({
                acEntity: entity,
                cesiumEntity: cesiumObject,
                entityId: id,
            });
            cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage
            this._drawer.setPropsAssigner(this._getPropsAssigner());
            this._drawer.update(cesiumObject, cesiumProps);
        }
    };
    /**
     * @param {?} id
     * @return {?}
     */
    BasicDesc.prototype.remove = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var cesiumObject = this._cesiumObjectsMap.get(id);
        if (cesiumObject) {
            this.onRemove.emit({
                acEntity: cesiumObject.acEntity,
                cesiumEntity: cesiumObject,
                entityId: id,
            });
            this._drawer.remove(cesiumObject);
            this._cesiumObjectsMap.delete(id);
        }
    };
    /**
     * @return {?}
     */
    BasicDesc.prototype.removeAll = /**
     * @return {?}
     */
    function () {
        this._cesiumObjectsMap.clear();
        this._drawer.removeAll();
    };
    /**
     * @return {?}
     */
    BasicDesc.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._layerService.unregisterDescription(this);
        this.removeAll();
    };
    BasicDesc.propDecorators = {
        props: [{ type: Input }],
        onDraw: [{ type: Output }],
        onRemove: [{ type: Output }]
    };
    return BasicDesc;
}());
export { BasicDesc };
if (false) {
    /** @type {?} */
    BasicDesc.prototype.props;
    /** @type {?} */
    BasicDesc.prototype.onDraw;
    /** @type {?} */
    BasicDesc.prototype.onRemove;
    /**
     * @type {?}
     * @protected
     */
    BasicDesc.prototype._cesiumObjectsMap;
    /**
     * @type {?}
     * @private
     */
    BasicDesc.prototype._propsEvaluateFn;
    /**
     * @type {?}
     * @private
     */
    BasicDesc.prototype._propsAssignerFn;
    /**
     * @type {?}
     * @protected
     */
    BasicDesc.prototype._drawer;
    /**
     * @type {?}
     * @protected
     */
    BasicDesc.prototype._layerService;
    /**
     * @type {?}
     * @protected
     */
    BasicDesc.prototype._computationCache;
    /**
     * @type {?}
     * @protected
     */
    BasicDesc.prototype._cesiumProperties;
}
//# sourceMappingURL=data:application/json;base64,