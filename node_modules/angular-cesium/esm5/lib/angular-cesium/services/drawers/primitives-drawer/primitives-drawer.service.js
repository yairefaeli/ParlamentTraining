/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';
/**
 *  General primitives drawer responsible of drawing Cesium primitives.
 *  Drawers the handle Cesium primitives extend it.
 * @abstract
 */
var /**
 *  General primitives drawer responsible of drawing Cesium primitives.
 *  Drawers the handle Cesium primitives extend it.
 * @abstract
 */
PrimitivesDrawerService = /** @class */ (function (_super) {
    tslib_1.__extends(PrimitivesDrawerService, _super);
    function PrimitivesDrawerService(drawerType, cesiumService) {
        var _this = _super.call(this) || this;
        _this.drawerType = drawerType;
        _this.cesiumService = cesiumService;
        _this._show = true;
        return _this;
    }
    /**
     * @return {?}
     */
    PrimitivesDrawerService.prototype.init = /**
     * @return {?}
     */
    function () {
        this._cesiumCollection = new this.drawerType();
        this._primitiveCollectionWrap = new Cesium.PrimitiveCollection();
        this._primitiveCollectionWrap.add(this._cesiumCollection);
        this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);
    };
    /**
     * @param {?} cesiumProps
     * @param {...?} args
     * @return {?}
     */
    PrimitivesDrawerService.prototype.add = /**
     * @param {?} cesiumProps
     * @param {...?} args
     * @return {?}
     */
    function (cesiumProps) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this._cesiumCollection.add(cesiumProps);
    };
    /**
     * @param {?} entity
     * @param {?} cesiumProps
     * @param {...?} args
     * @return {?}
     */
    PrimitivesDrawerService.prototype.update = /**
     * @param {?} entity
     * @param {?} cesiumProps
     * @param {...?} args
     * @return {?}
     */
    function (entity, cesiumProps) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (this._propsAssigner) {
            this._propsAssigner(entity, cesiumProps);
        }
        else {
            Object.assign(entity, cesiumProps);
        }
    };
    /**
     * @param {?} entity
     * @return {?}
     */
    PrimitivesDrawerService.prototype.remove = /**
     * @param {?} entity
     * @return {?}
     */
    function (entity) {
        this._cesiumCollection.remove(entity);
    };
    /**
     * @return {?}
     */
    PrimitivesDrawerService.prototype.removeAll = /**
     * @return {?}
     */
    function () {
        this._cesiumCollection.removeAll();
    };
    /**
     * @param {?} showValue
     * @return {?}
     */
    PrimitivesDrawerService.prototype.setShow = /**
     * @param {?} showValue
     * @return {?}
     */
    function (showValue) {
        this._show = showValue;
        this._primitiveCollectionWrap.show = showValue;
    };
    /**
     * @return {?}
     */
    PrimitivesDrawerService.prototype.getShow = /**
     * @return {?}
     */
    function () {
        return this._show;
    };
    return PrimitivesDrawerService;
}(BasicDrawerService));
/**
 *  General primitives drawer responsible of drawing Cesium primitives.
 *  Drawers the handle Cesium primitives extend it.
 * @abstract
 */
export { PrimitivesDrawerService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PrimitivesDrawerService.prototype._show;
    /**
     * @type {?}
     * @private
     */
    PrimitivesDrawerService.prototype._primitiveCollectionWrap;
    /**
     * @type {?}
     * @protected
     */
    PrimitivesDrawerService.prototype._cesiumCollection;
    /**
     * @type {?}
     * @protected
     */
    PrimitivesDrawerService.prototype._propsAssigner;
    /**
     * @type {?}
     * @private
     */
    PrimitivesDrawerService.prototype.drawerType;
    /**
     * @type {?}
     * @private
     */
    PrimitivesDrawerService.prototype.cesiumService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbWl0aXZlcy1kcmF3ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2VzaXVtLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItY2VzaXVtL3NlcnZpY2VzL2RyYXdlcnMvcHJpbWl0aXZlcy1kcmF3ZXIvcHJpbWl0aXZlcy1kcmF3ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDOzs7Ozs7QUFNMUU7Ozs7OztJQUFzRCxtREFBa0I7SUFNdEUsaUNBQW9CLFVBQWUsRUFBVSxhQUE0QjtRQUF6RSxZQUNFLGlCQUFPLFNBQ1I7UUFGbUIsZ0JBQVUsR0FBVixVQUFVLENBQUs7UUFBVSxtQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUxqRSxXQUFLLEdBQUcsSUFBSSxDQUFDOztJQU9yQixDQUFDOzs7O0lBRUQsc0NBQUk7OztJQUFKO1FBQ0UsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQy9DLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQ2pFLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQzlFLENBQUM7Ozs7OztJQUVELHFDQUFHOzs7OztJQUFILFVBQUksV0FBZ0I7UUFBRSxjQUFjO2FBQWQsVUFBYyxFQUFkLHFCQUFjLEVBQWQsSUFBYztZQUFkLDZCQUFjOztRQUNsQyxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Ozs7OztJQUVELHdDQUFNOzs7Ozs7SUFBTixVQUFPLE1BQVcsRUFBRSxXQUFnQjtRQUFFLGNBQWM7YUFBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO1lBQWQsNkJBQWM7O1FBQ2xELElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN2QixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztTQUMxQzthQUFNO1lBQ0wsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDOzs7OztJQUVELHdDQUFNOzs7O0lBQU4sVUFBTyxNQUFXO1FBQ2hCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7OztJQUVELDJDQUFTOzs7SUFBVDtRQUNFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVELHlDQUFPOzs7O0lBQVAsVUFBUSxTQUFrQjtRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztRQUN2QixJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBRUQseUNBQU87OztJQUFQO1FBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFDSCw4QkFBQztBQUFELENBQUMsQUE3Q0QsQ0FBc0Qsa0JBQWtCLEdBNkN2RTs7Ozs7Ozs7Ozs7O0lBNUNDLHdDQUFxQjs7Ozs7SUFDckIsMkRBQXNDOzs7OztJQUN0QyxvREFBaUM7Ozs7O0lBQ2pDLGlEQUFtQzs7Ozs7SUFFdkIsNkNBQXVCOzs7OztJQUFFLGdEQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENlc2l1bVNlcnZpY2UgfSBmcm9tICcuLi8uLi9jZXNpdW0vY2VzaXVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFzaWNEcmF3ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vYmFzaWMtZHJhd2VyL2Jhc2ljLWRyYXdlci5zZXJ2aWNlJztcblxuLyoqXG4gKiAgR2VuZXJhbCBwcmltaXRpdmVzIGRyYXdlciByZXNwb25zaWJsZSBvZiBkcmF3aW5nIENlc2l1bSBwcmltaXRpdmVzLlxuICogIERyYXdlcnMgdGhlIGhhbmRsZSBDZXNpdW0gcHJpbWl0aXZlcyBleHRlbmQgaXQuXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQcmltaXRpdmVzRHJhd2VyU2VydmljZSBleHRlbmRzIEJhc2ljRHJhd2VyU2VydmljZSB7XG4gIHByaXZhdGUgX3Nob3cgPSB0cnVlO1xuICBwcml2YXRlIF9wcmltaXRpdmVDb2xsZWN0aW9uV3JhcDogYW55O1xuICBwcm90ZWN0ZWQgX2Nlc2l1bUNvbGxlY3Rpb246IGFueTtcbiAgcHJvdGVjdGVkIF9wcm9wc0Fzc2lnbmVyOiBGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRyYXdlclR5cGU6IGFueSwgcHJpdmF0ZSBjZXNpdW1TZXJ2aWNlOiBDZXNpdW1TZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5fY2VzaXVtQ29sbGVjdGlvbiA9IG5ldyB0aGlzLmRyYXdlclR5cGUoKTtcbiAgICB0aGlzLl9wcmltaXRpdmVDb2xsZWN0aW9uV3JhcCA9IG5ldyBDZXNpdW0uUHJpbWl0aXZlQ29sbGVjdGlvbigpO1xuICAgIHRoaXMuX3ByaW1pdGl2ZUNvbGxlY3Rpb25XcmFwLmFkZCh0aGlzLl9jZXNpdW1Db2xsZWN0aW9uKTtcbiAgICB0aGlzLmNlc2l1bVNlcnZpY2UuZ2V0U2NlbmUoKS5wcmltaXRpdmVzLmFkZCh0aGlzLl9wcmltaXRpdmVDb2xsZWN0aW9uV3JhcCk7XG4gIH1cblxuICBhZGQoY2VzaXVtUHJvcHM6IGFueSwgLi4uYXJnczogYW55W10pOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl9jZXNpdW1Db2xsZWN0aW9uLmFkZChjZXNpdW1Qcm9wcyk7XG4gIH1cblxuICB1cGRhdGUoZW50aXR5OiBhbnksIGNlc2l1bVByb3BzOiBhbnksIC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgaWYgKHRoaXMuX3Byb3BzQXNzaWduZXIpIHtcbiAgICAgIHRoaXMuX3Byb3BzQXNzaWduZXIoZW50aXR5LCBjZXNpdW1Qcm9wcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oZW50aXR5LCBjZXNpdW1Qcm9wcyk7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlKGVudGl0eTogYW55KSB7XG4gICAgdGhpcy5fY2VzaXVtQ29sbGVjdGlvbi5yZW1vdmUoZW50aXR5KTtcbiAgfVxuXG4gIHJlbW92ZUFsbCgpIHtcbiAgICB0aGlzLl9jZXNpdW1Db2xsZWN0aW9uLnJlbW92ZUFsbCgpO1xuICB9XG5cbiAgc2V0U2hvdyhzaG93VmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zaG93ID0gc2hvd1ZhbHVlO1xuICAgIHRoaXMuX3ByaW1pdGl2ZUNvbGxlY3Rpb25XcmFwLnNob3cgPSBzaG93VmFsdWU7XG4gIH1cblxuICBnZXRTaG93KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9zaG93O1xuICB9XG59XG4iXX0=