/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';
import { PlonterService } from '../../services/plonter/plonter.service';
import { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';
var AcDefaultPlonterComponent = /** @class */ (function () {
    function AcDefaultPlonterComponent(plonterService, cd, geoConverter) {
        this.plonterService = plonterService;
        this.cd = cd;
        this.geoConverter = geoConverter;
    }
    /**
     * @return {?}
     */
    AcDefaultPlonterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.plonterService.plonterChangeNotifier.subscribe(function () { return _this.cd.detectChanges(); });
    };
    Object.defineProperty(AcDefaultPlonterComponent.prototype, "plonterPosition", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.plonterService.plonterShown) {
                /** @type {?} */
                var screenPos = this.plonterService.plonterClickPosition.endPosition;
                return this.geoConverter.screenToCartesian3(screenPos);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} entity
     * @return {?}
     */
    AcDefaultPlonterComponent.prototype.chooseEntity = /**
     * @param {?} entity
     * @return {?}
     */
    function (entity) {
        this.plonterService.resolvePlonter(entity);
    };
    AcDefaultPlonterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ac-default-plonter',
                    template: "\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [CoordinateConverter],
                    styles: ["\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    "]
                }] }
    ];
    /** @nocollapse */
    AcDefaultPlonterComponent.ctorParameters = function () { return [
        { type: PlonterService },
        { type: ChangeDetectorRef },
        { type: CoordinateConverter }
    ]; };
    return AcDefaultPlonterComponent;
}());
export { AcDefaultPlonterComponent };
if (false) {
    /** @type {?} */
    AcDefaultPlonterComponent.prototype.plonterService;
    /**
     * @type {?}
     * @private
     */
    AcDefaultPlonterComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    AcDefaultPlonterComponent.prototype.geoConverter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWMtZGVmYXVsdC1wbG9udGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2VzaXVtLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItY2VzaXVtL2NvbXBvbmVudHMvYWMtZGVmYXVsdC1wbG9udGVyL2FjLWRlZmF1bHQtcGxvbnRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDOUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGtFQUFrRSxDQUFDO0FBRXZHO0lBc0NFLG1DQUFtQixjQUE4QixFQUM3QixFQUFxQixFQUNyQixZQUFpQztRQUZsQyxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDN0IsT0FBRSxHQUFGLEVBQUUsQ0FBbUI7UUFDckIsaUJBQVksR0FBWixZQUFZLENBQXFCO0lBQ3JELENBQUM7Ozs7SUFFRCw0Q0FBUTs7O0lBQVI7UUFBQSxpQkFFQztRQURDLElBQUksQ0FBQyxjQUFjLENBQUMscUJBQXFCLENBQUMsU0FBUyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxFQUF2QixDQUF1QixDQUFDLENBQUM7SUFDckYsQ0FBQztJQUVELHNCQUFJLHNEQUFlOzs7O1FBQW5CO1lBQ0UsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRTs7b0JBQzlCLFNBQVMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLFdBQVc7Z0JBQ3RFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUN4RDtRQUNILENBQUM7OztPQUFBOzs7OztJQUVELGdEQUFZOzs7O0lBQVosVUFBYSxNQUFXO1FBQ3RCLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7O2dCQXhERixTQUFTLFNBQ1I7b0JBQ0UsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLG9hQVdUO29CQWtCRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLENBQUMsbUJBQW1CLENBQUM7NkJBbEJ2QixpWkFnQlI7aUJBR0Y7Ozs7Z0JBckNNLGNBQWM7Z0JBRFcsaUJBQWlCO2dCQUUxQyxtQkFBbUI7O0lBMkQ1QixnQ0FBQztDQUFBLEFBekRELElBeURDO1NBckJZLHlCQUF5Qjs7O0lBRXhCLG1EQUFxQzs7Ozs7SUFDckMsdUNBQTZCOzs7OztJQUM3QixpREFBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQbG9udGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3Bsb250ZXIvcGxvbnRlci5zZXJ2aWNlJztcbmltcG9ydCB7IENvb3JkaW5hdGVDb252ZXJ0ZXIgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9jb29yZGluYXRlLWNvbnZlcnRlci9jb29yZGluYXRlLWNvbnZlcnRlci5zZXJ2aWNlJztcblxuQENvbXBvbmVudChcbiAge1xuICAgIHNlbGVjdG9yOiAnYWMtZGVmYXVsdC1wbG9udGVyJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgPGFjLWh0bWwgKm5nSWY9XCJwbG9udGVyU2VydmljZS5wbG9udGVyU2hvd25cIiBbcHJvcHNdPVwie1xuICAgICAgICBwb3NpdGlvbjogcGxvbnRlclBvc2l0aW9uXG4gICAgICB9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwbG9udGVyLWNvbnRleHQtbWVudVwiPlxuICAgICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IGVudGl0eSBvZiBwbG9udGVyU2VydmljZS5lbnRpdGVzVG9QbG9udGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGxvbnRlci1pdGVtXCIgKGNsaWNrKT1cImNob29zZUVudGl0eShlbnRpdHkpXCI+e3sgZW50aXR5Py5uYW1lIHx8IGVudGl0eT8uaWQgfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvYWMtaHRtbD5cbiAgICBgLFxuICAgIHN0eWxlczogW2BcbiAgICAgICAgLnBsb250ZXItY29udGV4dC1tZW51IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMC44KTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBsb250ZXItaXRlbSB7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBwYWRkaW5nOiAycHggMTVweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHN0YXJ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLnBsb250ZXItaXRlbTpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICB9XG5cbiAgICBgXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtDb29yZGluYXRlQ29udmVydGVyXSxcbiAgfVxuKVxuZXhwb3J0IGNsYXNzIEFjRGVmYXVsdFBsb250ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwbG9udGVyU2VydmljZTogUGxvbnRlclNlcnZpY2UsXG4gICAgICAgICAgICAgIHByaXZhdGUgY2Q6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICAgICAgICBwcml2YXRlIGdlb0NvbnZlcnRlcjogQ29vcmRpbmF0ZUNvbnZlcnRlcikge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5wbG9udGVyU2VydmljZS5wbG9udGVyQ2hhbmdlTm90aWZpZXIuc3Vic2NyaWJlKCgpID0+IHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpKTtcbiAgfVxuXG4gIGdldCBwbG9udGVyUG9zaXRpb24oKSB7XG4gICAgaWYgKHRoaXMucGxvbnRlclNlcnZpY2UucGxvbnRlclNob3duKSB7XG4gICAgICBjb25zdCBzY3JlZW5Qb3MgPSB0aGlzLnBsb250ZXJTZXJ2aWNlLnBsb250ZXJDbGlja1Bvc2l0aW9uLmVuZFBvc2l0aW9uO1xuICAgICAgcmV0dXJuIHRoaXMuZ2VvQ29udmVydGVyLnNjcmVlblRvQ2FydGVzaWFuMyhzY3JlZW5Qb3MpO1xuICAgIH1cbiAgfVxuXG4gIGNob29zZUVudGl0eShlbnRpdHk6IGFueSkge1xuICAgIHRoaXMucGxvbnRlclNlcnZpY2UucmVzb2x2ZVBsb250ZXIoZW50aXR5KTtcbiAgfVxufVxuIl19