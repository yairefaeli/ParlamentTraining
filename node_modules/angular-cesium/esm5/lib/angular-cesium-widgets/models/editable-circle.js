/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { AcEntity } from '../../angular-cesium/models/ac-entity';
import { EditPoint } from './edit-point';
import { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';
import { EditArc } from './edit-arc';
import { defaultLabelProps } from './label-props';
var EditableCircle = /** @class */ (function (_super) {
    tslib_1.__extends(EditableCircle, _super);
    function EditableCircle(id, circlesLayer, pointsLayer, arcsLayer, options) {
        var _this = _super.call(this) || this;
        _this.id = id;
        _this.circlesLayer = circlesLayer;
        _this.pointsLayer = pointsLayer;
        _this.arcsLayer = arcsLayer;
        _this.options = options;
        _this.doneCreation = false;
        _this._enableEdit = true;
        _this._labels = [];
        _this._circleProps = options.circleProps;
        _this._pointProps = options.pointProps;
        _this._polylineProps = options.polylineProps;
        return _this;
    }
    Object.defineProperty(EditableCircle.prototype, "labels", {
        get: /**
         * @return {?}
         */
        function () {
            return this._labels;
        },
        set: /**
         * @param {?} labels
         * @return {?}
         */
        function (labels) {
            var _this = this;
            if (!labels || !this._center || !this._radiusPoint) {
                return;
            }
            this._labels = labels.map(function (label, index) {
                if (!label.position) {
                    if (index !== labels.length - 1) {
                        label.position = _this._center.getPosition();
                    }
                    else {
                        label.position = _this._radiusPoint.getPosition();
                    }
                }
                return Object.assign({}, defaultLabelProps, label);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "polylineProps", {
        get: /**
         * @return {?}
         */
        function () {
            return this._polylineProps;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._polylineProps = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "pointProps", {
        get: /**
         * @return {?}
         */
        function () {
            return this._pointProps;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._pointProps = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "circleProps", {
        get: /**
         * @return {?}
         */
        function () {
            return this._circleProps;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._circleProps = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "center", {
        get: /**
         * @return {?}
         */
        function () {
            return this._center;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "radiusPoint", {
        get: /**
         * @return {?}
         */
        function () {
            return this._radiusPoint;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditableCircle.prototype, "enableEdit", {
        get: /**
         * @return {?}
         */
        function () {
            return this._enableEdit;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._enableEdit = value;
            this._center.show = value;
            this._radiusPoint.show = value;
            this.updatePointsLayer();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} center
     * @param {?} radiusPoint
     * @param {?=} centerPointProp
     * @param {?=} radiusPointProp
     * @param {?=} circleProp
     * @return {?}
     */
    EditableCircle.prototype.setManually = /**
     * @param {?} center
     * @param {?} radiusPoint
     * @param {?=} centerPointProp
     * @param {?=} radiusPointProp
     * @param {?=} circleProp
     * @return {?}
     */
    function (center, radiusPoint, centerPointProp, radiusPointProp, circleProp) {
        if (centerPointProp === void 0) { centerPointProp = this.pointProps; }
        if (radiusPointProp === void 0) { radiusPointProp = this.pointProps; }
        if (circleProp === void 0) { circleProp = this.circleProps; }
        if (!this._center) {
            this._center = new EditPoint(this.id, center, centerPointProp);
        }
        else {
            this._center.setPosition(center);
        }
        if (!this._radiusPoint) {
            this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);
        }
        else {
            this._radiusPoint.setPosition(radiusPoint);
        }
        if (!this._outlineArc) {
            this.createOutlineArc();
        }
        else {
            this._outlineArc.radius = this.getRadius();
        }
        this.circleProps = circleProp;
        this.doneCreation = true;
        this.updateArcsLayer();
        this.updatePointsLayer();
        this.updateCirclesLayer();
    };
    /**
     * @param {?} position
     * @return {?}
     */
    EditableCircle.prototype.addPoint = /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        if (this.doneCreation) {
            return;
        }
        if (!this._center) {
            this._center = new EditPoint(this.id, position, this.pointProps);
            this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);
            if (!this._outlineArc) {
                this.createOutlineArc();
            }
        }
        this.updateArcsLayer();
        this.updatePointsLayer();
        this.updateCirclesLayer();
    };
    /**
     * @param {?} position
     * @return {?}
     */
    EditableCircle.prototype.addLastPoint = /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        if (this.doneCreation || !this._center || !this._radiusPoint) {
            return;
        }
        this._radiusPoint.setPosition(position);
        this.doneCreation = true;
        this.updatePointsLayer();
        this.updateCirclesLayer();
    };
    /**
     * @param {?} toPosition
     * @return {?}
     */
    EditableCircle.prototype.movePoint = /**
     * @param {?} toPosition
     * @return {?}
     */
    function (toPosition) {
        if (!this._center || !this._radiusPoint) {
            return;
        }
        this._radiusPoint.setPosition(toPosition);
        this._outlineArc.radius = this.getRadius();
        this.updateArcsLayer();
        this.updatePointsLayer();
        this.updateCirclesLayer();
    };
    /**
     * @param {?} dragStartPosition
     * @param {?} dragEndPosition
     * @return {?}
     */
    EditableCircle.prototype.moveCircle = /**
     * @param {?} dragStartPosition
     * @param {?} dragEndPosition
     * @return {?}
     */
    function (dragStartPosition, dragEndPosition) {
        if (!this.doneCreation) {
            return;
        }
        if (!this.lastDraggedToPosition) {
            this.lastDraggedToPosition = dragStartPosition;
        }
        /** @type {?} */
        var radius = this.getRadius();
        /** @type {?} */
        var delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);
        GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);
        this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));
        this._outlineArc.radius = this.getRadius();
        this.updateArcsLayer();
        this.updatePointsLayer();
        this.updateCirclesLayer();
        this.lastDraggedToPosition = dragEndPosition;
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.endMovePolygon = /**
     * @return {?}
     */
    function () {
        this.lastDraggedToPosition = undefined;
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getRadius = /**
     * @return {?}
     */
    function () {
        if (!this._center || !this._radiusPoint) {
            return 0;
        }
        return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getRadiusCallbackProperty = /**
     * @return {?}
     */
    function () {
        return new Cesium.CallbackProperty(this.getRadius.bind(this), false);
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getCenter = /**
     * @return {?}
     */
    function () {
        return this._center ? this._center.getPosition() : undefined;
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getCenterCallbackProperty = /**
     * @return {?}
     */
    function () {
        return new Cesium.CallbackProperty(this.getCenter.bind(this), false);
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getRadiusPoint = /**
     * @return {?}
     */
    function () {
        return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.dispose = /**
     * @return {?}
     */
    function () {
        if (this._center) {
            this.pointsLayer.remove(this._center.getId());
        }
        if (this._radiusPoint) {
            this.pointsLayer.remove(this._radiusPoint.getId());
        }
        if (this._outlineArc) {
            this.arcsLayer.remove(this._outlineArc.getId());
        }
        this.circlesLayer.remove(this.id);
    };
    /**
     * @return {?}
     */
    EditableCircle.prototype.getId = /**
     * @return {?}
     */
    function () {
        return this.id;
    };
    /**
     * @private
     * @return {?}
     */
    EditableCircle.prototype.updateCirclesLayer = /**
     * @private
     * @return {?}
     */
    function () {
        this.circlesLayer.update(this, this.id);
    };
    /**
     * @private
     * @return {?}
     */
    EditableCircle.prototype.updatePointsLayer = /**
     * @private
     * @return {?}
     */
    function () {
        if (this._center) {
            this.pointsLayer.update(this._center, this._center.getId());
        }
        if (this._radiusPoint) {
            this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());
        }
    };
    /**
     * @private
     * @return {?}
     */
    EditableCircle.prototype.updateArcsLayer = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this._outlineArc) {
            return;
        }
        this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());
    };
    /**
     * @private
     * @return {?}
     */
    EditableCircle.prototype.createOutlineArc = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this._center || !this._radiusPoint) {
            return;
        }
        this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);
    };
    return EditableCircle;
}(AcEntity));
export { EditableCircle };
if (false) {
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._center;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._radiusPoint;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._outlineArc;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.doneCreation;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._enableEdit;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.lastDraggedToPosition;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._circleProps;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._pointProps;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._polylineProps;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype._labels;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.id;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.circlesLayer;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.pointsLayer;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.arcsLayer;
    /**
     * @type {?}
     * @private
     */
    EditableCircle.prototype.options;
}
//# sourceMappingURL=data:application/json;base64,